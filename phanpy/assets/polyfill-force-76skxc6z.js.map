{"version":3,"file":"polyfill-force-76skxc6z.js","sources":["../../node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","../../node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","../../node_modules/decimal.js/decimal.mjs","../../node_modules/@formatjs/ecma402-abstract/lib/constants.js","../../node_modules/@formatjs/fast-memoize/lib/index.js","../../node_modules/@formatjs/ecma402-abstract/lib/utils.js","../../node_modules/@formatjs/ecma402-abstract/lib/262.js","../../node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","../../node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","../../node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","../../node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","../../node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","../../node_modules/@formatjs/ecma402-abstract/lib/GetStringOrBooleanOption.js","../../node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","../../node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","../../node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","../../node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ApplyUnsignedRoundingMode.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CollapseNumberRange.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/GetUnsignedRoundingMode.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","../../node_modules/@formatjs/ecma402-abstract/lib/regex.generated.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatApproximately.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumeric.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberRangePattern.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRange.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRangeToParts.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","../../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","../../node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","../../node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","../../node_modules/@formatjs/ecma402-abstract/lib/data.js","../../node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","../../node_modules/@formatjs/ecma402-abstract/lib/ToIntlMathematicalValue.js","../../node_modules/@formatjs/intl-segmenter/src/cldr-segmentation-rules.generated.js","../../node_modules/@formatjs/intl-segmenter/src/segmentation-utils.js","../../node_modules/@formatjs/intl-segmenter/src/segmenter.js","../../node_modules/@formatjs/intl-segmenter/polyfill-force.js"],"sourcesContent":["/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n    var zoneNames = _a.zoneNames, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var uppercasedZones = zoneNames.reduce(function (all, z) {\n        all[z.toUpperCase()] = z;\n        return all;\n    }, {});\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n        return 'UTC';\n    }\n    return ianaTimeZone;\n}\n","/*!\r\n *  decimal.js v10.5.0\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or ±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  // See https://github.com/MikeMcl/decimal.js/pull/217\r\n  x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, -1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is ±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with different signs.\r\n    // Return NaN if both are ±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is ±Infinity or x is ±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with the same sign.\r\n    // Return NaN if both are ±Infinity with different signs.\r\n    // Return y if x is finite and y is ±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, ±Infinity or ±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n      ? NaN\r\n\r\n      // Return ±Infinity if either is ±Infinity.\r\n      // Return ±0 if either is ±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, ±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either ±Infinity, NaN or ±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n */\r\nfunction maxOrMin(Ctor, args, n) {\r\n  var k, y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n\r\n    // NaN?\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    }\r\n\r\n    k = x.cmp(y);\r\n\r\n    if (k === n || k === 0 && x.s === n) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// ±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|bigint|Decimal} The y-coordinate.\r\n * x {number|string|bigint|Decimal} The x-coordinate.\r\n *\r\n * atan2(±0, -0)               = ±pi\r\n * atan2(±0, +0)               = ±0\r\n * atan2(±0, -x)               = ±pi for x > 0\r\n * atan2(±0, x)                = ±0 for x > 0\r\n * atan2(-y, ±0)               = -pi/2 for y > 0\r\n * atan2(y, ±0)                = pi/2 for y > 0\r\n * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n * atan2(±Infinity, +Infinity) = ±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both ±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is ±Infinity or y is ±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is ±Infinity or x is ±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|bigint|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Infinity or NaN?\r\n      if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    if (t === 'string') {\r\n      if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        if (i === 43) v = v.slice(1);  // plus sign\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    if (t === 'bigint') {\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    throw Error(invalidArgument + v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n * y {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, -1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The base.\r\n * y {number|string|bigint|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n","import Decimal from 'decimal.js';\nexport var TEN = new Decimal(10);\nexport var ZERO = new Decimal(0);\nexport var NEGATIVE_ZERO = new Decimal(-0);\n","//\n// Main\n//\nexport function memoize(fn, options) {\n    var cache = options && options.cache ? options.cache : cacheDefault;\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\n    return strategy(fn, {\n        cache: cache,\n        serializer: serializer,\n    });\n}\n//\n// Strategy\n//\nfunction isPrimitive(value) {\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\nfunction monadic(fn, cache, serializer, arg) {\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.call(this, arg);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n    var args = Array.prototype.slice.call(arguments, 3);\n    var cacheKey = serializer(args);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.apply(this, args);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n    return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n    var strategy = fn.length === 1 ? monadic : variadic;\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\n//\n// Serializer\n//\nvar serializerDefault = function () {\n    return JSON.stringify(arguments);\n};\n//\n// Cache\n//\nvar ObjectWithoutPrototypeCache = /** @class */ (function () {\n    function ObjectWithoutPrototypeCache() {\n        this.cache = Object.create(null);\n    }\n    ObjectWithoutPrototypeCache.prototype.get = function (key) {\n        return this.cache[key];\n    };\n    ObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n        this.cache[key] = value;\n    };\n    return ObjectWithoutPrototypeCache;\n}());\nvar cacheDefault = {\n    create: function create() {\n        return new ObjectWithoutPrototypeCache();\n    },\n};\nexport var strategies = {\n    variadic: strategyVariadic,\n    monadic: strategyMonadic,\n};\n","import { __spreadArray } from \"tslib\";\nimport { memoize, strategies } from '@formatjs/fast-memoize';\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(\"\".concat(pl, \" InternalSlot has not been initialized\"));\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\n/**\n * 7.3.5 CreateDataProperty\n * @param target\n * @param name\n * @param value\n */\nexport function createDataProperty(target, name, value) {\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\nexport var createMemoizedNumberFormat = memoize(function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n}, {\n    strategy: strategies.variadic,\n});\nexport var createMemoizedDateTimeFormat = memoize(function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n}, {\n    strategy: strategies.variadic,\n});\nexport var createMemoizedPluralRules = memoize(function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n}, {\n    strategy: strategies.variadic,\n});\nexport var createMemoizedLocale = memoize(function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return new ((_a = Intl.Locale).bind.apply(_a, __spreadArray([void 0], args, false)))();\n}, {\n    strategy: strategies.variadic,\n});\nexport var createMemoizedListFormat = memoize(function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return new ((_a = Intl.ListFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n}, {\n    strategy: strategies.variadic,\n});\n","import { Decimal } from 'decimal.js';\nimport { ZERO } from './constants';\nimport { invariant } from './utils';\n/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(arg) {\n    if (typeof arg === 'number') {\n        return new Decimal(arg);\n    }\n    invariant(typeof arg !== 'bigint' && typeof arg !== 'symbol', 'BigInt and Symbol are not supported', TypeError);\n    if (arg === undefined) {\n        return new Decimal(NaN);\n    }\n    if (arg === null || arg === 0) {\n        return ZERO;\n    }\n    if (arg === true) {\n        return new Decimal(1);\n    }\n    if (typeof arg === 'string') {\n        try {\n            return new Decimal(arg);\n        }\n        catch (e) {\n            return new Decimal(NaN);\n        }\n    }\n    invariant(typeof arg === 'object', 'object expected', TypeError);\n    var primValue = ToPrimitive(arg, 'number');\n    invariant(typeof primValue !== 'object', 'object expected', TypeError);\n    return ToNumber(primValue);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (number.isNaN() || number.isZero()) {\n        return ZERO;\n    }\n    if (number.isFinite()) {\n        return number;\n    }\n    var integer = number.abs().floor();\n    if (number.isNegative()) {\n        integer = integer.negated();\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!time.isFinite()) {\n        return new Decimal(NaN);\n    }\n    if (time.abs().greaterThan(8.64 * 1e15)) {\n        return new Decimal(NaN);\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n    return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n    if (!IsCallable(C)) {\n        return false;\n    }\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n        return O instanceof BC;\n    }\n    if (typeof O !== 'object') {\n        return false;\n    }\n    var P = C.prototype;\n    if (typeof P !== 'object') {\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n    return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n    return mod(t, MS_PER_SECOND);\n}\nfunction OrdinaryToPrimitive(O, hint) {\n    var methodNames;\n    if (hint === 'string') {\n        methodNames = ['toString', 'valueOf'];\n    }\n    else {\n        methodNames = ['valueOf', 'toString'];\n    }\n    for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {\n        var name_1 = methodNames_1[_i];\n        var method = O[name_1];\n        if (IsCallable(method)) {\n            var result = method.call(O);\n            if (typeof result !== 'object') {\n                return result;\n            }\n        }\n    }\n    throw new TypeError('Cannot convert object to primitive value');\n}\nexport function ToPrimitive(input, preferredType) {\n    if (typeof input === 'object' && input != null) {\n        var exoticToPrim = Symbol.toPrimitive in input ? input[Symbol.toPrimitive] : undefined;\n        var hint = void 0;\n        if (exoticToPrim !== undefined) {\n            if (preferredType === undefined) {\n                hint = 'default';\n            }\n            else if (preferredType === 'string') {\n                hint = 'string';\n            }\n            else {\n                invariant(preferredType === 'number', 'preferredType must be \"string\" or \"number\"');\n                hint = 'number';\n            }\n            var result = exoticToPrim.call(input, hint);\n            if (typeof result !== 'object') {\n                return result;\n            }\n            throw new TypeError('Cannot convert exotic object to primitive.');\n        }\n        if (preferredType === undefined) {\n            preferredType = 'number';\n        }\n        return OrdinaryToPrimitive(input, preferredType);\n    }\n    return input;\n}\n","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\nexport function CoerceOptionsToObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    return ToObject(options);\n}\n","/**\n * https://tc39.es/ecma402/#sec-defaultnumberoption\n * @param val\n * @param min\n * @param max\n * @param fallback\n */\nexport function DefaultNumberOption(inputVal, min, max, fallback) {\n    if (inputVal === undefined) {\n        // @ts-expect-error\n        return fallback;\n    }\n    var val = Number(inputVal);\n    if (isNaN(val) || val < min || val > max) {\n        throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\n    }\n    return Math.floor(val);\n}\n","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    return DefaultNumberOption(val, minimum, maximum, fallback);\n}\n","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n    if (typeof opts !== 'object') {\n        throw new TypeError('Options must be an object');\n    }\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = ToString(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\n        }\n        return value;\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    if (typeof options === 'object') {\n        return options;\n    }\n    throw new TypeError('Options must be an object');\n}\n","/**\n * https://tc39.es/ecma402/#sec-getstringorbooleanoption\n * @param opts\n * @param prop\n * @param values\n * @param trueValue\n * @param falsyValue\n * @param fallback\n */\nimport { ToString } from './262';\nexport function GetStringOrBooleanOption(opts, prop, values, trueValue, falsyValue, fallback) {\n    var value = opts[prop];\n    if (value === undefined) {\n        return fallback;\n    }\n    if (value === true) {\n        return trueValue;\n    }\n    var valueBoolean = Boolean(value);\n    if (valueBoolean === false) {\n        return falsyValue;\n    }\n    value = ToString(value);\n    if (value === 'true' || value === 'false') {\n        return fallback;\n    }\n    if ((values || []).indexOf(value) === -1) {\n        throw new RangeError(\"Invalid value \".concat(value));\n    }\n    return value;\n}\n","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n    var zoneNamesFromData = _a.zoneNamesFromData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var zoneNames = new Set();\n    var linkNames = new Set();\n    zoneNamesFromData.map(function (z) { return z.toUpperCase(); }).forEach(function (z) { return zoneNames.add(z); });\n    Object.keys(uppercaseLinks).forEach(function (linkName) {\n        linkNames.add(linkName.toUpperCase());\n        zoneNames.add(uppercaseLinks[linkName].toUpperCase());\n    });\n    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\n}\n","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    var numerator = units[0], denominator = units[1];\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\n        return false;\n    }\n    return true;\n}\n","import { invariant } from '../utils';\nexport function ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode) {\n    if (x.eq(r1))\n        return r1;\n    invariant(r1.lessThan(x) && x.lessThan(r2), \"x should be between r1 and r2 but x=\".concat(x, \", r1=\").concat(r1, \", r2=\").concat(r2));\n    if (unsignedRoundingMode === 'zero') {\n        return r1;\n    }\n    if (unsignedRoundingMode === 'infinity') {\n        return r2;\n    }\n    var d1 = x.minus(r1);\n    var d2 = r2.minus(x);\n    if (d1.lessThan(d2)) {\n        return r1;\n    }\n    if (d2.lessThan(d1)) {\n        return r2;\n    }\n    invariant(d1.eq(d2), 'd1 should be equal to d2');\n    if (unsignedRoundingMode === 'half-zero') {\n        return r1;\n    }\n    if (unsignedRoundingMode === 'half-infinity') {\n        return r2;\n    }\n    invariant(unsignedRoundingMode === 'half-even', 'unsignedRoundingMode should be half-even');\n    var cardinality = r1.div(r2.minus(r1)).mod(2);\n    if (cardinality.isZero()) {\n        return r1;\n    }\n    return r2;\n}\n","var PART_TYPES_TO_COLLAPSE = new Set([\n    'unit',\n    'exponentMinusSign',\n    'minusSign',\n    'plusSign',\n    'percentSign',\n    'exponentSeparator',\n    'percent',\n    'percentSign',\n    'currency',\n    'literal',\n]);\n/**\n * https://tc39.es/ecma402/#sec-collapsenumberrange\n * LDML: https://unicode-org.github.io/cldr/ldml/tr35-numbers.html#collapsing-number-ranges\n */\nexport function CollapseNumberRange(numberFormat, result, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    var rangeSignRegex = new RegExp(\"s?[\".concat(symbols.rangeSign, \"]s?\"));\n    var rangeSignIndex = result.findIndex(function (r) { return r.type === 'literal' && rangeSignRegex.test(r.value); });\n    var prefixSignParts = [];\n    for (var i = rangeSignIndex - 1; i >= 0; i--) {\n        if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\n            break;\n        }\n        prefixSignParts.unshift(result[i]);\n    }\n    // Don't collapse if it's a single code point\n    if (Array.from(prefixSignParts.map(function (p) { return p.value; }).join('')).length > 1) {\n        var newResult = Array.from(result);\n        newResult.splice(rangeSignIndex - prefixSignParts.length, prefixSignParts.length);\n        return newResult;\n    }\n    var suffixSignParts = [];\n    for (var i = rangeSignIndex + 1; i < result.length; i++) {\n        if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\n            break;\n        }\n        suffixSignParts.push(result[i]);\n    }\n    // Don't collapse if it's a single code point\n    if (Array.from(suffixSignParts.map(function (p) { return p.value; }).join('')).length > 1) {\n        var newResult = Array.from(result);\n        newResult.splice(rangeSignIndex + 1, suffixSignParts.length);\n        return newResult;\n    }\n    return result;\n}\n","import Decimal from 'decimal.js';\nimport { invariant } from '../utils';\nDecimal.set({\n    toExpPos: 100,\n});\n/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(internalSlots, magnitude) {\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude.toNumber();\n        case 'engineering':\n            var thousands = magnitude.div(3).floor();\n            return thousands.times(3).toNumber();\n        default: {\n            invariant(notation === 'compact', 'Invalid notation');\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = Decimal.pow(10, magnitude).toString();\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\n","var negativeMapping = {\n    ceil: 'zero',\n    floor: 'infinity',\n    expand: 'infinity',\n    trunc: 'zero',\n    halfCeil: 'half-zero',\n    halfFloor: 'half-infinity',\n    halfExpand: 'half-infinity',\n    halfTrunc: 'half-zero',\n    halfEven: 'half-even',\n};\nvar positiveMapping = {\n    ceil: 'infinity',\n    floor: 'zero',\n    expand: 'infinity',\n    trunc: 'zero',\n    halfCeil: 'half-infinity',\n    halfFloor: 'half-zero',\n    halfExpand: 'half-infinity',\n    halfTrunc: 'half-zero',\n    halfEven: 'half-even',\n};\nexport function GetUnsignedRoundingMode(roundingMode, isNegative) {\n    if (isNegative) {\n        return negativeMapping[roundingMode];\n    }\n    return positiveMapping[roundingMode];\n}\n","import Decimal from 'decimal.js';\nimport { repeat } from '../utils';\nimport { ApplyUnsignedRoundingMode } from './ApplyUnsignedRoundingMode';\n//IMPL: Setting Decimal configuration\nDecimal.set({\n    toExpPos: 100,\n});\n//IMPL: Helper function to calculate raw fixed value\nfunction ToRawFixedFn(n, f) {\n    return n.times(Decimal.pow(10, -f));\n}\n//IMPL: Helper function to find n1 and r1\nfunction findN1R1(x, f, roundingIncrement) {\n    var nx = x.times(Decimal.pow(10, f)).floor();\n    var n1 = nx.div(roundingIncrement).floor().times(roundingIncrement);\n    var r1 = ToRawFixedFn(n1, f);\n    return {\n        n1: n1,\n        r1: r1,\n    };\n}\n//IMPL: Helper function to find n2 and r2\nfunction findN2R2(x, f, roundingIncrement) {\n    var nx = x.times(Decimal.pow(10, f)).ceil();\n    var n2 = nx.div(roundingIncrement).ceil().times(roundingIncrement);\n    var r2 = ToRawFixedFn(n2, f);\n    return {\n        n2: n2,\n        r2: r2,\n    };\n}\n/**\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction an integer between 0 and 20\n * @param maxFraction an integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction, roundingIncrement, unsignedRoundingMode) {\n    // 1. Let f be maxFraction.\n    var f = maxFraction;\n    // 2. Let n1 and r1 be the results of performing the maximized rounding of x to f fraction digits.\n    var _a = findN1R1(x, f, roundingIncrement), n1 = _a.n1, r1 = _a.r1;\n    // 3. Let n2 and r2 be the results of performing the minimized rounding of x to f fraction digits.\n    var _b = findN2R2(x, f, roundingIncrement), n2 = _b.n2, r2 = _b.r2;\n    // 4. Let r be ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode).\n    var r = ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode);\n    var n, xFinal;\n    var m;\n    // 5. If r is equal to r1, then\n    if (r.eq(r1)) {\n        // a. Let n be n1.\n        n = n1;\n        // b. Let xFinal be r1.\n        xFinal = r1;\n    }\n    else {\n        // 6. Else,\n        // a. Let n be n2.\n        n = n2;\n        // b. Let xFinal be r2.\n        xFinal = r2;\n    }\n    // 7. If n is 0, let m be \"0\".\n    if (n.isZero()) {\n        m = '0';\n    }\n    else {\n        // 8. Else, let m be the String representation of n.\n        m = n.toString();\n    }\n    var int;\n    // 9. If f is not 0, then\n    if (f !== 0) {\n        // a. Let k be the length of m.\n        var k = m.length;\n        // b. If k < f, then\n        if (k <= f) {\n            // i. Let z be the String value consisting of f + 1 - k occurrences of the character \"0\".\n            var z = repeat('0', f - k + 1);\n            // ii. Set m to the string-concatenation of z and m.\n            m = z + m;\n            // iii. Set k to f + 1.\n            k = f + 1;\n        }\n        // c. Let a be the substring of m from 0 to k - f.\n        var a = m.slice(0, k - f);\n        // d. Let b be the substring of m from k - f to k.\n        var b = m.slice(m.length - f);\n        // e. Set m to the string-concatenation of a, \".\", and b.\n        m = a + '.' + b;\n        // f. Let int be the length of a.\n        int = a.length;\n    }\n    else {\n        // 10. Else, let int be the length of m.\n        int = m.length;\n    }\n    // 11. Let cut be maxFraction - minFraction.\n    var cut = maxFraction - minFraction;\n    // 12. Repeat, while cut > 0 and the last character of m is \"0\",\n    while (cut > 0 && m[m.length - 1] === '0') {\n        // a. Remove the last character from m.\n        m = m.slice(0, m.length - 1);\n        // b. Decrease cut by 1.\n        cut--;\n    }\n    // 13. If the last character of m is \".\", then\n    if (m[m.length - 1] === '\\u002e') {\n        // a. Remove the last character from m.\n        m = m.slice(0, m.length - 1);\n    }\n    // 14. Return the Record { [[FormattedString]]: m, [[RoundedNumber]]: xFinal, [[IntegerDigitsCount]]: int, [[RoundingMagnitude]]: -f }.\n    return {\n        formattedString: m,\n        roundedNumber: xFinal,\n        integerDigitsCount: int,\n        roundingMagnitude: -f,\n    };\n}\n","import Decimal from 'decimal.js';\nimport { ZERO } from '../constants';\nimport { invariant, repeat } from '../utils';\nimport { ApplyUnsignedRoundingMode } from './ApplyUnsignedRoundingMode';\n//IMPL: Helper function to find n1, e1, and r1\nfunction findN1E1R1(x, p) {\n    var maxN1 = Decimal.pow(10, p);\n    var minN1 = Decimal.pow(10, p - 1);\n    var maxE1 = x.div(minN1).log(10).plus(p).minus(1).ceil();\n    var currentE1 = maxE1;\n    while (true) {\n        var currentN1 = x.div(Decimal.pow(10, currentE1.minus(p).plus(1))).floor();\n        if (currentN1.lessThan(maxN1) && currentN1.greaterThanOrEqualTo(minN1)) {\n            var currentR1 = currentN1.times(Decimal.pow(10, currentE1.minus(p).plus(1)));\n            if (currentR1.lessThanOrEqualTo(x)) {\n                return {\n                    n1: currentN1,\n                    e1: currentE1,\n                    r1: currentR1,\n                };\n            }\n        }\n        currentE1 = currentE1.minus(1);\n    }\n}\n//IMPL: Helper function to find n2, e2, and r2\nfunction findN2E2R2(x, p) {\n    var maxN2 = Decimal.pow(10, p);\n    var minN2 = Decimal.pow(10, p - 1);\n    var minE2 = x.div(maxN2).log(10).plus(p).minus(1).floor();\n    var currentE2 = minE2;\n    while (true) {\n        var currentN2 = x.div(Decimal.pow(10, currentE2.minus(p).plus(1))).ceil();\n        if (currentN2.lessThan(maxN2) && currentN2.greaterThanOrEqualTo(minN2)) {\n            var currentR2 = currentN2.times(Decimal.pow(10, currentE2.minus(p).plus(1)));\n            if (currentR2.greaterThanOrEqualTo(x)) {\n                return {\n                    n2: currentN2,\n                    e2: currentE2,\n                    r2: currentR2,\n                };\n            }\n        }\n        currentE2 = currentE2.plus(1);\n    }\n}\n/**\n * https://tc39.es/ecma402/#sec-torawprecision\n * @param x a finite non-negative Number or BigInt\n * @param minPrecision an integer between 1 and 21\n * @param maxPrecision an integer between 1 and 21\n */\nexport function ToRawPrecision(x, minPrecision, maxPrecision, unsignedRoundingMode) {\n    // 1. Let p be maxPrecision.\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    // 2. If x = 0, then\n    if (x.isZero()) {\n        // a. Let m be the String value consisting of p occurrences of the character \"0\".\n        m = repeat('0', p);\n        // b. Let e be 0.\n        e = 0;\n        // c. Let xFinal be 0.\n        xFinal = ZERO;\n    }\n    else {\n        // 3. Else,\n        // a. Let {n1, e1, r1} be the result of findN1E1R1(x, p).\n        var _a = findN1E1R1(x, p), n1 = _a.n1, e1 = _a.e1, r1 = _a.r1;\n        // b. Let {n2, e2, r2} be the result of findN2E2R2(x, p).\n        var _b = findN2E2R2(x, p), n2 = _b.n2, e2 = _b.e2, r2 = _b.r2;\n        // c. Let r be ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode).\n        var r = ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode);\n        var n \n        // d. If r = r1, then\n        = void 0;\n        // d. If r = r1, then\n        if (r.eq(r1)) {\n            // i. Let n be n1.\n            n = n1;\n            // ii. Let e be e1.\n            e = e1.toNumber();\n            // iii. Let xFinal be r1.\n            xFinal = r1;\n        }\n        else {\n            // e. Else,\n            // i. Let n be n2.\n            n = n2;\n            // ii. Let e be e2.\n            e = e2.toNumber();\n            // iii. Let xFinal be r2.\n            xFinal = r2;\n        }\n        // f. Let m be the String representation of n.\n        m = n.toString();\n    }\n    var int;\n    // 4. If e ≥ p - 1, then\n    if (e >= p - 1) {\n        // a. Let m be the string-concatenation of m and p - 1 - e occurrences of the character \"0\".\n        m = m + repeat('0', e - p + 1);\n        // b. Let int be e + 1.\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        // 5. Else if e ≥ 0, then\n        // a. Let m be the string-concatenation of the first e + 1 characters of m, \".\", and the remaining p - (e + 1) characters of m.\n        m = m.slice(0, e + 1) + '.' + m.slice(m.length - (p - (e + 1)));\n        // b. Let int be e + 1.\n        int = e + 1;\n    }\n    else {\n        // 6. Else,\n        // a. Assert: e < 0.\n        invariant(e < 0, 'e should be less than 0');\n        // b. Let m be the string-concatenation of \"0.\", -e - 1 occurrences of the character \"0\", and m.\n        m = '0.' + repeat('0', -e - 1) + m;\n        // c. Let int be 1.\n        int = 1;\n    }\n    // 7. If m contains \".\", and maxPrecision > minPrecision, then\n    if (m.includes('.') && maxPrecision > minPrecision) {\n        // a. Let cut be maxPrecision - minPrecision.\n        var cut = maxPrecision - minPrecision;\n        // b. Repeat, while cut > 0 and the last character of m is \"0\",\n        while (cut > 0 && m[m.length - 1] === '0') {\n            // i. Remove the last character from m.\n            m = m.slice(0, m.length - 1);\n            // ii. Decrease cut by 1.\n            cut--;\n        }\n        // c. If the last character of m is \".\", then\n        if (m[m.length - 1] === '.') {\n            // i. Remove the last character from m.\n            m = m.slice(0, m.length - 1);\n        }\n    }\n    // 8. Return the Record { [[FormattedString]]: m, [[RoundedNumber]]: xFinal, [[IntegerDigitsCount]]: int, [[RoundingMagnitude]]: e }.\n    return {\n        formattedString: m,\n        roundedNumber: xFinal,\n        integerDigitsCount: int,\n        roundingMagnitude: e,\n    };\n}\n","import { NEGATIVE_ZERO, ZERO } from '../constants';\nimport { invariant, repeat } from '../utils';\nimport { GetUnsignedRoundingMode } from './GetUnsignedRoundingMode';\nimport { ToRawFixed } from './ToRawFixed';\nimport { ToRawPrecision } from './ToRawPrecision';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, _x) {\n    var x = _x;\n    var sign;\n    // -0\n    if (x.isZero() && x.isNegative()) {\n        sign = 'negative';\n        x = ZERO;\n    }\n    else {\n        invariant(x.isFinite(), 'NumberFormatDigitInternalSlots value is not finite');\n        if (x.lessThan(0)) {\n            sign = 'negative';\n        }\n        else {\n            sign = 'positive';\n        }\n        if (sign === 'negative') {\n            x = x.negated();\n        }\n    }\n    var result;\n    var roundingType = intlObject.roundingType;\n    var unsignedRoundingMode = GetUnsignedRoundingMode(intlObject.roundingMode, sign === 'negative');\n    switch (roundingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits, unsignedRoundingMode);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits, intlObject.roundingIncrement, unsignedRoundingMode);\n            break;\n        default:\n            var sResult = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits, unsignedRoundingMode);\n            var fResult = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits, intlObject.roundingIncrement, unsignedRoundingMode);\n            if (intlObject.roundingType === 'morePrecision') {\n                if (sResult.roundingMagnitude <= fResult.roundingMagnitude) {\n                    result = sResult;\n                }\n                else {\n                    result = fResult;\n                }\n            }\n            else {\n                invariant(intlObject.roundingType === 'lessPrecision', 'Invalid roundingType');\n                if (sResult.roundingMagnitude <= fResult.roundingMagnitude) {\n                    result = fResult;\n                }\n                else {\n                    result = sResult;\n                }\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    if (intlObject.trailingZeroDisplay === 'stripIfInteger' && x.isInteger()) {\n        var i = string.indexOf('.');\n        if (i > -1) {\n            string = string.slice(0, i);\n        }\n    }\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (sign === 'negative') {\n        if (x.isZero()) {\n            x = NEGATIVE_ZERO;\n        }\n        else {\n            x = x.negated();\n        }\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n","import Decimal from 'decimal.js';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(internalSlots, x) {\n    if (x.isZero()) {\n        return [0, 0];\n    }\n    if (x.isNegative()) {\n        x = x.negated();\n    }\n    var magnitude = x.log(10).floor();\n    var exponent = ComputeExponentForMagnitude(internalSlots, magnitude);\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = x.times(Decimal.pow(10, -exponent));\n    var formatNumberResult = FormatNumericToString(internalSlots, x);\n    if (formatNumberResult.roundedNumber.isZero()) {\n        return [exponent, magnitude.toNumber()];\n    }\n    var newMagnitude = formatNumberResult.roundedNumber.log(10).floor();\n    if (newMagnitude.eq(magnitude.minus(exponent))) {\n        return [exponent, magnitude.toNumber()];\n    }\n    return [\n        ComputeExponentForMagnitude(internalSlots, magnitude.plus(1)),\n        magnitude.plus(1).toNumber(),\n    ];\n}\n","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n    var currencyDigitsData = _a.currencyDigitsData;\n    return HasOwnProperty(currencyDigitsData, c)\n        ? currencyDigitsData[c]\n        : 2;\n}\n","// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n","export var digitMapping = {\n    \"adlm\": [\n        \"𞥐\",\n        \"𞥑\",\n        \"𞥒\",\n        \"𞥓\",\n        \"𞥔\",\n        \"𞥕\",\n        \"𞥖\",\n        \"𞥗\",\n        \"𞥘\",\n        \"𞥙\"\n    ],\n    \"ahom\": [\n        \"𑜰\",\n        \"𑜱\",\n        \"𑜲\",\n        \"𑜳\",\n        \"𑜴\",\n        \"𑜵\",\n        \"𑜶\",\n        \"𑜷\",\n        \"𑜸\",\n        \"𑜹\"\n    ],\n    \"arab\": [\n        \"٠\",\n        \"١\",\n        \"٢\",\n        \"٣\",\n        \"٤\",\n        \"٥\",\n        \"٦\",\n        \"٧\",\n        \"٨\",\n        \"٩\"\n    ],\n    \"arabext\": [\n        \"۰\",\n        \"۱\",\n        \"۲\",\n        \"۳\",\n        \"۴\",\n        \"۵\",\n        \"۶\",\n        \"۷\",\n        \"۸\",\n        \"۹\"\n    ],\n    \"bali\": [\n        \"᭐\",\n        \"᭑\",\n        \"᭒\",\n        \"᭓\",\n        \"᭔\",\n        \"᭕\",\n        \"᭖\",\n        \"᭗\",\n        \"᭘\",\n        \"᭙\"\n    ],\n    \"beng\": [\n        \"০\",\n        \"১\",\n        \"২\",\n        \"৩\",\n        \"৪\",\n        \"৫\",\n        \"৬\",\n        \"৭\",\n        \"৮\",\n        \"৯\"\n    ],\n    \"bhks\": [\n        \"𑱐\",\n        \"𑱑\",\n        \"𑱒\",\n        \"𑱓\",\n        \"𑱔\",\n        \"𑱕\",\n        \"𑱖\",\n        \"𑱗\",\n        \"𑱘\",\n        \"𑱙\"\n    ],\n    \"brah\": [\n        \"𑁦\",\n        \"𑁧\",\n        \"𑁨\",\n        \"𑁩\",\n        \"𑁪\",\n        \"𑁫\",\n        \"𑁬\",\n        \"𑁭\",\n        \"𑁮\",\n        \"𑁯\"\n    ],\n    \"cakm\": [\n        \"𑄶\",\n        \"𑄷\",\n        \"𑄸\",\n        \"𑄹\",\n        \"𑄺\",\n        \"𑄻\",\n        \"𑄼\",\n        \"𑄽\",\n        \"𑄾\",\n        \"𑄿\"\n    ],\n    \"cham\": [\n        \"꩐\",\n        \"꩑\",\n        \"꩒\",\n        \"꩓\",\n        \"꩔\",\n        \"꩕\",\n        \"꩖\",\n        \"꩗\",\n        \"꩘\",\n        \"꩙\"\n    ],\n    \"deva\": [\n        \"०\",\n        \"१\",\n        \"२\",\n        \"३\",\n        \"४\",\n        \"५\",\n        \"६\",\n        \"७\",\n        \"८\",\n        \"९\"\n    ],\n    \"diak\": [\n        \"𑥐\",\n        \"𑥑\",\n        \"𑥒\",\n        \"𑥓\",\n        \"𑥔\",\n        \"𑥕\",\n        \"𑥖\",\n        \"𑥗\",\n        \"𑥘\",\n        \"𑥙\"\n    ],\n    \"fullwide\": [\n        \"０\",\n        \"１\",\n        \"２\",\n        \"３\",\n        \"４\",\n        \"５\",\n        \"６\",\n        \"７\",\n        \"８\",\n        \"９\"\n    ],\n    \"gong\": [\n        \"𑶠\",\n        \"𑶡\",\n        \"𑶢\",\n        \"𑶣\",\n        \"𑶤\",\n        \"𑶥\",\n        \"𑶦\",\n        \"𑶧\",\n        \"𑶨\",\n        \"𑶩\"\n    ],\n    \"gonm\": [\n        \"𑵐\",\n        \"𑵑\",\n        \"𑵒\",\n        \"𑵓\",\n        \"𑵔\",\n        \"𑵕\",\n        \"𑵖\",\n        \"𑵗\",\n        \"𑵘\",\n        \"𑵙\"\n    ],\n    \"gujr\": [\n        \"૦\",\n        \"૧\",\n        \"૨\",\n        \"૩\",\n        \"૪\",\n        \"૫\",\n        \"૬\",\n        \"૭\",\n        \"૮\",\n        \"૯\"\n    ],\n    \"guru\": [\n        \"੦\",\n        \"੧\",\n        \"੨\",\n        \"੩\",\n        \"੪\",\n        \"੫\",\n        \"੬\",\n        \"੭\",\n        \"੮\",\n        \"੯\"\n    ],\n    \"hanidec\": [\n        \"〇\",\n        \"一\",\n        \"二\",\n        \"三\",\n        \"四\",\n        \"五\",\n        \"六\",\n        \"七\",\n        \"八\",\n        \"九\"\n    ],\n    \"hmng\": [\n        \"𖭐\",\n        \"𖭑\",\n        \"𖭒\",\n        \"𖭓\",\n        \"𖭔\",\n        \"𖭕\",\n        \"𖭖\",\n        \"𖭗\",\n        \"𖭘\",\n        \"𖭙\"\n    ],\n    \"hmnp\": [\n        \"𞅀\",\n        \"𞅁\",\n        \"𞅂\",\n        \"𞅃\",\n        \"𞅄\",\n        \"𞅅\",\n        \"𞅆\",\n        \"𞅇\",\n        \"𞅈\",\n        \"𞅉\"\n    ],\n    \"java\": [\n        \"꧐\",\n        \"꧑\",\n        \"꧒\",\n        \"꧓\",\n        \"꧔\",\n        \"꧕\",\n        \"꧖\",\n        \"꧗\",\n        \"꧘\",\n        \"꧙\"\n    ],\n    \"kali\": [\n        \"꤀\",\n        \"꤁\",\n        \"꤂\",\n        \"꤃\",\n        \"꤄\",\n        \"꤅\",\n        \"꤆\",\n        \"꤇\",\n        \"꤈\",\n        \"꤉\"\n    ],\n    \"khmr\": [\n        \"០\",\n        \"១\",\n        \"២\",\n        \"៣\",\n        \"៤\",\n        \"៥\",\n        \"៦\",\n        \"៧\",\n        \"៨\",\n        \"៩\"\n    ],\n    \"knda\": [\n        \"೦\",\n        \"೧\",\n        \"೨\",\n        \"೩\",\n        \"೪\",\n        \"೫\",\n        \"೬\",\n        \"೭\",\n        \"೮\",\n        \"೯\"\n    ],\n    \"lana\": [\n        \"᪀\",\n        \"᪁\",\n        \"᪂\",\n        \"᪃\",\n        \"᪄\",\n        \"᪅\",\n        \"᪆\",\n        \"᪇\",\n        \"᪈\",\n        \"᪉\"\n    ],\n    \"lanatham\": [\n        \"᪐\",\n        \"᪑\",\n        \"᪒\",\n        \"᪓\",\n        \"᪔\",\n        \"᪕\",\n        \"᪖\",\n        \"᪗\",\n        \"᪘\",\n        \"᪙\"\n    ],\n    \"laoo\": [\n        \"໐\",\n        \"໑\",\n        \"໒\",\n        \"໓\",\n        \"໔\",\n        \"໕\",\n        \"໖\",\n        \"໗\",\n        \"໘\",\n        \"໙\"\n    ],\n    \"lepc\": [\n        \"᪐\",\n        \"᪑\",\n        \"᪒\",\n        \"᪓\",\n        \"᪔\",\n        \"᪕\",\n        \"᪖\",\n        \"᪗\",\n        \"᪘\",\n        \"᪙\"\n    ],\n    \"limb\": [\n        \"᥆\",\n        \"᥇\",\n        \"᥈\",\n        \"᥉\",\n        \"᥊\",\n        \"᥋\",\n        \"᥌\",\n        \"᥍\",\n        \"᥎\",\n        \"᥏\"\n    ],\n    \"mathbold\": [\n        \"𝟎\",\n        \"𝟏\",\n        \"𝟐\",\n        \"𝟑\",\n        \"𝟒\",\n        \"𝟓\",\n        \"𝟔\",\n        \"𝟕\",\n        \"𝟖\",\n        \"𝟗\"\n    ],\n    \"mathdbl\": [\n        \"𝟘\",\n        \"𝟙\",\n        \"𝟚\",\n        \"𝟛\",\n        \"𝟜\",\n        \"𝟝\",\n        \"𝟞\",\n        \"𝟟\",\n        \"𝟠\",\n        \"𝟡\"\n    ],\n    \"mathmono\": [\n        \"𝟶\",\n        \"𝟷\",\n        \"𝟸\",\n        \"𝟹\",\n        \"𝟺\",\n        \"𝟻\",\n        \"𝟼\",\n        \"𝟽\",\n        \"𝟾\",\n        \"𝟿\"\n    ],\n    \"mathsanb\": [\n        \"𝟬\",\n        \"𝟭\",\n        \"𝟮\",\n        \"𝟯\",\n        \"𝟰\",\n        \"𝟱\",\n        \"𝟲\",\n        \"𝟳\",\n        \"𝟴\",\n        \"𝟵\"\n    ],\n    \"mathsans\": [\n        \"𝟢\",\n        \"𝟣\",\n        \"𝟤\",\n        \"𝟥\",\n        \"𝟦\",\n        \"𝟧\",\n        \"𝟨\",\n        \"𝟩\",\n        \"𝟪\",\n        \"𝟫\"\n    ],\n    \"mlym\": [\n        \"൦\",\n        \"൧\",\n        \"൨\",\n        \"൩\",\n        \"൪\",\n        \"൫\",\n        \"൬\",\n        \"൭\",\n        \"൮\",\n        \"൯\"\n    ],\n    \"modi\": [\n        \"𑙐\",\n        \"𑙑\",\n        \"𑙒\",\n        \"𑙓\",\n        \"𑙔\",\n        \"𑙕\",\n        \"𑙖\",\n        \"𑙗\",\n        \"𑙘\",\n        \"𑙙\"\n    ],\n    \"mong\": [\n        \"᠐\",\n        \"᠑\",\n        \"᠒\",\n        \"᠓\",\n        \"᠔\",\n        \"᠕\",\n        \"᠖\",\n        \"᠗\",\n        \"᠘\",\n        \"᠙\"\n    ],\n    \"mroo\": [\n        \"𖩠\",\n        \"𖩡\",\n        \"𖩢\",\n        \"𖩣\",\n        \"𖩤\",\n        \"𖩥\",\n        \"𖩦\",\n        \"𖩧\",\n        \"𖩨\",\n        \"𖩩\"\n    ],\n    \"mtei\": [\n        \"꯰\",\n        \"꯱\",\n        \"꯲\",\n        \"꯳\",\n        \"꯴\",\n        \"꯵\",\n        \"꯶\",\n        \"꯷\",\n        \"꯸\",\n        \"꯹\"\n    ],\n    \"mymr\": [\n        \"၀\",\n        \"၁\",\n        \"၂\",\n        \"၃\",\n        \"၄\",\n        \"၅\",\n        \"၆\",\n        \"၇\",\n        \"၈\",\n        \"၉\"\n    ],\n    \"mymrshan\": [\n        \"႐\",\n        \"႑\",\n        \"႒\",\n        \"႓\",\n        \"႔\",\n        \"႕\",\n        \"႖\",\n        \"႗\",\n        \"႘\",\n        \"႙\"\n    ],\n    \"mymrtlng\": [\n        \"꧰\",\n        \"꧱\",\n        \"꧲\",\n        \"꧳\",\n        \"꧴\",\n        \"꧵\",\n        \"꧶\",\n        \"꧷\",\n        \"꧸\",\n        \"꧹\"\n    ],\n    \"newa\": [\n        \"𑑐\",\n        \"𑑑\",\n        \"𑑒\",\n        \"𑑓\",\n        \"𑑔\",\n        \"𑑕\",\n        \"𑑖\",\n        \"𑑗\",\n        \"𑑘\",\n        \"𑑙\"\n    ],\n    \"nkoo\": [\n        \"߀\",\n        \"߁\",\n        \"߂\",\n        \"߃\",\n        \"߄\",\n        \"߅\",\n        \"߆\",\n        \"߇\",\n        \"߈\",\n        \"߉\"\n    ],\n    \"olck\": [\n        \"᱐\",\n        \"᱑\",\n        \"᱒\",\n        \"᱓\",\n        \"᱔\",\n        \"᱕\",\n        \"᱖\",\n        \"᱗\",\n        \"᱘\",\n        \"᱙\"\n    ],\n    \"orya\": [\n        \"୦\",\n        \"୧\",\n        \"୨\",\n        \"୩\",\n        \"୪\",\n        \"୫\",\n        \"୬\",\n        \"୭\",\n        \"୮\",\n        \"୯\"\n    ],\n    \"osma\": [\n        \"𐒠\",\n        \"𐒡\",\n        \"𐒢\",\n        \"𐒣\",\n        \"𐒤\",\n        \"𐒥\",\n        \"𐒦\",\n        \"𐒧\",\n        \"𐒨\",\n        \"𐒩\"\n    ],\n    \"rohg\": [\n        \"𐴰\",\n        \"𐴱\",\n        \"𐴲\",\n        \"𐴳\",\n        \"𐴴\",\n        \"𐴵\",\n        \"𐴶\",\n        \"𐴷\",\n        \"𐴸\",\n        \"𐴹\"\n    ],\n    \"saur\": [\n        \"꣐\",\n        \"꣑\",\n        \"꣒\",\n        \"꣓\",\n        \"꣔\",\n        \"꣕\",\n        \"꣖\",\n        \"꣗\",\n        \"꣘\",\n        \"꣙\"\n    ],\n    \"segment\": [\n        \"🯰\",\n        \"🯱\",\n        \"🯲\",\n        \"🯳\",\n        \"🯴\",\n        \"🯵\",\n        \"🯶\",\n        \"🯷\",\n        \"🯸\",\n        \"🯹\"\n    ],\n    \"shrd\": [\n        \"𑇐\",\n        \"𑇑\",\n        \"𑇒\",\n        \"𑇓\",\n        \"𑇔\",\n        \"𑇕\",\n        \"𑇖\",\n        \"𑇗\",\n        \"𑇘\",\n        \"𑇙\"\n    ],\n    \"sind\": [\n        \"𑋰\",\n        \"𑋱\",\n        \"𑋲\",\n        \"𑋳\",\n        \"𑋴\",\n        \"𑋵\",\n        \"𑋶\",\n        \"𑋷\",\n        \"𑋸\",\n        \"𑋹\"\n    ],\n    \"sinh\": [\n        \"෦\",\n        \"෧\",\n        \"෨\",\n        \"෩\",\n        \"෪\",\n        \"෫\",\n        \"෬\",\n        \"෭\",\n        \"෮\",\n        \"෯\"\n    ],\n    \"sora\": [\n        \"𑃰\",\n        \"𑃱\",\n        \"𑃲\",\n        \"𑃳\",\n        \"𑃴\",\n        \"𑃵\",\n        \"𑃶\",\n        \"𑃷\",\n        \"𑃸\",\n        \"𑃹\"\n    ],\n    \"sund\": [\n        \"᮰\",\n        \"᮱\",\n        \"᮲\",\n        \"᮳\",\n        \"᮴\",\n        \"᮵\",\n        \"᮶\",\n        \"᮷\",\n        \"᮸\",\n        \"᮹\"\n    ],\n    \"takr\": [\n        \"𑛀\",\n        \"𑛁\",\n        \"𑛂\",\n        \"𑛃\",\n        \"𑛄\",\n        \"𑛅\",\n        \"𑛆\",\n        \"𑛇\",\n        \"𑛈\",\n        \"𑛉\"\n    ],\n    \"talu\": [\n        \"᧐\",\n        \"᧑\",\n        \"᧒\",\n        \"᧓\",\n        \"᧔\",\n        \"᧕\",\n        \"᧖\",\n        \"᧗\",\n        \"᧘\",\n        \"᧙\"\n    ],\n    \"tamldec\": [\n        \"௦\",\n        \"௧\",\n        \"௨\",\n        \"௩\",\n        \"௪\",\n        \"௫\",\n        \"௬\",\n        \"௭\",\n        \"௮\",\n        \"௯\"\n    ],\n    \"telu\": [\n        \"౦\",\n        \"౧\",\n        \"౨\",\n        \"౩\",\n        \"౪\",\n        \"౫\",\n        \"౬\",\n        \"౭\",\n        \"౮\",\n        \"౯\"\n    ],\n    \"thai\": [\n        \"๐\",\n        \"๑\",\n        \"๒\",\n        \"๓\",\n        \"๔\",\n        \"๕\",\n        \"๖\",\n        \"๗\",\n        \"๘\",\n        \"๙\"\n    ],\n    \"tibt\": [\n        \"༠\",\n        \"༡\",\n        \"༢\",\n        \"༣\",\n        \"༤\",\n        \"༥\",\n        \"༦\",\n        \"༧\",\n        \"༨\",\n        \"༩\"\n    ],\n    \"tirh\": [\n        \"𑓐\",\n        \"𑓑\",\n        \"𑓒\",\n        \"𑓓\",\n        \"𑓔\",\n        \"𑓕\",\n        \"𑓖\",\n        \"𑓗\",\n        \"𑓘\",\n        \"𑓙\"\n    ],\n    \"vaii\": [\n        \"ᘠ\",\n        \"ᘡ\",\n        \"ᘢ\",\n        \"ᘣ\",\n        \"ᘤ\",\n        \"ᘥ\",\n        \"ᘦ\",\n        \"ᘧ\",\n        \"ᘨ\",\n        \"ᘩ\"\n    ],\n    \"wara\": [\n        \"𑣠\",\n        \"𑣡\",\n        \"𑣢\",\n        \"𑣣\",\n        \"𑣤\",\n        \"𑣥\",\n        \"𑣦\",\n        \"𑣧\",\n        \"𑣨\",\n        \"𑣩\"\n    ],\n    \"wcho\": [\n        \"𞋰\",\n        \"𞋱\",\n        \"𞋲\",\n        \"𞋳\",\n        \"𞋴\",\n        \"𞋵\",\n        \"𞋶\",\n        \"𞋷\",\n        \"𞋸\",\n        \"𞋹\"\n    ]\n};\n","import Decimal from 'decimal.js';\nimport { S_UNICODE_REGEX } from '../regex.generated';\nimport { digitMapping } from './digit-mapping.generated';\nimport { GetUnsignedRoundingMode } from './GetUnsignedRoundingMode';\nimport { ToRawFixed } from './ToRawFixed';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var _a;\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, partitionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && ((_a = options.useGrouping) !== null && _a !== void 0 ? _a : true), decimalNumberPattern, style, options.roundingIncrement, GetUnsignedRoundingMode(options.roundingMode, sign === -1)));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber\n                        .times(Decimal.pow(10, exponent))\n                        .toNumber(), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _b = 0, unitPatternParts_1 = unitPatternParts; _b < unitPatternParts_1.length; _b++) {\n                    var part = unitPatternParts_1[_b];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber\n                    .times(Decimal.pow(10, exponent))\n                    .toNumber(), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _c = unit.split('-per-'), numeratorUnit = _c[0], denominatorUnit = _c[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber\n                    .times(Decimal.pow(10, exponent))\n                    .toNumber(), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _d = 0, _e = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _d < _e.length; _d++) {\n                var part = _e[_d];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction partitionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern, style, roundingIncrement, unsignedRoundingMode) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (x.isNaN()) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!x.isFinite()) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    var shouldUseGrouping = false;\n    if (useGrouping === 'always') {\n        shouldUseGrouping = true;\n    }\n    else if (useGrouping === 'min2') {\n        shouldUseGrouping = x.greaterThanOrEqualTo(10000);\n    }\n    else if (useGrouping === 'auto' || useGrouping) {\n        shouldUseGrouping = notation !== 'compact' || x.greaterThanOrEqualTo(10000);\n    }\n    if (shouldUseGrouping) {\n        // a. Let groupSepSymbol be the implementation-, locale-, and numbering system-dependent (ILND) String representing the grouping separator.\n        // For currency we should use `currencyGroup` instead of generic `group`\n        var groupSepSymbol = style === 'currency' && symbols.currencyGroup != null\n            ? symbols.currencyGroup\n            : symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        var decimalSepSymbol = style === 'currency' && symbols.currencyDecimal != null\n            ? symbols.currencyDecimal\n            : symbols.decimal;\n        result.push({ type: 'decimal', value: decimalSepSymbol }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        x.isFinite()) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(new Decimal(exponent), 0, 0, roundingIncrement, unsignedRoundingMode);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\".concat(zeroPattern);\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber.toNumber(), compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber.toNumber(), compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n","/**\n * https://tc39.es/ecma402/#sec-formatapproximately\n */\nexport function FormatApproximately(internalSlots, result) {\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    var approximatelySign = symbols.approximatelySign;\n    result.push({ type: 'approximatelySign', value: approximatelySign });\n    return result;\n}\n","import Decimal from 'decimal.js';\nimport { invariant } from '../utils';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberpattern\n */\nexport function PartitionNumberPattern(internalSlots, _x) {\n    var _a;\n    var x = _x;\n    // IMPL: We need to record the magnitude of the number\n    var magnitude = 0;\n    // 2. Let dataLocaleData be internalSlots.[[dataLocaleData]].\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    // 3. Let symbols be dataLocaleData.[[numbers]].[[symbols]][internalSlots.[[numberingSystem]]].\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    // 4. Let exponent be 0.\n    var exponent = 0;\n    // 5. Let n be ! ToString(x).\n    var n;\n    // 6. If x is NaN, then\n    if (x.isNaN()) {\n        // 6.a. Let n be symbols.[[nan]].\n        n = symbols.nan;\n    }\n    else if (!x.isFinite()) {\n        // 7. Else if x is a non-finite Number, then\n        // 7.a. Let n be symbols.[[infinity]].\n        n = symbols.infinity;\n    }\n    else {\n        // 8. Else,\n        if (!x.isZero()) {\n            // 8.a. If x < 0, let x be -x.\n            invariant(x.isFinite(), 'Input must be a mathematical value');\n            // 8.b. If internalSlots.[[style]] is \"percent\", let x be 100 × x.\n            if (internalSlots.style == 'percent') {\n                x = x.times(100);\n            }\n            // 8.c. Let exponent be ComputeExponent(numberFormat, x).\n            ;\n            _a = ComputeExponent(internalSlots, x), exponent = _a[0], \n            // IMPL: We need to record the magnitude of the number\n            magnitude = _a[1];\n            // 8.d. Let x be x × 10^(-exponent).\n            x = x.times(Decimal.pow(10, -exponent));\n        }\n        // 8.e. Let formatNumberResult be FormatNumericToString(internalSlots, x).\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\n        // 8.f. Let n be formatNumberResult.[[formattedString]].\n        n = formatNumberResult.formattedString;\n        // 8.g. Let x be formatNumberResult.[[roundedNumber]].\n        x = formatNumberResult.roundedNumber;\n    }\n    // 9. Let sign be 0.\n    var sign;\n    // 10. If x is negative, then\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            // 10.a. If internalSlots.[[signDisplay]] is \"never\", then\n            // 10.a.i. Let sign be 0.\n            sign = 0;\n            break;\n        case 'auto':\n            // 10.b. Else if internalSlots.[[signDisplay]] is \"auto\", then\n            if (x.isPositive() || x.isNaN()) {\n                // 10.b.i. If x is positive or x is NaN, let sign be 0.\n                sign = 0;\n            }\n            else {\n                // 10.b.ii. Else, let sign be -1.\n                sign = -1;\n            }\n            break;\n        case 'always':\n            // 10.c. Else if internalSlots.[[signDisplay]] is \"always\", then\n            if (x.isPositive() || x.isNaN()) {\n                // 10.c.i. If x is positive or x is NaN, let sign be 1.\n                sign = 1;\n            }\n            else {\n                // 10.c.ii. Else, let sign be -1.\n                sign = -1;\n            }\n            break;\n        case 'exceptZero':\n            // 10.d. Else if internalSlots.[[signDisplay]] is \"exceptZero\", then\n            if (x.isZero()) {\n                // 10.d.i. If x is 0, let sign be 0.\n                sign = 0;\n            }\n            else if (x.isNegative()) {\n                // 10.d.ii. Else if x is negative, let sign be -1.\n                sign = -1;\n            }\n            else {\n                // 10.d.iii. Else, let sign be 1.\n                sign = 1;\n            }\n            break;\n        default:\n            // 10.e. Else,\n            invariant(signDisplay === 'negative', 'signDisplay must be \"negative\"');\n            if (x.isNegative() && !x.isZero()) {\n                // 10.e.i. If x is negative and x is not 0, let sign be -1.\n                sign = -1;\n            }\n            else {\n                // 10.e.ii. Else, let sign be 0.\n                sign = 0;\n            }\n            break;\n    }\n    // 11. Return ? FormatNumberToParts(numberFormat, x, n, exponent, sign).\n    return formatToParts({\n        roundedNumber: x,\n        formattedString: n,\n        exponent: exponent,\n        // IMPL: We're returning this for our implementation of formatToParts\n        magnitude: magnitude,\n        sign: sign,\n    }, internalSlots.dataLocaleData, pl, internalSlots);\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nexport function FormatNumeric(internalSlots, x) {\n    var parts = PartitionNumberPattern(internalSlots, x);\n    return parts.map(function (p) { return p.value; }).join('');\n}\n","import { invariant } from '../utils';\nimport { CollapseNumberRange } from './CollapseNumberRange';\nimport { FormatApproximately } from './FormatApproximately';\nimport { FormatNumeric } from './FormatNumeric';\nimport { PartitionNumberPattern } from './PartitionNumberPattern';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\n */\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    // 1. Assert: x and y are both mathematical values.\n    invariant(!x.isNaN() && !y.isNaN(), 'Input must be a number', RangeError);\n    var internalSlots = getInternalSlots(numberFormat);\n    // 3. Let xResult be ? PartitionNumberPattern(numberFormat, x).\n    var xResult = PartitionNumberPattern(internalSlots, x);\n    // 4. Let yResult be ? PartitionNumberPattern(numberFormat, y).\n    var yResult = PartitionNumberPattern(internalSlots, y);\n    if (FormatNumeric(internalSlots, x) === FormatNumeric(internalSlots, y)) {\n        var appxResult = FormatApproximately(internalSlots, xResult);\n        appxResult.forEach(function (el) {\n            el.source = 'shared';\n        });\n        return appxResult;\n    }\n    var result = [];\n    xResult.forEach(function (el) {\n        el.source = 'startRange';\n        result.push(el);\n    });\n    // 9. Let symbols be internalSlots.[[dataLocaleData]].[[numbers]].[[symbols]][internalSlots.[[numberingSystem]]].\n    var rangeSeparator = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem]\n        .rangeSign;\n    result.push({ type: 'literal', value: rangeSeparator, source: 'shared' });\n    yResult.forEach(function (el) {\n        el.source = 'endRange';\n        result.push(el);\n    });\n    // 13. Return ? CollapseNumberRange(numberFormat, result).\n    return CollapseNumberRange(numberFormat, result, { getInternalSlots: getInternalSlots });\n}\n","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrange\n */\nexport function FormatNumericRange(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n        getInternalSlots: getInternalSlots,\n    });\n    return parts.map(function (part) { return part.value; }).join('');\n}\n","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrangetoparts\n */\nexport function FormatNumericRangeToParts(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n        getInternalSlots: getInternalSlots,\n    });\n    return parts.map(function (part, index) { return ({\n        type: part.type,\n        value: part.value,\n        source: part.source,\n        result: index.toString(),\n    }); });\n}\n","import { ArrayCreate } from '../262';\nimport { PartitionNumberPattern } from './PartitionNumberPattern';\nexport function FormatNumericToParts(nf, x, implDetails) {\n    var parts = PartitionNumberPattern(implDetails.getInternalSlots(nf), x);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","import { DefaultNumberOption } from '../DefaultNumberOption';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\nimport { invariant } from '../utils';\n//IMPL: Valid rounding increments as per implementation\nvar VALID_ROUNDING_INCREMENTS = new Set([\n    1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000, 2500, 5000,\n]);\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    // 1. Let mnid be ? GetNumberOption(opts, \"minimumIntegerDigits\", 1, 21, 1).\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    // 2. Let mnfd be opts.[[MinimumFractionDigits]].\n    var mnfd = opts.minimumFractionDigits;\n    // 3. Let mxfd be opts.[[MaximumFractionDigits]].\n    var mxfd = opts.maximumFractionDigits;\n    // 4. Let mnsd be opts.[[MinimumSignificantDigits]].\n    var mnsd = opts.minimumSignificantDigits;\n    // 5. Let mxsd be opts.[[MaximumSignificantDigits]].\n    var mxsd = opts.maximumSignificantDigits;\n    // 6. Set internalSlots.[[MinimumIntegerDigits]] to mnid.\n    internalSlots.minimumIntegerDigits = mnid;\n    // 7. Let roundingIncrement be ? GetNumberOption(opts, \"roundingIncrement\", 1, 5000, 1).\n    var roundingIncrement = GetNumberOption(opts, 'roundingIncrement', 1, 5000, 1);\n    // 8. If roundingIncrement is not an element of the list {1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000, 2500, 5000}, throw a RangeError exception.\n    invariant(VALID_ROUNDING_INCREMENTS.has(roundingIncrement), \"Invalid rounding increment value: \".concat(roundingIncrement, \".\\nValid values are \").concat(Array.from(VALID_ROUNDING_INCREMENTS).join(', '), \".\"));\n    // 9. Let roundingMode be ? GetOption(opts, \"roundingMode\", \"string\", « \"ceil\", \"floor\", \"expand\", \"trunc\", \"halfCeil\", \"halfFloor\", \"halfExpand\", \"halfTrunc\", \"halfEven\" », \"halfExpand\").\n    var roundingMode = GetOption(opts, 'roundingMode', 'string', [\n        'ceil',\n        'floor',\n        'expand',\n        'trunc',\n        'halfCeil',\n        'halfFloor',\n        'halfExpand',\n        'halfTrunc',\n        'halfEven',\n    ], 'halfExpand');\n    // 10. Let roundingPriority be ? GetOption(opts, \"roundingPriority\", \"string\", « \"auto\", \"morePrecision\", \"lessPrecision\" », \"auto\").\n    var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\n    // 11. Let trailingZeroDisplay be ? GetOption(opts, \"trailingZeroDisplay\", \"string\", « \"auto\", \"stripIfInteger\" », \"auto\").\n    var trailingZeroDisplay = GetOption(opts, 'trailingZeroDisplay', 'string', ['auto', 'stripIfInteger'], 'auto');\n    // 12. If roundingIncrement is not 1, then\n    if (roundingIncrement !== 1) {\n        // 12.a. Set mxfdDefault to mnfdDefault.\n        mxfdDefault = mnfdDefault;\n    }\n    // 13. Set internalSlots.[[RoundingIncrement]] to roundingIncrement.\n    internalSlots.roundingIncrement = roundingIncrement;\n    // 14. Set internalSlots.[[RoundingMode]] to roundingMode.\n    internalSlots.roundingMode = roundingMode;\n    // 15. Set internalSlots.[[TrailingZeroDisplay]] to trailingZeroDisplay.\n    internalSlots.trailingZeroDisplay = trailingZeroDisplay;\n    // 16. Let hasSd be true if mnsd is not undefined or mxsd is not undefined; otherwise, let hasSd be false.\n    var hasSd = mnsd !== undefined || mxsd !== undefined;\n    // 17. Let hasFd be true if mnfd is not undefined or mxfd is not undefined; otherwise, let hasFd be false.\n    var hasFd = mnfd !== undefined || mxfd !== undefined;\n    // 18. Let needSd be true.\n    var needSd = true;\n    // 19. Let needFd be true.\n    var needFd = true;\n    // 20. If roundingPriority is \"auto\", then\n    if (roundingPriority === 'auto') {\n        // 20.a. Set needSd to hasSd.\n        needSd = hasSd;\n        // 20.b. If hasSd is true or hasFd is false and notation is \"compact\", then\n        if (hasSd || (!hasFd && notation === 'compact')) {\n            // 20.b.i. Set needFd to false.\n            needFd = false;\n        }\n    }\n    // 21. If needSd is true, then\n    if (needSd) {\n        // 21.a. If hasSd is true, then\n        if (hasSd) {\n            // 21.a.i. Set internalSlots.[[MinimumSignificantDigits]] to ? DefaultNumberOption(mnsd, 1, 21, 1).\n            internalSlots.minimumSignificantDigits = DefaultNumberOption(mnsd, 1, 21, 1);\n            // 21.a.ii. Set internalSlots.[[MaximumSignificantDigits]] to ? DefaultNumberOption(mxsd, internalSlots.[[MinimumSignificantDigits]], 21, 21).\n            internalSlots.maximumSignificantDigits = DefaultNumberOption(mxsd, internalSlots.minimumSignificantDigits, 21, 21);\n        }\n        else {\n            // 21.b. Else,\n            // 21.b.i. Set internalSlots.[[MinimumSignificantDigits]] to 1.\n            internalSlots.minimumSignificantDigits = 1;\n            // 21.b.ii. Set internalSlots.[[MaximumSignificantDigits]] to 21.\n            internalSlots.maximumSignificantDigits = 21;\n        }\n    }\n    // 22. If needFd is true, then\n    if (needFd) {\n        // 22.a. If hasFd is true, then\n        if (hasFd) {\n            // 22.a.i. Set mnfd to ? DefaultNumberOption(mnfd, 0, 100, undefined).\n            mnfd = DefaultNumberOption(mnfd, 0, 100, undefined);\n            // 22.a.ii. Set mxfd to ? DefaultNumberOption(mxfd, 0, 100, undefined).\n            mxfd = DefaultNumberOption(mxfd, 0, 100, undefined);\n            // 22.a.iii. If mnfd is undefined, then\n            if (mnfd === undefined) {\n                // 22.a.iii.1. Assert: mxfd is not undefined.\n                invariant(mxfd !== undefined, 'maximumFractionDigits must be defined');\n                // 22.a.iii.2. Set mnfd to min(mnfdDefault, mxfd).\n                mnfd = Math.min(mnfdDefault, mxfd);\n            }\n            else if (mxfd === undefined) {\n                // 22.a.iv. Else if mxfd is undefined, then\n                // 22.a.iv.1. Set mxfd to max(mxfdDefault, mnfd).\n                mxfd = Math.max(mxfdDefault, mnfd);\n            }\n            else if (mnfd > mxfd) {\n                // 22.a.v. Else if mnfd > mxfd, throw a RangeError exception.\n                throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\n            }\n            // 22.a.vi. Set internalSlots.[[MinimumFractionDigits]] to mnfd.\n            internalSlots.minimumFractionDigits = mnfd;\n            // 22.a.vii. Set internalSlots.[[MaximumFractionDigits]] to mxfd.\n            internalSlots.maximumFractionDigits = mxfd;\n        }\n        else {\n            // 22.b. Else,\n            // 22.b.i. Set internalSlots.[[MinimumFractionDigits]] to mnfdDefault.\n            internalSlots.minimumFractionDigits = mnfdDefault;\n            // 22.b.ii. Set internalSlots.[[MaximumFractionDigits]] to mxfdDefault.\n            internalSlots.maximumFractionDigits = mxfdDefault;\n        }\n    }\n    // 23. If needSd is false and needFd is false, then\n    if (!needSd && !needFd) {\n        // 23.a. Set internalSlots.[[MinimumFractionDigits]] to 0.\n        internalSlots.minimumFractionDigits = 0;\n        // 23.b. Set internalSlots.[[MaximumFractionDigits]] to 0.\n        internalSlots.maximumFractionDigits = 0;\n        // 23.c. Set internalSlots.[[MinimumSignificantDigits]] to 1.\n        internalSlots.minimumSignificantDigits = 1;\n        // 23.d. Set internalSlots.[[MaximumSignificantDigits]] to 2.\n        internalSlots.maximumSignificantDigits = 2;\n        // 23.e. Set internalSlots.[[RoundingType]] to \"morePrecision\".\n        internalSlots.roundingType = 'morePrecision';\n        // 23.f. Set internalSlots.[[RoundingPriority]] to \"morePrecision\".\n        internalSlots.roundingPriority = 'morePrecision';\n    }\n    else if (roundingPriority === 'morePrecision') {\n        // 24. Else if roundingPriority is \"morePrecision\", then\n        // 24.a. Set internalSlots.[[RoundingType]] to \"morePrecision\".\n        internalSlots.roundingType = 'morePrecision';\n        // 24.b. Set internalSlots.[[RoundingPriority]] to \"morePrecision\".\n        internalSlots.roundingPriority = 'morePrecision';\n    }\n    else if (roundingPriority === 'lessPrecision') {\n        // 25. Else if roundingPriority is \"lessPrecision\", then\n        // 25.a. Set internalSlots.[[RoundingType]] to \"lessPrecision\".\n        internalSlots.roundingType = 'lessPrecision';\n        // 25.b. Set internalSlots.[[RoundingPriority]] to \"lessPrecision\".\n        internalSlots.roundingPriority = 'lessPrecision';\n    }\n    else if (hasSd) {\n        // 26. Else if hasSd is true, then\n        // 26.a. Set internalSlots.[[RoundingType]] to \"significantDigits\".\n        internalSlots.roundingType = 'significantDigits';\n        // 26.b. Set internalSlots.[[RoundingPriority]] to \"auto\".\n        internalSlots.roundingPriority = 'auto';\n    }\n    else {\n        // 27. Else,\n        // 27.a. Set internalSlots.[[RoundingType]] to \"fractionDigits\".\n        internalSlots.roundingType = 'fractionDigits';\n        // 27.b. Set internalSlots.[[RoundingPriority]] to \"auto\".\n        internalSlots.roundingPriority = 'auto';\n    }\n    // 28. If roundingIncrement is not 1, then\n    if (roundingIncrement !== 1) {\n        // 28.a. Assert: internalSlots.[[RoundingType]] is \"fractionDigits\".\n        invariant(internalSlots.roundingType === 'fractionDigits', 'Invalid roundingType', TypeError);\n        // 28.b. Assert: internalSlots.[[MaximumFractionDigits]] is equal to internalSlots.[[MinimumFractionDigits]].\n        invariant(internalSlots.maximumFractionDigits ===\n            internalSlots.minimumFractionDigits, 'With roundingIncrement > 1, maximumFractionDigits and minimumFractionDigits must be equal.', RangeError);\n    }\n}\n","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\nimport { invariant } from '../utils';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(internalSlots, options) {\n    if (options === void 0) { options = Object.create(null); }\n    // 1. Let style be ? GetOption(options, \"style\", \"string\", « \"decimal\", \"percent\", \"currency\", \"unit\" », \"decimal\").\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    // 2. Set internalSlots.[[Style]] to style.\n    internalSlots.style = style;\n    // 3. Let currency be ? GetOption(options, \"currency\", \"string\", undefined, undefined).\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    // 4. If currency is not undefined, then\n    // a. If the result of IsWellFormedCurrencyCode(currency) is false, throw a RangeError exception.\n    invariant(currency === undefined || IsWellFormedCurrencyCode(currency), 'Malformed currency code', RangeError);\n    // 5. If style is \"currency\" and currency is undefined, throw a TypeError exception.\n    invariant(style !== 'currency' || currency !== undefined, 'currency cannot be undefined', TypeError);\n    // 6. Let currencyDisplay be ? GetOption(options, \"currencyDisplay\", \"string\", « \"code\", \"symbol\", \"narrowSymbol\", \"name\" », \"symbol\").\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    // 7. Let currencySign be ? GetOption(options, \"currencySign\", \"string\", « \"standard\", \"accounting\" », \"standard\").\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    // 8. Let unit be ? GetOption(options, \"unit\", \"string\", undefined, undefined).\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    // 9. If unit is not undefined, then\n    // a. If the result of IsWellFormedUnitIdentifier(unit) is false, throw a RangeError exception.\n    invariant(unit === undefined || IsWellFormedUnitIdentifier(unit), 'Invalid unit argument for Intl.NumberFormat()', RangeError);\n    // 10. If style is \"unit\" and unit is undefined, throw a TypeError exception.\n    invariant(style !== 'unit' || unit !== undefined, 'unit cannot be undefined', TypeError);\n    // 11. Let unitDisplay be ? GetOption(options, \"unitDisplay\", \"string\", « \"short\", \"narrow\", \"long\" », \"short\").\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    // 12. If style is \"currency\", then\n    if (style === 'currency') {\n        // a. Set internalSlots.[[Currency]] to the result of converting currency to upper case as specified in 6.1.\n        internalSlots.currency = currency.toUpperCase();\n        // b. Set internalSlots.[[CurrencyDisplay]] to currencyDisplay.\n        internalSlots.currencyDisplay = currencyDisplay;\n        // c. Set internalSlots.[[CurrencySign]] to currencySign.\n        internalSlots.currencySign = currencySign;\n    }\n    // 13. If style is \"unit\", then\n    if (style === 'unit') {\n        // a. Set internalSlots.[[Unit]] to unit.\n        internalSlots.unit = unit;\n        // b. Set internalSlots.[[UnitDisplay]] to unitDisplay.\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n","import { ResolveLocale } from '@formatjs/intl-localematcher';\nimport { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nimport { GetOption } from '../GetOption';\nimport { GetStringOrBooleanOption } from '../GetStringOrBooleanOption';\nimport { invariant } from '../utils';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = CoerceOptionsToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(Array.from(availableLocales), requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[r.dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(internalSlots, options);\n    var style = internalSlots.style;\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency' && notation === 'standard') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    var defaultUseGrouping = 'auto';\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n        defaultUseGrouping = 'min2';\n    }\n    var useGrouping = GetStringOrBooleanOption(options, 'useGrouping', ['min2', 'auto', 'always'], 'always', false, defaultUseGrouping);\n    internalSlots.useGrouping = useGrouping;\n    var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero', 'negative'], 'auto');\n    internalSlots.signDisplay = signDisplay;\n    return nf;\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n","import { LookupSupportedLocales } from '@formatjs/intl-localematcher';\nimport { ToObject } from './262';\nimport { GetOption } from './GetOption';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = ToObject(options);\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\n    }\n    return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\n}\n","import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\n","export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n","import Decimal from 'decimal.js';\nimport { ToPrimitive } from './262';\nexport function ToIntlMathematicalValue(input) {\n    var primValue = ToPrimitive(input, 'number');\n    if (typeof primValue === 'bigint') {\n        return new Decimal(primValue);\n    }\n    // IMPL\n    if (primValue === undefined) {\n        return new Decimal(NaN);\n    }\n    if (primValue === true) {\n        return new Decimal(1);\n    }\n    if (primValue === false) {\n        return new Decimal(0);\n    }\n    if (primValue === null) {\n        return new Decimal(0);\n    }\n    try {\n        return new Decimal(primValue);\n    }\n    catch (e) {\n        return new Decimal(NaN);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SegmentationRules = void 0;\n/* @generated */\n// prettier-ignore\nexports.SegmentationRules = {\n    \"de\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"Port.\",\n                \"Alt.\",\n                \"Di.\",\n                \"Ges.\",\n                \"frz.\",\n                \"entspr.\",\n                \"Gebr.\",\n                \"erw.\",\n                \"Frl.\",\n                \"Inh.\",\n                \"k.u.k.\",\n                \"Ca.\",\n                \"J.D.\",\n                \"Ausg.\",\n                \"evtl.\",\n                \"So.\",\n                \"i.B.\",\n                \"s.a.\",\n                \"kgl.\",\n                \"Sept.\",\n                \"o.B.\",\n                \"Sa.\",\n                \"ev.\",\n                \"Dez.\",\n                \"am.\",\n                \"i.R.\",\n                \"eigtl.\",\n                \"i.J.\",\n                \"u.U.\",\n                \"G.\",\n                \"z.Hd.\",\n                \"u.A.w.g.\",\n                \"Kl.\",\n                \"Spezif.\",\n                \"Obj.\",\n                \"Ing.\",\n                \"D. h.\",\n                \"Folg.\",\n                \"Akt.\",\n                \"i.A.\",\n                \"Msp.\",\n                \"U.U.\",\n                \"Chr.\",\n                \"R.\",\n                \"Einh.\",\n                \"schwäb.\",\n                \"Vgl.\",\n                \"Aug.\",\n                \"Dipl.-Ing.\",\n                \"W.\",\n                \"B.\",\n                \"U. U.\",\n                \"J.\",\n                \"Fa.\",\n                \"Mo.\",\n                \"n.u.Z.\",\n                \"Op.\",\n                \"Mrd.\",\n                \"e.h.\",\n                \"Hr.\",\n                \"Hrn.\",\n                \"Ztr.\",\n                \"k. u. k.\",\n                \"Bibl.\",\n                \"d.Ä.\",\n                \"b.\",\n                \"M.\",\n                \"i.H.\",\n                \"v.R.w.\",\n                \"o.A.\",\n                \"St.\",\n                \"Dr.\",\n                \"Fn.\",\n                \"Abs.\",\n                \"Rd.\",\n                \"Dtzd.\",\n                \"Jahrh.\",\n                \"Z.\",\n                \"Std.\",\n                \"n. Chr.\",\n                \"möbl.\",\n                \"tägl.\",\n                \"gest.\",\n                \"gesch.\",\n                \"z.B.\",\n                \"Hbf.\",\n                \"Abt.\",\n                \"A.M.\",\n                \"e.Wz.\",\n                \"v.T.\",\n                \"Nov.\",\n                \"z.\",\n                \"Prot.\",\n                \"U.S.\",\n                \"Wg.\",\n                \"u.v.a.\",\n                \"Adr.\",\n                \"App.\",\n                \"ggf.\",\n                \"ggfs.\",\n                \"Jan.\",\n                \"O.\",\n                \"Rel.\",\n                \"od.\",\n                \"Pfd.\",\n                \"a.a.O.\",\n                \"p.Adr.\",\n                \"P.\",\n                \"Gem.\",\n                \"v. Chr.\",\n                \"Art.\",\n                \"z.Z.\",\n                \"S.A.\",\n                \"i.V.\",\n                \"verh.\",\n                \"Ausschl.\",\n                \"m.W.\",\n                \"Dir.\",\n                \"Verf.\",\n                \"Sek.\",\n                \"r.\",\n                \"Chin.\",\n                \"Feb.\",\n                \"Int.\",\n                \"Sep.\",\n                \"Gesch.\",\n                \"schweiz.\",\n                \"Bed.\",\n                \"a.Rh.\",\n                \"jew.\",\n                \"vgl.\",\n                \"a.M.\",\n                \"Str.\",\n                \"exkl.\",\n                \"gek.\",\n                \"Erf.\",\n                \"u.Ä.\",\n                \"ehem.\",\n                \"näml.\",\n                \"u. Z.\",\n                \"v. u. Z.\",\n                \"sog.\",\n                \"C.\",\n                \"Dipl.-Kfm.\",\n                \"mtl.\",\n                \"Hrsg.\",\n                \"Qu.\",\n                \"röm.\",\n                \"u.\",\n                \"U.\",\n                \"Adj.\",\n                \"Kap.\",\n                \"hpts.\",\n                \"a.D.\",\n                \"gedr.\",\n                \"Best.\",\n                \"N.\",\n                \"v.u.Z.\",\n                \"Phys.\",\n                \"Fr.\",\n                \"d.J.\",\n                \"Reg.-Bez.\",\n                \"m.E.\",\n                \"schles.\",\n                \"Max.\",\n                \"Ltd.\",\n                \"südd.\",\n                \"inkl.\",\n                \"geb.\",\n                \"Ggf.\",\n                \"Inc.\",\n                \"kath.\",\n                \"kfm.\",\n                \"Nr.\",\n                \"Proz.\",\n                \"Dim.\",\n                \"verw.\",\n                \"Reg.\",\n                \"Dat.\",\n                \"Evtl.\",\n                \"led.\",\n                \"F.\",\n                \"Test.\",\n                \"Schr.\",\n                \"Do.\",\n                \"PIN.\",\n                \"Z. Zt.\",\n                \"v.Chr.\",\n                \"Tägl.\",\n                \"s.\",\n                \"amtl.\",\n                \"Temp.\",\n                \"Mind.\",\n                \"e.V.\",\n                \"Abw.\",\n                \"P.M.\",\n                \"F.f.\",\n                \"a.a.S.\",\n                \"Mod.\",\n                \"Co.\",\n                \"Min.\",\n                \"Allg.\",\n                \"Geograph.\",\n                \"Jr.\",\n                \"Urspr.\",\n                \"Apr.\",\n                \"Z. B.\",\n                \"v.H.\",\n                \"A.\",\n                \"einschl.\",\n                \"Trans.\",\n                \"zzgl.\",\n                \"StR.\",\n                \"Fam.\",\n                \"I.\",\n                \"jhrl.\",\n                \"u.a.\",\n                \"Ben.\",\n                \"o.g.\",\n                \"Kfm.\",\n                \"Konv.\",\n                \"Mi.\",\n                \"L.\",\n                \"beil.\",\n                \"T.\",\n                \"Ursprüngl.\",\n                \"röm.-kath.\",\n                \"Okt.\",\n                \"u.ä.\",\n                \"Tel.\",\n                \"D.\",\n                \"Ber.\",\n                \"Kop.\",\n                \"Mio.\",\n                \"Y.\",\n                \"U.S.A.\",\n                \"v. H.\",\n                \"Forts. f.\",\n                \"Rep.\",\n                \"Hptst.\",\n                \"österr.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"el\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [],\n            \"variables\": {\n                \"$STerm\": \"((?:[!;\\\\?\\\\u037E\\\\u0589\\\\u061D-\\\\u061F\\\\u06D4\\\\u0700-\\\\u0702\\\\u07F9\\\\u0837\\\\u0839\\\\u083D\\\\u083E\\\\u0964\\\\u0965\\\\u104A\\\\u104B\\\\u1362\\\\u1367\\\\u1368\\\\u166E\\\\u1735\\\\u1736\\\\u17D4\\\\u17D5\\\\u1803\\\\u1809\\\\u1944\\\\u1945\\\\u1AA8-\\\\u1AAB\\\\u1B4E\\\\u1B4F\\\\u1B5A\\\\u1B5B\\\\u1B5E\\\\u1B5F\\\\u1B7D-\\\\u1B7F\\\\u1C3B\\\\u1C3C\\\\u1C7E\\\\u1C7F\\\\u203C\\\\u203D\\\\u2047-\\\\u2049\\\\u2CF9-\\\\u2CFB\\\\u2E2E\\\\u2E3C\\\\u2E53\\\\u2E54\\\\u3002\\\\uA4FF\\\\uA60E\\\\uA60F\\\\uA6F3\\\\uA6F7\\\\uA876\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA92F\\\\uA9C8\\\\uA9C9\\\\uAA5D-\\\\uAA5F\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFE12\\\\uFE15\\\\uFE16\\\\uFE56\\\\uFE57\\\\uFF01\\\\uFF1F\\\\uFF61]|\\\\uD802[\\\\uDE56\\\\uDE57]|\\\\uD803[\\\\uDF55-\\\\uDF59\\\\uDF86-\\\\uDF89]|\\\\uD804[\\\\uDC47\\\\uDC48\\\\uDCBE-\\\\uDCC1\\\\uDD41-\\\\uDD43\\\\uDDC5\\\\uDDC6\\\\uDDCD\\\\uDDDE\\\\uDDDF\\\\uDE38\\\\uDE39\\\\uDE3B\\\\uDE3C\\\\uDEA9\\\\uDFD4\\\\uDFD5]|\\\\uD805[\\\\uDC4B\\\\uDC4C\\\\uDDC2\\\\uDDC3\\\\uDDC9-\\\\uDDD7\\\\uDE41\\\\uDE42\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDD44\\\\uDD46\\\\uDE42\\\\uDE43\\\\uDE9B\\\\uDE9C]|\\\\uD807[\\\\uDC41\\\\uDC42\\\\uDEF7\\\\uDEF8\\\\uDF43\\\\uDF44]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37\\\\uDF38\\\\uDF44]|\\\\uD81B[\\\\uDD6E\\\\uDD6F\\\\uDE98]|\\\\uD82F\\\\uDC9F|\\\\uD836\\\\uDE88)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\"\n            }\n        }\n    },\n    \"en\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"L.P.\",\n                \"Alt.\",\n                \"Approx.\",\n                \"E.G.\",\n                \"O.\",\n                \"Maj.\",\n                \"Misc.\",\n                \"P.O.\",\n                \"J.D.\",\n                \"Jam.\",\n                \"Card.\",\n                \"Dec.\",\n                \"Sept.\",\n                \"MR.\",\n                \"Long.\",\n                \"Hat.\",\n                \"G.\",\n                \"Link.\",\n                \"DC.\",\n                \"D.C.\",\n                \"M.T.\",\n                \"Hz.\",\n                \"Mrs.\",\n                \"By.\",\n                \"Act.\",\n                \"Var.\",\n                \"N.V.\",\n                \"Aug.\",\n                \"B.\",\n                \"S.A.\",\n                \"Up.\",\n                \"Job.\",\n                \"Num.\",\n                \"M.I.T.\",\n                \"Ok.\",\n                \"Org.\",\n                \"Ex.\",\n                \"Cont.\",\n                \"U.\",\n                \"Mart.\",\n                \"Fn.\",\n                \"Abs.\",\n                \"Lt.\",\n                \"OK.\",\n                \"Z.\",\n                \"E.\",\n                \"Kb.\",\n                \"Est.\",\n                \"A.M.\",\n                \"L.A.\",\n                \"Prof.\",\n                \"U.S.\",\n                \"Nov.\",\n                \"Ph.D.\",\n                \"Mar.\",\n                \"I.T.\",\n                \"exec.\",\n                \"Jan.\",\n                \"N.Y.\",\n                \"X.\",\n                \"Md.\",\n                \"Op.\",\n                \"vs.\",\n                \"D.A.\",\n                \"A.D.\",\n                \"R.L.\",\n                \"P.M.\",\n                \"Or.\",\n                \"M.R.\",\n                \"Cap.\",\n                \"PC.\",\n                \"Feb.\",\n                \"Exec.\",\n                \"I.e.\",\n                \"Sep.\",\n                \"Gb.\",\n                \"K.\",\n                \"U.S.C.\",\n                \"Mt.\",\n                \"S.\",\n                \"A.S.\",\n                \"C.O.D.\",\n                \"Capt.\",\n                \"Col.\",\n                \"In.\",\n                \"C.F.\",\n                \"Adj.\",\n                \"AD.\",\n                \"I.D.\",\n                \"Mgr.\",\n                \"R.T.\",\n                \"B.V.\",\n                \"M.\",\n                \"Conn.\",\n                \"Yr.\",\n                \"Rev.\",\n                \"Phys.\",\n                \"pp.\",\n                \"Ms.\",\n                \"To.\",\n                \"Sgt.\",\n                \"J.K.\",\n                \"Nr.\",\n                \"Jun.\",\n                \"Fri.\",\n                \"S.A.R.\",\n                \"Lev.\",\n                \"Lt.Cdr.\",\n                \"Def.\",\n                \"F.\",\n                \"Do.\",\n                \"Joe.\",\n                \"Id.\",\n                \"Mr.\",\n                \"Dept.\",\n                \"Is.\",\n                \"Pvt.\",\n                \"Diff.\",\n                \"Hon.B.A.\",\n                \"Q.\",\n                \"Mb.\",\n                \"On.\",\n                \"Min.\",\n                \"J.B.\",\n                \"Ed.\",\n                \"AB.\",\n                \"A.\",\n                \"S.p.A.\",\n                \"I.\",\n                \"a.m.\",\n                \"Comm.\",\n                \"Go.\",\n                \"VS.\",\n                \"L.\",\n                \"All.\",\n                \"PP.\",\n                \"P.V.\",\n                \"T.\",\n                \"K.R.\",\n                \"Etc.\",\n                \"D.\",\n                \"Adv.\",\n                \"Lib.\",\n                \"E.g.\",\n                \"Pro.\",\n                \"U.S.A.\",\n                \"S.E.\",\n                \"AA.\",\n                \"Rep.\",\n                \"Sq.\",\n                \"As.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"es\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"Rdos.\",\n                \"JJ.OO.\",\n                \"Sres.\",\n                \"fig.\",\n                \"may.\",\n                \"RR.HH.\",\n                \"oct.\",\n                \"cap.\",\n                \"mié.\",\n                \"doc.\",\n                \"Excmo.\",\n                \"Trab.\",\n                \"Excmos.\",\n                \"Kit.\",\n                \"Inc.\",\n                \"FF.CC.\",\n                \"DC.\",\n                \"ago.\",\n                \"trad.\",\n                \"SA.\",\n                \"Rvdos.\",\n                \"ed.\",\n                \"Exmo.\",\n                \"jul.\",\n                \"col.\",\n                \"RAM.\",\n                \"Srtas.\",\n                \"ene.\",\n                \"Rol.\",\n                \"Fabric.\",\n                \"Comm.\",\n                \"vid.\",\n                \"Da.\",\n                \"dic.\",\n                \"ss.\",\n                \"abr.\",\n                \"ntra.\",\n                \"Sra.\",\n                \"dtor.\",\n                \"cf.\",\n                \"dom.\",\n                \"prov.\",\n                \"Emm.\",\n                \"Sr.\",\n                \"licdo.\",\n                \"p.ej.\",\n                \"bol.\",\n                \"figs.\",\n                \"Vda.\",\n                \"Dr.\",\n                \"ntro.\",\n                \"Desv.\",\n                \"O.M.\",\n                \"Ldo.\",\n                \"Drs.\",\n                \"sáb.\",\n                \"feb.\",\n                \"Ltda.\",\n                \"Lcda.\",\n                \"Exma.\",\n                \"C.V.\",\n                \"SS.MM.\",\n                \"Lda.\",\n                \"U.S.\",\n                \"hnos.\",\n                \"R.D.\",\n                \"Korn.\",\n                \"v.gr.\",\n                \"vs.\",\n                \"Ilmas.\",\n                \"Rdo.\",\n                \"ej.\",\n                \"vie.\",\n                \"jue.\",\n                \"a. C.\",\n                \"Ilmos.\",\n                \"e. c.\",\n                \"Excma.\",\n                \"afma.\",\n                \"licda.\",\n                \"Em.\",\n                \"K.\",\n                \"sras.\",\n                \"MM.\",\n                \"fund.\",\n                \"Mons.\",\n                \"Lcdo.\",\n                \"afmo.\",\n                \"C.\",\n                \"A.C.\",\n                \"dptos.\",\n                \"Col.\",\n                \"Srta.\",\n                \"Av.\",\n                \"Ant.\",\n                \"depto.\",\n                \"Var.\",\n                \"H.P.\",\n                \"D.\",\n                \"M.\",\n                \"C.P.\",\n                \"Rev.\",\n                \"Rvdmos.\",\n                \"Fr.\",\n                \"Ilmo.\",\n                \"afmos.\",\n                \"Ltd.\",\n                \"afmas.\",\n                \"prof.\",\n                \"lun.\",\n                \"SS.AA.\",\n                \"Sol.\",\n                \"nov.\",\n                \"mss.\",\n                \"Dña.\",\n                \"Seg.\",\n                \"mar.\",\n                \"Rvdmo.\",\n                \"Reg.\",\n                \"ms.\",\n                \"Sras.\",\n                \"sres.\",\n                \"U.S.A.\",\n                \"Sta.\",\n                \"Sdad.\",\n                \"Dra.\",\n                \"srs.\",\n                \"R.U.\",\n                \"deptos.\",\n                \"dpto.\",\n                \"jun.\",\n                \"bco.\",\n                \"Cía.\",\n                \"Id.\",\n                \"Mr.\",\n                \"e.g.\",\n                \"C.S.\",\n                \"Excmas.\",\n                \"Dª.\",\n                \"Rvdo.\",\n                \"Lic.\",\n                \"cfr.\",\n                \"Corp.\",\n                \"Dto.\",\n                \"Ilma.\",\n                \"L.\",\n                \"All.\",\n                \"PP.\",\n                \"d. C.\",\n                \"Ltdo.\",\n                \"mtro.\",\n                \"Mrs.\",\n                \"Desc.\",\n                \"Avda.\",\n                \"Exmas.\",\n                \"a. e. c.\",\n                \"Bien.\",\n                \"Exmos.\",\n                \"AA.\",\n                \"Sto.\",\n                \"CA.\",\n                \"sept.\",\n                \"Exc.\",\n                \"c/c.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"fr\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"aux.\",\n                \"config.\",\n                \"collab.\",\n                \"M.\",\n                \"dim.\",\n                \"imprim.\",\n                \"oct.\",\n                \"syst.\",\n                \"bull.\",\n                \"MM.\",\n                \"doc.\",\n                \"P.O.\",\n                \"hôp.\",\n                \"Mart.\",\n                \"juil.\",\n                \"broch.\",\n                \"adr.\",\n                \"symb.\",\n                \"C.\",\n                \"anc.\",\n                \"voit.\",\n                \"Jr.\",\n                \"graph.\",\n                \"dir.\",\n                \"éd.\",\n                \"fig.\",\n                \"édit.\",\n                \"niv.\",\n                \"quart.\",\n                \"cam.\",\n                \"éval.\",\n                \"anon.\",\n                \"réf.\",\n                \"Comm.\",\n                \"Prof.\",\n                \"févr.\",\n                \"indus.\",\n                \"DC.\",\n                \"équiv.\",\n                \"illustr.\",\n                \"acoust.\",\n                \"nov.\",\n                \"L.\",\n                \"All.\",\n                \"U.S.\",\n                \"S.M.A.R.T.\",\n                \"sept.\",\n                \"avr.\",\n                \"jeu.\",\n                \"dest.\",\n                \"P.-D. G.\",\n                \"ill.\",\n                \"coll.\",\n                \"encycl.\",\n                \"mer.\",\n                \"Desc.\",\n                \"ven.\",\n                \"P.\",\n                \"lun.\",\n                \"Inc.\",\n                \"sam.\",\n                \"D.\",\n                \"append.\",\n                \"Var.\",\n                \"categ.\",\n                \"janv.\",\n                \"S.A.\",\n                \"imm.\",\n                \"U.S.A.\",\n                \"mar.\",\n                \"exempl.\",\n                \"déc.\",\n                \"ann.\",\n                \"U.\",\n                \"synth.\",\n                \"dict.\",\n                \"av. J.-C.\",\n                \"W.\",\n                \"Op.\",\n                \"ap. J.-C.\",\n                \"gouv.\",\n                \"trav. publ.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"it\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"N.B.\",\n                \"div.\",\n                \"a.C.\",\n                \"fig.\",\n                \"d.p.R.\",\n                \"c.c.p.\",\n                \"Cfr.\",\n                \"vol.\",\n                \"Geom.\",\n                \"O.d.G.\",\n                \"S.p.A.\",\n                \"ver.\",\n                \"N.d.A.\",\n                \"dott.\",\n                \"arch.\",\n                \"d.C.\",\n                \"N.d.T.\",\n                \"rag.\",\n                \"Sig.\",\n                \"Mod.\",\n                \"pag.\",\n                \"dr.\",\n                \"tav.\",\n                \"N.d.E.\",\n                \"DC.\",\n                \"mitt.\",\n                \"Ing.\",\n                \"int.\",\n                \"on.\",\n                \"C.P.\",\n                \"ag.\",\n                \"L.\",\n                \"U.S.\",\n                \"S.M.A.R.T.\",\n                \"p.i.\",\n                \"tab.\",\n                \"Ltd.\",\n                \"Liv.\",\n                \"D.\",\n                \"U.S.A.\",\n                \"sez.\",\n                \"avv.\",\n                \"S.A.R.\",\n                \"all.\",\n                \"p.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"ja\": {\n        \"word\": {\n            \"segmentRules\": {\n                \"13.3\": {\n                    \"after\": \"$Hiragana\",\n                    \"before\": \"$Hiragana\",\n                    \"breaks\": false\n                },\n                \"13.4\": {\n                    \"after\": \"$Ideographic\",\n                    \"before\": \"$Ideographic\",\n                    \"breaks\": false\n                }\n            },\n            \"suppressions\": [],\n            \"variables\": {\n                \"$Hiragana\": \"((?:[\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F]|\\\\uD82C[\\\\uDC01-\\\\uDD1F\\\\uDD32\\\\uDD50-\\\\uDD52]|\\\\uD83C\\\\uDE00)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Ideographic\": \"((?:[\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3038-\\\\u303B\\\\u3400-\\\\u4DBF\\\\u4E00-\\\\u9FFF\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9]|\\\\uD81B\\\\uDFE4|[\\\\uD81C-\\\\uD820\\\\uD822\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872\\\\uD874-\\\\uD879\\\\uD880-\\\\uD883\\\\uD885-\\\\uD887][\\\\uDC00-\\\\uDFFF]|\\\\uD821[\\\\uDC00-\\\\uDFF7]|\\\\uD823[\\\\uDC00-\\\\uDCD5\\\\uDCFF-\\\\uDD08]|\\\\uD82C[\\\\uDD70-\\\\uDEFB]|\\\\uD869[\\\\uDC00-\\\\uDEDF\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF39\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1\\\\uDEB0-\\\\uDFFF]|\\\\uD87A[\\\\uDC00-\\\\uDFE0\\\\uDFF0-\\\\uDFFF]|\\\\uD87B[\\\\uDC00-\\\\uDE5D]|\\\\uD87E[\\\\uDC00-\\\\uDE1D]|\\\\uD884[\\\\uDC00-\\\\uDF4A\\\\uDF50-\\\\uDFFF]|\\\\uD888[\\\\uDC00-\\\\uDFAF])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\"\n            }\n        }\n    },\n    \"pt\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"psicol.\",\n                \"fig.\",\n                \"compl.\",\n                \"rep.\",\n                \"cap.\",\n                \"doc.\",\n                \"fisiol.\",\n                \"dipl.\",\n                \"astron.\",\n                \"port.\",\n                \"eletrôn.\",\n                \"geom.\",\n                \"mov.\",\n                \"ago.\",\n                \"trad.\",\n                \"arquit.\",\n                \"dez.\",\n                \"ed.\",\n                \"apt.\",\n                \"Exmo.\",\n                \"col.\",\n                \"ff.\",\n                \"univ.\",\n                \"res.\",\n                \"R.\",\n                \"transp.\",\n                \"D.C\",\n                \"l.\",\n                \"des.\",\n                \"fev.\",\n                \"abr.\",\n                \"liter.\",\n                \"lat.\",\n                \"Dir.\",\n                \"cf.\",\n                \"adm.\",\n                \"fot.\",\n                \"p.m.\",\n                \"P.M.\",\n                \"créd.\",\n                \"jur.\",\n                \"com.\",\n                \"anat.\",\n                \"dir.\",\n                \"end.\",\n                \"fís.\",\n                \"E.\",\n                \"Est.\",\n                \"cont.\",\n                \"matem.\",\n                \"Drs.\",\n                \"gên.\",\n                \"neol.\",\n                \"pág.\",\n                \"índ.\",\n                \"Ltda.\",\n                \"Exma.\",\n                \"esp.\",\n                \"ingl.\",\n                \"tecnol.\",\n                \"Mar.\",\n                \"símb.\",\n                \"Pe.\",\n                \"pal.\",\n                \"filos.\",\n                \"V.T.\",\n                \"fasc.\",\n                \"vs.\",\n                \"mai.\",\n                \"S.A.\",\n                \"profa.\",\n                \"N.Sra.\",\n                \"r.s.v.p.\",\n                \"cel.\",\n                \"mat.\",\n                \"abrev.\",\n                \"out.\",\n                \"long.\",\n                \"aux.\",\n                \"arit.\",\n                \"aer.\",\n                \"jul.\",\n                \"lin.\",\n                \"S.\",\n                \"méd.\",\n                \"odontol.\",\n                \"org.\",\n                \"A.C.\",\n                \"jun.\",\n                \"déb.\",\n                \"Av.\",\n                \"álg.\",\n                \"sup.\",\n                \"fl.\",\n                \"odont.\",\n                \"caps.\",\n                \"relat.\",\n                \"organiz.\",\n                \"hist.\",\n                \"Fr.\",\n                \"Ilmo.\",\n                \"fem.\",\n                \"ap.\",\n                \"Ltd.\",\n                \"pol.\",\n                \"séc.\",\n                \"prof.\",\n                \"cx.\",\n                \"nov.\",\n                \"quím.\",\n                \"mús.\",\n                \"agric.\",\n                \"mar.\",\n                \"W.C.\",\n                \"fr.\",\n                \"cat.\",\n                \"jan.\",\n                \"pron.\",\n                \"rel.\",\n                \"autom.\",\n                \"Sta.\",\n                \"Dra.\",\n                \"p.\",\n                \"tel.\",\n                \"div.\",\n                \"p. ex.\",\n                \"a.C.\",\n                \"bras.\",\n                \"Alm.\",\n                \"Dr.\",\n                \"comp.\",\n                \"pq.\",\n                \"arqueol.\",\n                \"náut.\",\n                \"biogr.\",\n                \"f.\",\n                \"círc.\",\n                \"fac.\",\n                \"d.C.\",\n                \"apart.\",\n                \"ex.\",\n                \"Jr.\",\n                \"set.\",\n                \"tec.\",\n                \"sociol.\",\n                \"gram.\",\n                \"ind.\",\n                \"Ilma.\",\n                \"vol.\",\n                \"eng.\",\n                \"rod.\",\n                \"Ph.D.\",\n                \"Dras.\",\n                \"pp.\",\n                \"elem.\",\n                \"máq.\",\n                \"cód.\",\n                \"eletr.\",\n                \"prod.\",\n                \"ref.\",\n                \"fil.\",\n                \"a.m.\",\n                \"A.M\",\n                \"obs.\",\n                \"N.T.\",\n                \"contab.\",\n                \"Sto.\",\n                \"lit.\",\n                \"educ.\",\n                \"rementente\",\n                \"desc.\",\n                \"próx.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"root\": {\n        \"grapheme\": {\n            \"segmentRules\": {\n                \"11\": {\n                    \"after\": \"$ExtPict\",\n                    \"before\": \"$ExtPict$Extend*$ZWJ\",\n                    \"breaks\": false\n                },\n                \"12\": {\n                    \"after\": \"$RI\",\n                    \"before\": \"^($RI$RI)*$RI\",\n                    \"breaks\": false\n                },\n                \"13\": {\n                    \"after\": \"$RI\",\n                    \"before\": \"[^\\\\uDDE6-\\\\uDDFF]($RI$RI)*$RI\",\n                    \"breaks\": false\n                },\n                \"3\": {\n                    \"after\": \"$LF\",\n                    \"before\": \"$CR\",\n                    \"breaks\": false\n                },\n                \"4\": {\n                    \"before\": \"($Control|$CR|$LF)\",\n                    \"breaks\": true\n                },\n                \"5\": {\n                    \"after\": \"($Control|$CR|$LF)\",\n                    \"breaks\": true\n                },\n                \"6\": {\n                    \"after\": \"($L|$V|$LV|$LVT)\",\n                    \"before\": \"$L\",\n                    \"breaks\": false\n                },\n                \"7\": {\n                    \"after\": \"($V|$T)\",\n                    \"before\": \"($LV|$V)\",\n                    \"breaks\": false\n                },\n                \"8\": {\n                    \"after\": \"$T\",\n                    \"before\": \"($LVT|$T)\",\n                    \"breaks\": false\n                },\n                \"9\": {\n                    \"after\": \"($Extend|$ZWJ)\",\n                    \"breaks\": false\n                },\n                \"9.1\": {\n                    \"after\": \"$SpacingMark\",\n                    \"breaks\": false\n                },\n                \"9.2\": {\n                    \"before\": \"$Prepend\",\n                    \"breaks\": false\n                },\n                \"9.3\": {\n                    \"after\": \"$LinkingConsonant\",\n                    \"before\": \"$LinkingConsonant$ExtCccZwj*$ConjunctLinker$ExtCccZwj*\",\n                    \"breaks\": false\n                }\n            },\n            \"suppressions\": [],\n            \"variables\": {\n                \"$CR\": \"\\\\r\",\n                \"$ConjunctLinker\": \"[\\\\u094D\\\\u09CD\\\\u0ACD\\\\u0B4D\\\\u0C4D\\\\u0D4D]\",\n                \"$ConjunctLinkingScripts\": \"(?:[\\\\u0900-\\\\u0950\\\\u0955-\\\\u0963\\\\u0966-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E3\\\\u09E6-\\\\u09FE\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AF1\\\\u0AF9-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B63\\\\u0B66-\\\\u0B77\\\\u0C00-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3C-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60-\\\\u0C63\\\\u0C66-\\\\u0C6F\\\\u0C77-\\\\u0C7F\\\\u0D00-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4F\\\\u0D54-\\\\u0D63\\\\u0D66-\\\\u0D7F\\\\uA8E0-\\\\uA8FF]|\\\\uD806[\\\\uDF00-\\\\uDF09])\",\n                \"$Control\": \"(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\x1F\\\\x7F-\\\\x9F\\\\xAD\\\\u061C\\\\u180E\\\\u200B\\\\u200E\\\\u200F\\\\u2028-\\\\u202E\\\\u2060-\\\\u206F\\\\uFEFF\\\\uFFF0-\\\\uFFFB]|\\\\uD80D[\\\\uDC30-\\\\uDC3F]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40[\\\\uDC00-\\\\uDC1F\\\\uDC80-\\\\uDCFF\\\\uDDF0-\\\\uDFFF]|[\\\\uDB41-\\\\uDB43][\\\\uDC00-\\\\uDFFF])\",\n                \"$ExtCccZwj\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09BE\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3E\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE\\\\u0BC0\\\\u0BCD\\\\u0BD7\\\\u0C00\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CBF\\\\u0CC0\\\\u0CC2\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D3E\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81\\\\u0DCA\\\\u0DCF\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0DDF\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B03\\\\u1B34-\\\\u1B3D\\\\u1B42-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF3\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200D\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA82C\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA953\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC01\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC81\\\\uDCB3-\\\\uDCB6\\\\uDCB9\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD2B\\\\uDD2D-\\\\uDD34\\\\uDD73\\\\uDD80\\\\uDD81\\\\uDDB6-\\\\uDDBE\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCF\\\\uDE2F-\\\\uDE31\\\\uDE34-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF\\\\uDEE3-\\\\uDEEA\\\\uDF00\\\\uDF01\\\\uDF3B\\\\uDF3C\\\\uDF3E\\\\uDF40\\\\uDF4D\\\\uDF57\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8\\\\uDFBB-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFC9\\\\uDFCE-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC38-\\\\uDC3F\\\\uDC42-\\\\uDC44\\\\uDC46\\\\uDC5E\\\\uDCB0\\\\uDCB3-\\\\uDCB8\\\\uDCBA\\\\uDCBD\\\\uDCBF\\\\uDCC0\\\\uDCC2\\\\uDCC3\\\\uDDAF\\\\uDDB2-\\\\uDDB5\\\\uDDBC\\\\uDDBD\\\\uDDBF\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE33-\\\\uDE3A\\\\uDE3D\\\\uDE3F\\\\uDE40\\\\uDEAB\\\\uDEAD\\\\uDEB0-\\\\uDEB7\\\\uDF1D\\\\uDF1F\\\\uDF22-\\\\uDF25\\\\uDF27-\\\\uDF2B]|\\\\uD806[\\\\uDC2F-\\\\uDC37\\\\uDC39\\\\uDC3A\\\\uDD30\\\\uDD3B-\\\\uDD3E\\\\uDD43\\\\uDDD4-\\\\uDDD7\\\\uDDDA\\\\uDDDB\\\\uDDE0\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE38\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE56\\\\uDE59-\\\\uDE5B\\\\uDE8A-\\\\uDE96\\\\uDE98\\\\uDE99]|\\\\uD807[\\\\uDC30-\\\\uDC36\\\\uDC38-\\\\uDC3D\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCAA-\\\\uDCB0\\\\uDCB2\\\\uDCB3\\\\uDCB5\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD90\\\\uDD91\\\\uDD95\\\\uDD97\\\\uDEF3\\\\uDEF4\\\\uDF00\\\\uDF01\\\\uDF36-\\\\uDF3A\\\\uDF40-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD29\\\\uDD2D-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\n                \"$ExtPict\": \"(?:[\\\\xA9\\\\xAE\\\\u203C\\\\u2049\\\\u2122\\\\u2139\\\\u2194-\\\\u2199\\\\u21A9\\\\u21AA\\\\u231A\\\\u231B\\\\u2328\\\\u2388\\\\u23CF\\\\u23E9-\\\\u23F3\\\\u23F8-\\\\u23FA\\\\u24C2\\\\u25AA\\\\u25AB\\\\u25B6\\\\u25C0\\\\u25FB-\\\\u25FE\\\\u2600-\\\\u2605\\\\u2607-\\\\u2612\\\\u2614-\\\\u2685\\\\u2690-\\\\u2705\\\\u2708-\\\\u2712\\\\u2714\\\\u2716\\\\u271D\\\\u2721\\\\u2728\\\\u2733\\\\u2734\\\\u2744\\\\u2747\\\\u274C\\\\u274E\\\\u2753-\\\\u2755\\\\u2757\\\\u2763-\\\\u2767\\\\u2795-\\\\u2797\\\\u27A1\\\\u27B0\\\\u27BF\\\\u2934\\\\u2935\\\\u2B05-\\\\u2B07\\\\u2B1B\\\\u2B1C\\\\u2B50\\\\u2B55\\\\u3030\\\\u303D\\\\u3297\\\\u3299]|\\\\uD83C[\\\\uDC00-\\\\uDCFF\\\\uDD0D-\\\\uDD0F\\\\uDD2F\\\\uDD6C-\\\\uDD71\\\\uDD7E\\\\uDD7F\\\\uDD8E\\\\uDD91-\\\\uDD9A\\\\uDDAD-\\\\uDDE5\\\\uDE01-\\\\uDE0F\\\\uDE1A\\\\uDE2F\\\\uDE32-\\\\uDE3A\\\\uDE3C-\\\\uDE3F\\\\uDE49-\\\\uDFFA]|\\\\uD83D[\\\\uDC00-\\\\uDD3D\\\\uDD46-\\\\uDE4F\\\\uDE80-\\\\uDEFF\\\\uDF74-\\\\uDF7F\\\\uDFD5-\\\\uDFFF]|\\\\uD83E[\\\\uDC0C-\\\\uDC0F\\\\uDC48-\\\\uDC4F\\\\uDC5A-\\\\uDC5F\\\\uDC88-\\\\uDC8F\\\\uDCAE-\\\\uDCFF\\\\uDD0C-\\\\uDD3A\\\\uDD3C-\\\\uDD45\\\\uDD47-\\\\uDEFF]|\\\\uD83F[\\\\uDC00-\\\\uDFFD])\",\n                \"$Extend\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09BE\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3E\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE\\\\u0BC0\\\\u0BCD\\\\u0BD7\\\\u0C00\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CBF\\\\u0CC0\\\\u0CC2\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D3E\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81\\\\u0DCA\\\\u0DCF\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0DDF\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B03\\\\u1B34-\\\\u1B3D\\\\u1B42-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF3\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA82C\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA953\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC01\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC81\\\\uDCB3-\\\\uDCB6\\\\uDCB9\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD2B\\\\uDD2D-\\\\uDD34\\\\uDD73\\\\uDD80\\\\uDD81\\\\uDDB6-\\\\uDDBE\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCF\\\\uDE2F-\\\\uDE31\\\\uDE34-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF\\\\uDEE3-\\\\uDEEA\\\\uDF00\\\\uDF01\\\\uDF3B\\\\uDF3C\\\\uDF3E\\\\uDF40\\\\uDF4D\\\\uDF57\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8\\\\uDFBB-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFC9\\\\uDFCE-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC38-\\\\uDC3F\\\\uDC42-\\\\uDC44\\\\uDC46\\\\uDC5E\\\\uDCB0\\\\uDCB3-\\\\uDCB8\\\\uDCBA\\\\uDCBD\\\\uDCBF\\\\uDCC0\\\\uDCC2\\\\uDCC3\\\\uDDAF\\\\uDDB2-\\\\uDDB5\\\\uDDBC\\\\uDDBD\\\\uDDBF\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE33-\\\\uDE3A\\\\uDE3D\\\\uDE3F\\\\uDE40\\\\uDEAB\\\\uDEAD\\\\uDEB0-\\\\uDEB7\\\\uDF1D\\\\uDF1F\\\\uDF22-\\\\uDF25\\\\uDF27-\\\\uDF2B]|\\\\uD806[\\\\uDC2F-\\\\uDC37\\\\uDC39\\\\uDC3A\\\\uDD30\\\\uDD3B-\\\\uDD3E\\\\uDD43\\\\uDDD4-\\\\uDDD7\\\\uDDDA\\\\uDDDB\\\\uDDE0\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE38\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE56\\\\uDE59-\\\\uDE5B\\\\uDE8A-\\\\uDE96\\\\uDE98\\\\uDE99]|\\\\uD807[\\\\uDC30-\\\\uDC36\\\\uDC38-\\\\uDC3D\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCAA-\\\\uDCB0\\\\uDCB2\\\\uDCB3\\\\uDCB5\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD90\\\\uDD91\\\\uDD95\\\\uDD97\\\\uDEF3\\\\uDEF4\\\\uDF00\\\\uDF01\\\\uDF36-\\\\uDF3A\\\\uDF40-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD29\\\\uDD2D-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\n                \"$L\": \"[\\\\u1100-\\\\u115F\\\\uA960-\\\\uA97C]\",\n                \"$LF\": \"\\\\n\",\n                \"$LV\": \"[\\\\uAC00\\\\uAC1C\\\\uAC38\\\\uAC54\\\\uAC70\\\\uAC8C\\\\uACA8\\\\uACC4\\\\uACE0\\\\uACFC\\\\uAD18\\\\uAD34\\\\uAD50\\\\uAD6C\\\\uAD88\\\\uADA4\\\\uADC0\\\\uADDC\\\\uADF8\\\\uAE14\\\\uAE30\\\\uAE4C\\\\uAE68\\\\uAE84\\\\uAEA0\\\\uAEBC\\\\uAED8\\\\uAEF4\\\\uAF10\\\\uAF2C\\\\uAF48\\\\uAF64\\\\uAF80\\\\uAF9C\\\\uAFB8\\\\uAFD4\\\\uAFF0\\\\uB00C\\\\uB028\\\\uB044\\\\uB060\\\\uB07C\\\\uB098\\\\uB0B4\\\\uB0D0\\\\uB0EC\\\\uB108\\\\uB124\\\\uB140\\\\uB15C\\\\uB178\\\\uB194\\\\uB1B0\\\\uB1CC\\\\uB1E8\\\\uB204\\\\uB220\\\\uB23C\\\\uB258\\\\uB274\\\\uB290\\\\uB2AC\\\\uB2C8\\\\uB2E4\\\\uB300\\\\uB31C\\\\uB338\\\\uB354\\\\uB370\\\\uB38C\\\\uB3A8\\\\uB3C4\\\\uB3E0\\\\uB3FC\\\\uB418\\\\uB434\\\\uB450\\\\uB46C\\\\uB488\\\\uB4A4\\\\uB4C0\\\\uB4DC\\\\uB4F8\\\\uB514\\\\uB530\\\\uB54C\\\\uB568\\\\uB584\\\\uB5A0\\\\uB5BC\\\\uB5D8\\\\uB5F4\\\\uB610\\\\uB62C\\\\uB648\\\\uB664\\\\uB680\\\\uB69C\\\\uB6B8\\\\uB6D4\\\\uB6F0\\\\uB70C\\\\uB728\\\\uB744\\\\uB760\\\\uB77C\\\\uB798\\\\uB7B4\\\\uB7D0\\\\uB7EC\\\\uB808\\\\uB824\\\\uB840\\\\uB85C\\\\uB878\\\\uB894\\\\uB8B0\\\\uB8CC\\\\uB8E8\\\\uB904\\\\uB920\\\\uB93C\\\\uB958\\\\uB974\\\\uB990\\\\uB9AC\\\\uB9C8\\\\uB9E4\\\\uBA00\\\\uBA1C\\\\uBA38\\\\uBA54\\\\uBA70\\\\uBA8C\\\\uBAA8\\\\uBAC4\\\\uBAE0\\\\uBAFC\\\\uBB18\\\\uBB34\\\\uBB50\\\\uBB6C\\\\uBB88\\\\uBBA4\\\\uBBC0\\\\uBBDC\\\\uBBF8\\\\uBC14\\\\uBC30\\\\uBC4C\\\\uBC68\\\\uBC84\\\\uBCA0\\\\uBCBC\\\\uBCD8\\\\uBCF4\\\\uBD10\\\\uBD2C\\\\uBD48\\\\uBD64\\\\uBD80\\\\uBD9C\\\\uBDB8\\\\uBDD4\\\\uBDF0\\\\uBE0C\\\\uBE28\\\\uBE44\\\\uBE60\\\\uBE7C\\\\uBE98\\\\uBEB4\\\\uBED0\\\\uBEEC\\\\uBF08\\\\uBF24\\\\uBF40\\\\uBF5C\\\\uBF78\\\\uBF94\\\\uBFB0\\\\uBFCC\\\\uBFE8\\\\uC004\\\\uC020\\\\uC03C\\\\uC058\\\\uC074\\\\uC090\\\\uC0AC\\\\uC0C8\\\\uC0E4\\\\uC100\\\\uC11C\\\\uC138\\\\uC154\\\\uC170\\\\uC18C\\\\uC1A8\\\\uC1C4\\\\uC1E0\\\\uC1FC\\\\uC218\\\\uC234\\\\uC250\\\\uC26C\\\\uC288\\\\uC2A4\\\\uC2C0\\\\uC2DC\\\\uC2F8\\\\uC314\\\\uC330\\\\uC34C\\\\uC368\\\\uC384\\\\uC3A0\\\\uC3BC\\\\uC3D8\\\\uC3F4\\\\uC410\\\\uC42C\\\\uC448\\\\uC464\\\\uC480\\\\uC49C\\\\uC4B8\\\\uC4D4\\\\uC4F0\\\\uC50C\\\\uC528\\\\uC544\\\\uC560\\\\uC57C\\\\uC598\\\\uC5B4\\\\uC5D0\\\\uC5EC\\\\uC608\\\\uC624\\\\uC640\\\\uC65C\\\\uC678\\\\uC694\\\\uC6B0\\\\uC6CC\\\\uC6E8\\\\uC704\\\\uC720\\\\uC73C\\\\uC758\\\\uC774\\\\uC790\\\\uC7AC\\\\uC7C8\\\\uC7E4\\\\uC800\\\\uC81C\\\\uC838\\\\uC854\\\\uC870\\\\uC88C\\\\uC8A8\\\\uC8C4\\\\uC8E0\\\\uC8FC\\\\uC918\\\\uC934\\\\uC950\\\\uC96C\\\\uC988\\\\uC9A4\\\\uC9C0\\\\uC9DC\\\\uC9F8\\\\uCA14\\\\uCA30\\\\uCA4C\\\\uCA68\\\\uCA84\\\\uCAA0\\\\uCABC\\\\uCAD8\\\\uCAF4\\\\uCB10\\\\uCB2C\\\\uCB48\\\\uCB64\\\\uCB80\\\\uCB9C\\\\uCBB8\\\\uCBD4\\\\uCBF0\\\\uCC0C\\\\uCC28\\\\uCC44\\\\uCC60\\\\uCC7C\\\\uCC98\\\\uCCB4\\\\uCCD0\\\\uCCEC\\\\uCD08\\\\uCD24\\\\uCD40\\\\uCD5C\\\\uCD78\\\\uCD94\\\\uCDB0\\\\uCDCC\\\\uCDE8\\\\uCE04\\\\uCE20\\\\uCE3C\\\\uCE58\\\\uCE74\\\\uCE90\\\\uCEAC\\\\uCEC8\\\\uCEE4\\\\uCF00\\\\uCF1C\\\\uCF38\\\\uCF54\\\\uCF70\\\\uCF8C\\\\uCFA8\\\\uCFC4\\\\uCFE0\\\\uCFFC\\\\uD018\\\\uD034\\\\uD050\\\\uD06C\\\\uD088\\\\uD0A4\\\\uD0C0\\\\uD0DC\\\\uD0F8\\\\uD114\\\\uD130\\\\uD14C\\\\uD168\\\\uD184\\\\uD1A0\\\\uD1BC\\\\uD1D8\\\\uD1F4\\\\uD210\\\\uD22C\\\\uD248\\\\uD264\\\\uD280\\\\uD29C\\\\uD2B8\\\\uD2D4\\\\uD2F0\\\\uD30C\\\\uD328\\\\uD344\\\\uD360\\\\uD37C\\\\uD398\\\\uD3B4\\\\uD3D0\\\\uD3EC\\\\uD408\\\\uD424\\\\uD440\\\\uD45C\\\\uD478\\\\uD494\\\\uD4B0\\\\uD4CC\\\\uD4E8\\\\uD504\\\\uD520\\\\uD53C\\\\uD558\\\\uD574\\\\uD590\\\\uD5AC\\\\uD5C8\\\\uD5E4\\\\uD600\\\\uD61C\\\\uD638\\\\uD654\\\\uD670\\\\uD68C\\\\uD6A8\\\\uD6C4\\\\uD6E0\\\\uD6FC\\\\uD718\\\\uD734\\\\uD750\\\\uD76C\\\\uD788]\",\n                \"$LVT\": \"[\\\\uAC01-\\\\uAC1B\\\\uAC1D-\\\\uAC37\\\\uAC39-\\\\uAC53\\\\uAC55-\\\\uAC6F\\\\uAC71-\\\\uAC8B\\\\uAC8D-\\\\uACA7\\\\uACA9-\\\\uACC3\\\\uACC5-\\\\uACDF\\\\uACE1-\\\\uACFB\\\\uACFD-\\\\uAD17\\\\uAD19-\\\\uAD33\\\\uAD35-\\\\uAD4F\\\\uAD51-\\\\uAD6B\\\\uAD6D-\\\\uAD87\\\\uAD89-\\\\uADA3\\\\uADA5-\\\\uADBF\\\\uADC1-\\\\uADDB\\\\uADDD-\\\\uADF7\\\\uADF9-\\\\uAE13\\\\uAE15-\\\\uAE2F\\\\uAE31-\\\\uAE4B\\\\uAE4D-\\\\uAE67\\\\uAE69-\\\\uAE83\\\\uAE85-\\\\uAE9F\\\\uAEA1-\\\\uAEBB\\\\uAEBD-\\\\uAED7\\\\uAED9-\\\\uAEF3\\\\uAEF5-\\\\uAF0F\\\\uAF11-\\\\uAF2B\\\\uAF2D-\\\\uAF47\\\\uAF49-\\\\uAF63\\\\uAF65-\\\\uAF7F\\\\uAF81-\\\\uAF9B\\\\uAF9D-\\\\uAFB7\\\\uAFB9-\\\\uAFD3\\\\uAFD5-\\\\uAFEF\\\\uAFF1-\\\\uB00B\\\\uB00D-\\\\uB027\\\\uB029-\\\\uB043\\\\uB045-\\\\uB05F\\\\uB061-\\\\uB07B\\\\uB07D-\\\\uB097\\\\uB099-\\\\uB0B3\\\\uB0B5-\\\\uB0CF\\\\uB0D1-\\\\uB0EB\\\\uB0ED-\\\\uB107\\\\uB109-\\\\uB123\\\\uB125-\\\\uB13F\\\\uB141-\\\\uB15B\\\\uB15D-\\\\uB177\\\\uB179-\\\\uB193\\\\uB195-\\\\uB1AF\\\\uB1B1-\\\\uB1CB\\\\uB1CD-\\\\uB1E7\\\\uB1E9-\\\\uB203\\\\uB205-\\\\uB21F\\\\uB221-\\\\uB23B\\\\uB23D-\\\\uB257\\\\uB259-\\\\uB273\\\\uB275-\\\\uB28F\\\\uB291-\\\\uB2AB\\\\uB2AD-\\\\uB2C7\\\\uB2C9-\\\\uB2E3\\\\uB2E5-\\\\uB2FF\\\\uB301-\\\\uB31B\\\\uB31D-\\\\uB337\\\\uB339-\\\\uB353\\\\uB355-\\\\uB36F\\\\uB371-\\\\uB38B\\\\uB38D-\\\\uB3A7\\\\uB3A9-\\\\uB3C3\\\\uB3C5-\\\\uB3DF\\\\uB3E1-\\\\uB3FB\\\\uB3FD-\\\\uB417\\\\uB419-\\\\uB433\\\\uB435-\\\\uB44F\\\\uB451-\\\\uB46B\\\\uB46D-\\\\uB487\\\\uB489-\\\\uB4A3\\\\uB4A5-\\\\uB4BF\\\\uB4C1-\\\\uB4DB\\\\uB4DD-\\\\uB4F7\\\\uB4F9-\\\\uB513\\\\uB515-\\\\uB52F\\\\uB531-\\\\uB54B\\\\uB54D-\\\\uB567\\\\uB569-\\\\uB583\\\\uB585-\\\\uB59F\\\\uB5A1-\\\\uB5BB\\\\uB5BD-\\\\uB5D7\\\\uB5D9-\\\\uB5F3\\\\uB5F5-\\\\uB60F\\\\uB611-\\\\uB62B\\\\uB62D-\\\\uB647\\\\uB649-\\\\uB663\\\\uB665-\\\\uB67F\\\\uB681-\\\\uB69B\\\\uB69D-\\\\uB6B7\\\\uB6B9-\\\\uB6D3\\\\uB6D5-\\\\uB6EF\\\\uB6F1-\\\\uB70B\\\\uB70D-\\\\uB727\\\\uB729-\\\\uB743\\\\uB745-\\\\uB75F\\\\uB761-\\\\uB77B\\\\uB77D-\\\\uB797\\\\uB799-\\\\uB7B3\\\\uB7B5-\\\\uB7CF\\\\uB7D1-\\\\uB7EB\\\\uB7ED-\\\\uB807\\\\uB809-\\\\uB823\\\\uB825-\\\\uB83F\\\\uB841-\\\\uB85B\\\\uB85D-\\\\uB877\\\\uB879-\\\\uB893\\\\uB895-\\\\uB8AF\\\\uB8B1-\\\\uB8CB\\\\uB8CD-\\\\uB8E7\\\\uB8E9-\\\\uB903\\\\uB905-\\\\uB91F\\\\uB921-\\\\uB93B\\\\uB93D-\\\\uB957\\\\uB959-\\\\uB973\\\\uB975-\\\\uB98F\\\\uB991-\\\\uB9AB\\\\uB9AD-\\\\uB9C7\\\\uB9C9-\\\\uB9E3\\\\uB9E5-\\\\uB9FF\\\\uBA01-\\\\uBA1B\\\\uBA1D-\\\\uBA37\\\\uBA39-\\\\uBA53\\\\uBA55-\\\\uBA6F\\\\uBA71-\\\\uBA8B\\\\uBA8D-\\\\uBAA7\\\\uBAA9-\\\\uBAC3\\\\uBAC5-\\\\uBADF\\\\uBAE1-\\\\uBAFB\\\\uBAFD-\\\\uBB17\\\\uBB19-\\\\uBB33\\\\uBB35-\\\\uBB4F\\\\uBB51-\\\\uBB6B\\\\uBB6D-\\\\uBB87\\\\uBB89-\\\\uBBA3\\\\uBBA5-\\\\uBBBF\\\\uBBC1-\\\\uBBDB\\\\uBBDD-\\\\uBBF7\\\\uBBF9-\\\\uBC13\\\\uBC15-\\\\uBC2F\\\\uBC31-\\\\uBC4B\\\\uBC4D-\\\\uBC67\\\\uBC69-\\\\uBC83\\\\uBC85-\\\\uBC9F\\\\uBCA1-\\\\uBCBB\\\\uBCBD-\\\\uBCD7\\\\uBCD9-\\\\uBCF3\\\\uBCF5-\\\\uBD0F\\\\uBD11-\\\\uBD2B\\\\uBD2D-\\\\uBD47\\\\uBD49-\\\\uBD63\\\\uBD65-\\\\uBD7F\\\\uBD81-\\\\uBD9B\\\\uBD9D-\\\\uBDB7\\\\uBDB9-\\\\uBDD3\\\\uBDD5-\\\\uBDEF\\\\uBDF1-\\\\uBE0B\\\\uBE0D-\\\\uBE27\\\\uBE29-\\\\uBE43\\\\uBE45-\\\\uBE5F\\\\uBE61-\\\\uBE7B\\\\uBE7D-\\\\uBE97\\\\uBE99-\\\\uBEB3\\\\uBEB5-\\\\uBECF\\\\uBED1-\\\\uBEEB\\\\uBEED-\\\\uBF07\\\\uBF09-\\\\uBF23\\\\uBF25-\\\\uBF3F\\\\uBF41-\\\\uBF5B\\\\uBF5D-\\\\uBF77\\\\uBF79-\\\\uBF93\\\\uBF95-\\\\uBFAF\\\\uBFB1-\\\\uBFCB\\\\uBFCD-\\\\uBFE7\\\\uBFE9-\\\\uC003\\\\uC005-\\\\uC01F\\\\uC021-\\\\uC03B\\\\uC03D-\\\\uC057\\\\uC059-\\\\uC073\\\\uC075-\\\\uC08F\\\\uC091-\\\\uC0AB\\\\uC0AD-\\\\uC0C7\\\\uC0C9-\\\\uC0E3\\\\uC0E5-\\\\uC0FF\\\\uC101-\\\\uC11B\\\\uC11D-\\\\uC137\\\\uC139-\\\\uC153\\\\uC155-\\\\uC16F\\\\uC171-\\\\uC18B\\\\uC18D-\\\\uC1A7\\\\uC1A9-\\\\uC1C3\\\\uC1C5-\\\\uC1DF\\\\uC1E1-\\\\uC1FB\\\\uC1FD-\\\\uC217\\\\uC219-\\\\uC233\\\\uC235-\\\\uC24F\\\\uC251-\\\\uC26B\\\\uC26D-\\\\uC287\\\\uC289-\\\\uC2A3\\\\uC2A5-\\\\uC2BF\\\\uC2C1-\\\\uC2DB\\\\uC2DD-\\\\uC2F7\\\\uC2F9-\\\\uC313\\\\uC315-\\\\uC32F\\\\uC331-\\\\uC34B\\\\uC34D-\\\\uC367\\\\uC369-\\\\uC383\\\\uC385-\\\\uC39F\\\\uC3A1-\\\\uC3BB\\\\uC3BD-\\\\uC3D7\\\\uC3D9-\\\\uC3F3\\\\uC3F5-\\\\uC40F\\\\uC411-\\\\uC42B\\\\uC42D-\\\\uC447\\\\uC449-\\\\uC463\\\\uC465-\\\\uC47F\\\\uC481-\\\\uC49B\\\\uC49D-\\\\uC4B7\\\\uC4B9-\\\\uC4D3\\\\uC4D5-\\\\uC4EF\\\\uC4F1-\\\\uC50B\\\\uC50D-\\\\uC527\\\\uC529-\\\\uC543\\\\uC545-\\\\uC55F\\\\uC561-\\\\uC57B\\\\uC57D-\\\\uC597\\\\uC599-\\\\uC5B3\\\\uC5B5-\\\\uC5CF\\\\uC5D1-\\\\uC5EB\\\\uC5ED-\\\\uC607\\\\uC609-\\\\uC623\\\\uC625-\\\\uC63F\\\\uC641-\\\\uC65B\\\\uC65D-\\\\uC677\\\\uC679-\\\\uC693\\\\uC695-\\\\uC6AF\\\\uC6B1-\\\\uC6CB\\\\uC6CD-\\\\uC6E7\\\\uC6E9-\\\\uC703\\\\uC705-\\\\uC71F\\\\uC721-\\\\uC73B\\\\uC73D-\\\\uC757\\\\uC759-\\\\uC773\\\\uC775-\\\\uC78F\\\\uC791-\\\\uC7AB\\\\uC7AD-\\\\uC7C7\\\\uC7C9-\\\\uC7E3\\\\uC7E5-\\\\uC7FF\\\\uC801-\\\\uC81B\\\\uC81D-\\\\uC837\\\\uC839-\\\\uC853\\\\uC855-\\\\uC86F\\\\uC871-\\\\uC88B\\\\uC88D-\\\\uC8A7\\\\uC8A9-\\\\uC8C3\\\\uC8C5-\\\\uC8DF\\\\uC8E1-\\\\uC8FB\\\\uC8FD-\\\\uC917\\\\uC919-\\\\uC933\\\\uC935-\\\\uC94F\\\\uC951-\\\\uC96B\\\\uC96D-\\\\uC987\\\\uC989-\\\\uC9A3\\\\uC9A5-\\\\uC9BF\\\\uC9C1-\\\\uC9DB\\\\uC9DD-\\\\uC9F7\\\\uC9F9-\\\\uCA13\\\\uCA15-\\\\uCA2F\\\\uCA31-\\\\uCA4B\\\\uCA4D-\\\\uCA67\\\\uCA69-\\\\uCA83\\\\uCA85-\\\\uCA9F\\\\uCAA1-\\\\uCABB\\\\uCABD-\\\\uCAD7\\\\uCAD9-\\\\uCAF3\\\\uCAF5-\\\\uCB0F\\\\uCB11-\\\\uCB2B\\\\uCB2D-\\\\uCB47\\\\uCB49-\\\\uCB63\\\\uCB65-\\\\uCB7F\\\\uCB81-\\\\uCB9B\\\\uCB9D-\\\\uCBB7\\\\uCBB9-\\\\uCBD3\\\\uCBD5-\\\\uCBEF\\\\uCBF1-\\\\uCC0B\\\\uCC0D-\\\\uCC27\\\\uCC29-\\\\uCC43\\\\uCC45-\\\\uCC5F\\\\uCC61-\\\\uCC7B\\\\uCC7D-\\\\uCC97\\\\uCC99-\\\\uCCB3\\\\uCCB5-\\\\uCCCF\\\\uCCD1-\\\\uCCEB\\\\uCCED-\\\\uCD07\\\\uCD09-\\\\uCD23\\\\uCD25-\\\\uCD3F\\\\uCD41-\\\\uCD5B\\\\uCD5D-\\\\uCD77\\\\uCD79-\\\\uCD93\\\\uCD95-\\\\uCDAF\\\\uCDB1-\\\\uCDCB\\\\uCDCD-\\\\uCDE7\\\\uCDE9-\\\\uCE03\\\\uCE05-\\\\uCE1F\\\\uCE21-\\\\uCE3B\\\\uCE3D-\\\\uCE57\\\\uCE59-\\\\uCE73\\\\uCE75-\\\\uCE8F\\\\uCE91-\\\\uCEAB\\\\uCEAD-\\\\uCEC7\\\\uCEC9-\\\\uCEE3\\\\uCEE5-\\\\uCEFF\\\\uCF01-\\\\uCF1B\\\\uCF1D-\\\\uCF37\\\\uCF39-\\\\uCF53\\\\uCF55-\\\\uCF6F\\\\uCF71-\\\\uCF8B\\\\uCF8D-\\\\uCFA7\\\\uCFA9-\\\\uCFC3\\\\uCFC5-\\\\uCFDF\\\\uCFE1-\\\\uCFFB\\\\uCFFD-\\\\uD017\\\\uD019-\\\\uD033\\\\uD035-\\\\uD04F\\\\uD051-\\\\uD06B\\\\uD06D-\\\\uD087\\\\uD089-\\\\uD0A3\\\\uD0A5-\\\\uD0BF\\\\uD0C1-\\\\uD0DB\\\\uD0DD-\\\\uD0F7\\\\uD0F9-\\\\uD113\\\\uD115-\\\\uD12F\\\\uD131-\\\\uD14B\\\\uD14D-\\\\uD167\\\\uD169-\\\\uD183\\\\uD185-\\\\uD19F\\\\uD1A1-\\\\uD1BB\\\\uD1BD-\\\\uD1D7\\\\uD1D9-\\\\uD1F3\\\\uD1F5-\\\\uD20F\\\\uD211-\\\\uD22B\\\\uD22D-\\\\uD247\\\\uD249-\\\\uD263\\\\uD265-\\\\uD27F\\\\uD281-\\\\uD29B\\\\uD29D-\\\\uD2B7\\\\uD2B9-\\\\uD2D3\\\\uD2D5-\\\\uD2EF\\\\uD2F1-\\\\uD30B\\\\uD30D-\\\\uD327\\\\uD329-\\\\uD343\\\\uD345-\\\\uD35F\\\\uD361-\\\\uD37B\\\\uD37D-\\\\uD397\\\\uD399-\\\\uD3B3\\\\uD3B5-\\\\uD3CF\\\\uD3D1-\\\\uD3EB\\\\uD3ED-\\\\uD407\\\\uD409-\\\\uD423\\\\uD425-\\\\uD43F\\\\uD441-\\\\uD45B\\\\uD45D-\\\\uD477\\\\uD479-\\\\uD493\\\\uD495-\\\\uD4AF\\\\uD4B1-\\\\uD4CB\\\\uD4CD-\\\\uD4E7\\\\uD4E9-\\\\uD503\\\\uD505-\\\\uD51F\\\\uD521-\\\\uD53B\\\\uD53D-\\\\uD557\\\\uD559-\\\\uD573\\\\uD575-\\\\uD58F\\\\uD591-\\\\uD5AB\\\\uD5AD-\\\\uD5C7\\\\uD5C9-\\\\uD5E3\\\\uD5E5-\\\\uD5FF\\\\uD601-\\\\uD61B\\\\uD61D-\\\\uD637\\\\uD639-\\\\uD653\\\\uD655-\\\\uD66F\\\\uD671-\\\\uD68B\\\\uD68D-\\\\uD6A7\\\\uD6A9-\\\\uD6C3\\\\uD6C5-\\\\uD6DF\\\\uD6E1-\\\\uD6FB\\\\uD6FD-\\\\uD717\\\\uD719-\\\\uD733\\\\uD735-\\\\uD74F\\\\uD751-\\\\uD76B\\\\uD76D-\\\\uD787\\\\uD789-\\\\uD7A3]\",\n                \"$LinkingConsonant\": \"[\\\\u0915-\\\\u0939\\\\u0958-\\\\u095F\\\\u0978-\\\\u097F\\\\u0995-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09DC\\\\u09DD\\\\u09DF\\\\u09F0\\\\u09F1\\\\u0A95-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0AF9\\\\u0B15-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B5C\\\\u0B5D\\\\u0B5F\\\\u0B71\\\\u0C15-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C58-\\\\u0C5A\\\\u0D15-\\\\u0D3A]\",\n                \"$Prepend\": \"(?:[\\\\u0600-\\\\u0605\\\\u06DD\\\\u070F\\\\u0890\\\\u0891\\\\u08E2\\\\u0D4E]|\\\\uD804[\\\\uDCBD\\\\uDCCD\\\\uDDC2\\\\uDDC3\\\\uDFD1]|\\\\uD806[\\\\uDD3F\\\\uDD41\\\\uDE3A\\\\uDE84-\\\\uDE89]|\\\\uD807[\\\\uDD46\\\\uDF02])\",\n                \"$RI\": \"(?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF])\",\n                \"$SpacingMark\": \"(?:[\\\\u0903\\\\u093B\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u094F\\\\u0982\\\\u0983\\\\u09BF\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC1\\\\u0CC3\\\\u0CC4\\\\u0CF3\\\\u0D02\\\\u0D03\\\\u0D3F\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D82\\\\u0D83\\\\u0DD0\\\\u0DD1\\\\u0DD8-\\\\u0DDE\\\\u0DF2\\\\u0DF3\\\\u0E33\\\\u0EB3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u1031\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1084\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u1A19\\\\u1A1A\\\\u1A55\\\\u1A57\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B3E-\\\\u1B41\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BE7\\\\u1BEA-\\\\u1BEC\\\\u1BEE\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF7\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BE\\\\uA9BF\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAAEB\\\\uAAEE\\\\uAAEF\\\\uAAF5\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]|\\\\uD804[\\\\uDC00\\\\uDC02\\\\uDC82\\\\uDCB0-\\\\uDCB2\\\\uDCB7\\\\uDCB8\\\\uDD2C\\\\uDD45\\\\uDD46\\\\uDD82\\\\uDDB3-\\\\uDDB5\\\\uDDBF\\\\uDDCE\\\\uDE2C-\\\\uDE2E\\\\uDE32\\\\uDE33\\\\uDEE0-\\\\uDEE2\\\\uDF02\\\\uDF03\\\\uDF3F\\\\uDF41-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B\\\\uDF4C\\\\uDF62\\\\uDF63\\\\uDFB9\\\\uDFBA\\\\uDFCA\\\\uDFCC\\\\uDFCD]|\\\\uD805[\\\\uDC35-\\\\uDC37\\\\uDC40\\\\uDC41\\\\uDC45\\\\uDCB1\\\\uDCB2\\\\uDCB9\\\\uDCBB\\\\uDCBC\\\\uDCBE\\\\uDCC1\\\\uDDB0\\\\uDDB1\\\\uDDB8-\\\\uDDBB\\\\uDDBE\\\\uDE30-\\\\uDE32\\\\uDE3B\\\\uDE3C\\\\uDE3E\\\\uDEAC\\\\uDEAE\\\\uDEAF\\\\uDF1E\\\\uDF26]|\\\\uD806[\\\\uDC2C-\\\\uDC2E\\\\uDC38\\\\uDD31-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD40\\\\uDD42\\\\uDDD1-\\\\uDDD3\\\\uDDDC-\\\\uDDDF\\\\uDDE4\\\\uDE39\\\\uDE57\\\\uDE58\\\\uDE97]|\\\\uD807[\\\\uDC2F\\\\uDC3E\\\\uDCA9\\\\uDCB1\\\\uDCB4\\\\uDD8A-\\\\uDD8E\\\\uDD93\\\\uDD94\\\\uDD96\\\\uDEF5\\\\uDEF6\\\\uDF03\\\\uDF34\\\\uDF35\\\\uDF3E\\\\uDF3F]|\\\\uD818[\\\\uDD2A-\\\\uDD2C]|\\\\uD81B[\\\\uDF51-\\\\uDF87])\",\n                \"$T\": \"[\\\\u11A8-\\\\u11FF\\\\uD7CB-\\\\uD7FB]\",\n                \"$V\": \"(?:[\\\\u1160-\\\\u11A7\\\\uD7B0-\\\\uD7C6]|\\\\uD81B[\\\\uDD63\\\\uDD67-\\\\uDD6A])\",\n                \"$ZWJ\": \"\\\\u200D\"\n            }\n        },\n        \"sentence\": {\n            \"segmentRules\": {\n                \"10\": {\n                    \"after\": \"($Sp|$ParaSep)\",\n                    \"before\": \"$SATerm$Close*$Sp*\",\n                    \"breaks\": false\n                },\n                \"11\": {\n                    \"before\": \"$SATerm$Close*$Sp*$ParaSep?\",\n                    \"breaks\": true\n                },\n                \"3\": {\n                    \"after\": \"$LF\",\n                    \"before\": \"$CR\",\n                    \"breaks\": false\n                },\n                \"4\": {\n                    \"before\": \"$ParaSep\",\n                    \"breaks\": true\n                },\n                \"5\": {\n                    \"after\": \"(?:$Format|$Extend)\",\n                    \"breaks\": false\n                },\n                \"6\": {\n                    \"after\": \"$Numeric\",\n                    \"before\": \"$ATerm\",\n                    \"breaks\": false\n                },\n                \"7\": {\n                    \"after\": \"$Upper\",\n                    \"before\": \"($Upper|$Lower)$ATerm\",\n                    \"breaks\": false\n                },\n                \"8\": {\n                    \"after\": \"$NotPreLower_*$Lower\",\n                    \"before\": \"$ATerm$Close*$Sp*\",\n                    \"breaks\": false\n                },\n                \"8.1\": {\n                    \"after\": \"($SContinue|$SATerm)\",\n                    \"before\": \"$SATerm$Close*$Sp*\",\n                    \"breaks\": false\n                },\n                \"9\": {\n                    \"after\": \"($Close|$Sp|$ParaSep)\",\n                    \"before\": \"$SATerm$Close*\",\n                    \"breaks\": false\n                },\n                \"998\": {\n                    \"after\": \"$Any\",\n                    \"breaks\": false\n                }\n            },\n            \"suppressions\": [],\n            \"variables\": {\n                \"$ATerm\": \"([\\\\.\\\\u2024\\\\uFE52\\\\uFF0E](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Any\": \"(?:[\\\\0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])\",\n                \"$CR\": \"\\\\r\",\n                \"$Close\": \"((?:[\\\"'-\\\\)\\\\[\\\\]\\\\{\\\\}\\\\xAB\\\\xBB\\\\u0F3A-\\\\u0F3D\\\\u169B\\\\u169C\\\\u2018-\\\\u201F\\\\u2039\\\\u203A\\\\u2045\\\\u2046\\\\u207D\\\\u207E\\\\u208D\\\\u208E\\\\u2308-\\\\u230B\\\\u2329\\\\u232A\\\\u275B-\\\\u2760\\\\u2768-\\\\u2775\\\\u27C5\\\\u27C6\\\\u27E6-\\\\u27EF\\\\u2983-\\\\u2998\\\\u29D8-\\\\u29DB\\\\u29FC\\\\u29FD\\\\u2E00-\\\\u2E0D\\\\u2E1C\\\\u2E1D\\\\u2E20-\\\\u2E29\\\\u2E42\\\\u2E55-\\\\u2E5C\\\\u3008-\\\\u3011\\\\u3014-\\\\u301B\\\\u301D-\\\\u301F\\\\uFD3E\\\\uFD3F\\\\uFE17\\\\uFE18\\\\uFE35-\\\\uFE44\\\\uFE47\\\\uFE48\\\\uFE59-\\\\uFE5E\\\\uFF08\\\\uFF09\\\\uFF3B\\\\uFF3D\\\\uFF5B\\\\uFF5D\\\\uFF5F\\\\uFF60\\\\uFF62\\\\uFF63]|\\\\uD83D[\\\\uDE76-\\\\uDE78])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Extend\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C\\\\u200D\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\n                \"$FE\": \"(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\n                \"$Format\": \"(?:[\\\\xAD\\\\u061C\\\\u070F\\\\u180E\\\\u200B\\\\u200E\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\uFEFF\\\\uFFF9-\\\\uFFFB]|\\\\uD80D[\\\\uDC30-\\\\uDC3F]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40\\\\uDC01)\",\n                \"$LF\": \"\\\\n\",\n                \"$Lower\": \"((?:[a-z\\\\xAA\\\\xB5\\\\xBA\\\\xDF-\\\\xF6\\\\xF8-\\\\xFF\\\\u0101\\\\u0103\\\\u0105\\\\u0107\\\\u0109\\\\u010B\\\\u010D\\\\u010F\\\\u0111\\\\u0113\\\\u0115\\\\u0117\\\\u0119\\\\u011B\\\\u011D\\\\u011F\\\\u0121\\\\u0123\\\\u0125\\\\u0127\\\\u0129\\\\u012B\\\\u012D\\\\u012F\\\\u0131\\\\u0133\\\\u0135\\\\u0137\\\\u0138\\\\u013A\\\\u013C\\\\u013E\\\\u0140\\\\u0142\\\\u0144\\\\u0146\\\\u0148\\\\u0149\\\\u014B\\\\u014D\\\\u014F\\\\u0151\\\\u0153\\\\u0155\\\\u0157\\\\u0159\\\\u015B\\\\u015D\\\\u015F\\\\u0161\\\\u0163\\\\u0165\\\\u0167\\\\u0169\\\\u016B\\\\u016D\\\\u016F\\\\u0171\\\\u0173\\\\u0175\\\\u0177\\\\u017A\\\\u017C\\\\u017E-\\\\u0180\\\\u0183\\\\u0185\\\\u0188\\\\u018C\\\\u018D\\\\u0192\\\\u0195\\\\u0199-\\\\u019B\\\\u019E\\\\u01A1\\\\u01A3\\\\u01A5\\\\u01A8\\\\u01AA\\\\u01AB\\\\u01AD\\\\u01B0\\\\u01B4\\\\u01B6\\\\u01B9\\\\u01BA\\\\u01BD-\\\\u01BF\\\\u01C6\\\\u01C9\\\\u01CC\\\\u01CE\\\\u01D0\\\\u01D2\\\\u01D4\\\\u01D6\\\\u01D8\\\\u01DA\\\\u01DC\\\\u01DD\\\\u01DF\\\\u01E1\\\\u01E3\\\\u01E5\\\\u01E7\\\\u01E9\\\\u01EB\\\\u01ED\\\\u01EF\\\\u01F0\\\\u01F3\\\\u01F5\\\\u01F9\\\\u01FB\\\\u01FD\\\\u01FF\\\\u0201\\\\u0203\\\\u0205\\\\u0207\\\\u0209\\\\u020B\\\\u020D\\\\u020F\\\\u0211\\\\u0213\\\\u0215\\\\u0217\\\\u0219\\\\u021B\\\\u021D\\\\u021F\\\\u0221\\\\u0223\\\\u0225\\\\u0227\\\\u0229\\\\u022B\\\\u022D\\\\u022F\\\\u0231\\\\u0233-\\\\u0239\\\\u023C\\\\u023F\\\\u0240\\\\u0242\\\\u0247\\\\u0249\\\\u024B\\\\u024D\\\\u024F-\\\\u0293\\\\u0295-\\\\u02B8\\\\u02C0\\\\u02C1\\\\u02E0-\\\\u02E4\\\\u0371\\\\u0373\\\\u0377\\\\u037A-\\\\u037D\\\\u0390\\\\u03AC-\\\\u03CE\\\\u03D0\\\\u03D1\\\\u03D5-\\\\u03D7\\\\u03D9\\\\u03DB\\\\u03DD\\\\u03DF\\\\u03E1\\\\u03E3\\\\u03E5\\\\u03E7\\\\u03E9\\\\u03EB\\\\u03ED\\\\u03EF-\\\\u03F3\\\\u03F5\\\\u03F8\\\\u03FB\\\\u03FC\\\\u0430-\\\\u045F\\\\u0461\\\\u0463\\\\u0465\\\\u0467\\\\u0469\\\\u046B\\\\u046D\\\\u046F\\\\u0471\\\\u0473\\\\u0475\\\\u0477\\\\u0479\\\\u047B\\\\u047D\\\\u047F\\\\u0481\\\\u048B\\\\u048D\\\\u048F\\\\u0491\\\\u0493\\\\u0495\\\\u0497\\\\u0499\\\\u049B\\\\u049D\\\\u049F\\\\u04A1\\\\u04A3\\\\u04A5\\\\u04A7\\\\u04A9\\\\u04AB\\\\u04AD\\\\u04AF\\\\u04B1\\\\u04B3\\\\u04B5\\\\u04B7\\\\u04B9\\\\u04BB\\\\u04BD\\\\u04BF\\\\u04C2\\\\u04C4\\\\u04C6\\\\u04C8\\\\u04CA\\\\u04CC\\\\u04CE\\\\u04CF\\\\u04D1\\\\u04D3\\\\u04D5\\\\u04D7\\\\u04D9\\\\u04DB\\\\u04DD\\\\u04DF\\\\u04E1\\\\u04E3\\\\u04E5\\\\u04E7\\\\u04E9\\\\u04EB\\\\u04ED\\\\u04EF\\\\u04F1\\\\u04F3\\\\u04F5\\\\u04F7\\\\u04F9\\\\u04FB\\\\u04FD\\\\u04FF\\\\u0501\\\\u0503\\\\u0505\\\\u0507\\\\u0509\\\\u050B\\\\u050D\\\\u050F\\\\u0511\\\\u0513\\\\u0515\\\\u0517\\\\u0519\\\\u051B\\\\u051D\\\\u051F\\\\u0521\\\\u0523\\\\u0525\\\\u0527\\\\u0529\\\\u052B\\\\u052D\\\\u052F\\\\u0560-\\\\u0588\\\\u10FC\\\\u13F8-\\\\u13FD\\\\u1C80-\\\\u1C88\\\\u1C8A\\\\u1D00-\\\\u1DBF\\\\u1E01\\\\u1E03\\\\u1E05\\\\u1E07\\\\u1E09\\\\u1E0B\\\\u1E0D\\\\u1E0F\\\\u1E11\\\\u1E13\\\\u1E15\\\\u1E17\\\\u1E19\\\\u1E1B\\\\u1E1D\\\\u1E1F\\\\u1E21\\\\u1E23\\\\u1E25\\\\u1E27\\\\u1E29\\\\u1E2B\\\\u1E2D\\\\u1E2F\\\\u1E31\\\\u1E33\\\\u1E35\\\\u1E37\\\\u1E39\\\\u1E3B\\\\u1E3D\\\\u1E3F\\\\u1E41\\\\u1E43\\\\u1E45\\\\u1E47\\\\u1E49\\\\u1E4B\\\\u1E4D\\\\u1E4F\\\\u1E51\\\\u1E53\\\\u1E55\\\\u1E57\\\\u1E59\\\\u1E5B\\\\u1E5D\\\\u1E5F\\\\u1E61\\\\u1E63\\\\u1E65\\\\u1E67\\\\u1E69\\\\u1E6B\\\\u1E6D\\\\u1E6F\\\\u1E71\\\\u1E73\\\\u1E75\\\\u1E77\\\\u1E79\\\\u1E7B\\\\u1E7D\\\\u1E7F\\\\u1E81\\\\u1E83\\\\u1E85\\\\u1E87\\\\u1E89\\\\u1E8B\\\\u1E8D\\\\u1E8F\\\\u1E91\\\\u1E93\\\\u1E95-\\\\u1E9D\\\\u1E9F\\\\u1EA1\\\\u1EA3\\\\u1EA5\\\\u1EA7\\\\u1EA9\\\\u1EAB\\\\u1EAD\\\\u1EAF\\\\u1EB1\\\\u1EB3\\\\u1EB5\\\\u1EB7\\\\u1EB9\\\\u1EBB\\\\u1EBD\\\\u1EBF\\\\u1EC1\\\\u1EC3\\\\u1EC5\\\\u1EC7\\\\u1EC9\\\\u1ECB\\\\u1ECD\\\\u1ECF\\\\u1ED1\\\\u1ED3\\\\u1ED5\\\\u1ED7\\\\u1ED9\\\\u1EDB\\\\u1EDD\\\\u1EDF\\\\u1EE1\\\\u1EE3\\\\u1EE5\\\\u1EE7\\\\u1EE9\\\\u1EEB\\\\u1EED\\\\u1EEF\\\\u1EF1\\\\u1EF3\\\\u1EF5\\\\u1EF7\\\\u1EF9\\\\u1EFB\\\\u1EFD\\\\u1EFF-\\\\u1F07\\\\u1F10-\\\\u1F15\\\\u1F20-\\\\u1F27\\\\u1F30-\\\\u1F37\\\\u1F40-\\\\u1F45\\\\u1F50-\\\\u1F57\\\\u1F60-\\\\u1F67\\\\u1F70-\\\\u1F7D\\\\u1F80-\\\\u1F87\\\\u1F90-\\\\u1F97\\\\u1FA0-\\\\u1FA7\\\\u1FB0-\\\\u1FB4\\\\u1FB6\\\\u1FB7\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6\\\\u1FC7\\\\u1FD0-\\\\u1FD3\\\\u1FD6\\\\u1FD7\\\\u1FE0-\\\\u1FE7\\\\u1FF2-\\\\u1FF4\\\\u1FF6\\\\u1FF7\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u210A\\\\u210E\\\\u210F\\\\u2113\\\\u212F\\\\u2134\\\\u2139\\\\u213C\\\\u213D\\\\u2146-\\\\u2149\\\\u214E\\\\u2170-\\\\u217F\\\\u2184\\\\u24D0-\\\\u24E9\\\\u2C30-\\\\u2C5F\\\\u2C61\\\\u2C65\\\\u2C66\\\\u2C68\\\\u2C6A\\\\u2C6C\\\\u2C71\\\\u2C73\\\\u2C74\\\\u2C76-\\\\u2C7D\\\\u2C81\\\\u2C83\\\\u2C85\\\\u2C87\\\\u2C89\\\\u2C8B\\\\u2C8D\\\\u2C8F\\\\u2C91\\\\u2C93\\\\u2C95\\\\u2C97\\\\u2C99\\\\u2C9B\\\\u2C9D\\\\u2C9F\\\\u2CA1\\\\u2CA3\\\\u2CA5\\\\u2CA7\\\\u2CA9\\\\u2CAB\\\\u2CAD\\\\u2CAF\\\\u2CB1\\\\u2CB3\\\\u2CB5\\\\u2CB7\\\\u2CB9\\\\u2CBB\\\\u2CBD\\\\u2CBF\\\\u2CC1\\\\u2CC3\\\\u2CC5\\\\u2CC7\\\\u2CC9\\\\u2CCB\\\\u2CCD\\\\u2CCF\\\\u2CD1\\\\u2CD3\\\\u2CD5\\\\u2CD7\\\\u2CD9\\\\u2CDB\\\\u2CDD\\\\u2CDF\\\\u2CE1\\\\u2CE3\\\\u2CE4\\\\u2CEC\\\\u2CEE\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\uA641\\\\uA643\\\\uA645\\\\uA647\\\\uA649\\\\uA64B\\\\uA64D\\\\uA64F\\\\uA651\\\\uA653\\\\uA655\\\\uA657\\\\uA659\\\\uA65B\\\\uA65D\\\\uA65F\\\\uA661\\\\uA663\\\\uA665\\\\uA667\\\\uA669\\\\uA66B\\\\uA66D\\\\uA681\\\\uA683\\\\uA685\\\\uA687\\\\uA689\\\\uA68B\\\\uA68D\\\\uA68F\\\\uA691\\\\uA693\\\\uA695\\\\uA697\\\\uA699\\\\uA69B-\\\\uA69D\\\\uA723\\\\uA725\\\\uA727\\\\uA729\\\\uA72B\\\\uA72D\\\\uA72F-\\\\uA731\\\\uA733\\\\uA735\\\\uA737\\\\uA739\\\\uA73B\\\\uA73D\\\\uA73F\\\\uA741\\\\uA743\\\\uA745\\\\uA747\\\\uA749\\\\uA74B\\\\uA74D\\\\uA74F\\\\uA751\\\\uA753\\\\uA755\\\\uA757\\\\uA759\\\\uA75B\\\\uA75D\\\\uA75F\\\\uA761\\\\uA763\\\\uA765\\\\uA767\\\\uA769\\\\uA76B\\\\uA76D\\\\uA76F-\\\\uA778\\\\uA77A\\\\uA77C\\\\uA77F\\\\uA781\\\\uA783\\\\uA785\\\\uA787\\\\uA78C\\\\uA78E\\\\uA791\\\\uA793-\\\\uA795\\\\uA797\\\\uA799\\\\uA79B\\\\uA79D\\\\uA79F\\\\uA7A1\\\\uA7A3\\\\uA7A5\\\\uA7A7\\\\uA7A9\\\\uA7AF\\\\uA7B5\\\\uA7B7\\\\uA7B9\\\\uA7BB\\\\uA7BD\\\\uA7BF\\\\uA7C1\\\\uA7C3\\\\uA7C8\\\\uA7CA\\\\uA7CD\\\\uA7D1\\\\uA7D3\\\\uA7D5\\\\uA7D7\\\\uA7D9\\\\uA7DB\\\\uA7F2-\\\\uA7F4\\\\uA7F6\\\\uA7F8-\\\\uA7FA\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB69\\\\uAB70-\\\\uABBF\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFF41-\\\\uFF5A]|\\\\uD801[\\\\uDC28-\\\\uDC4F\\\\uDCD8-\\\\uDCFB\\\\uDD97-\\\\uDDA1\\\\uDDA3-\\\\uDDB1\\\\uDDB3-\\\\uDDB9\\\\uDDBB\\\\uDDBC\\\\uDF80\\\\uDF83-\\\\uDF85\\\\uDF87-\\\\uDFB0\\\\uDFB2-\\\\uDFBA]|\\\\uD803[\\\\uDCC0-\\\\uDCF2\\\\uDD70-\\\\uDD85]|\\\\uD806[\\\\uDCC0-\\\\uDCDF]|\\\\uD81B[\\\\uDE60-\\\\uDE7F]|\\\\uD835[\\\\uDC1A-\\\\uDC33\\\\uDC4E-\\\\uDC54\\\\uDC56-\\\\uDC67\\\\uDC82-\\\\uDC9B\\\\uDCB6-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDCCF\\\\uDCEA-\\\\uDD03\\\\uDD1E-\\\\uDD37\\\\uDD52-\\\\uDD6B\\\\uDD86-\\\\uDD9F\\\\uDDBA-\\\\uDDD3\\\\uDDEE-\\\\uDE07\\\\uDE22-\\\\uDE3B\\\\uDE56-\\\\uDE6F\\\\uDE8A-\\\\uDEA5\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEE1\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF1B\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF55\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDF8F\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFC9\\\\uDFCB]|\\\\uD837[\\\\uDF00-\\\\uDF09\\\\uDF0B-\\\\uDF1E\\\\uDF25-\\\\uDF2A]|\\\\uD838[\\\\uDC30-\\\\uDC6D]|\\\\uD83A[\\\\uDD22-\\\\uDD43])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$NotPreLower_\": \"(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E- \\\"-\\\\x2D\\\\/->@\\\\[-`\\\\{-\\\\x84\\\\x86-\\\\xA9\\\\xAB-\\\\xB4\\\\xB6-\\\\xB9\\\\xBB-\\\\xBF\\\\xD7\\\\xF7\\\\u02C2-\\\\u02C5\\\\u02D2-\\\\u02DF\\\\u02E5-\\\\u02EB\\\\u02ED\\\\u02EF-\\\\u036F\\\\u0375\\\\u0378\\\\u0379\\\\u037E\\\\u0380-\\\\u0385\\\\u0387\\\\u038B\\\\u038D\\\\u03A2\\\\u03F6\\\\u0482-\\\\u0489\\\\u0530\\\\u0557\\\\u0558\\\\u055A-\\\\u055F\\\\u058A-\\\\u05CF\\\\u05EB-\\\\u05EE\\\\u05F4-\\\\u061C\\\\u064B-\\\\u066D\\\\u0670\\\\u06D6-\\\\u06E4\\\\u06E7-\\\\u06ED\\\\u06F0-\\\\u06F9\\\\u06FD\\\\u06FE\\\\u0703-\\\\u070F\\\\u0711\\\\u0730-\\\\u074C\\\\u07A6-\\\\u07B0\\\\u07B2-\\\\u07C9\\\\u07EB-\\\\u07F3\\\\u07F6-\\\\u07F8\\\\u07FB-\\\\u07FF\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u0836\\\\u0838\\\\u083A-\\\\u083C\\\\u083F\\\\u0859-\\\\u085F\\\\u086B-\\\\u086F\\\\u0888\\\\u088F-\\\\u089F\\\\u08CA-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0966-\\\\u0970\\\\u0981-\\\\u0984\\\\u098D\\\\u098E\\\\u0991\\\\u0992\\\\u09A9\\\\u09B1\\\\u09B3-\\\\u09B5\\\\u09BA-\\\\u09BC\\\\u09BE-\\\\u09CD\\\\u09CF-\\\\u09DB\\\\u09DE\\\\u09E2-\\\\u09EF\\\\u09F2-\\\\u09FB\\\\u09FD-\\\\u0A04\\\\u0A0B-\\\\u0A0E\\\\u0A11\\\\u0A12\\\\u0A29\\\\u0A31\\\\u0A34\\\\u0A37\\\\u0A3A-\\\\u0A58\\\\u0A5D\\\\u0A5F-\\\\u0A71\\\\u0A75-\\\\u0A84\\\\u0A8E\\\\u0A92\\\\u0AA9\\\\u0AB1\\\\u0AB4\\\\u0ABA-\\\\u0ABC\\\\u0ABE-\\\\u0ACF\\\\u0AD1-\\\\u0ADF\\\\u0AE2-\\\\u0AF8\\\\u0AFA-\\\\u0B04\\\\u0B0D\\\\u0B0E\\\\u0B11\\\\u0B12\\\\u0B29\\\\u0B31\\\\u0B34\\\\u0B3A-\\\\u0B3C\\\\u0B3E-\\\\u0B5B\\\\u0B5E\\\\u0B62-\\\\u0B70\\\\u0B72-\\\\u0B82\\\\u0B84\\\\u0B8B-\\\\u0B8D\\\\u0B91\\\\u0B96-\\\\u0B98\\\\u0B9B\\\\u0B9D\\\\u0BA0-\\\\u0BA2\\\\u0BA5-\\\\u0BA7\\\\u0BAB-\\\\u0BAD\\\\u0BBA-\\\\u0BCF\\\\u0BD1-\\\\u0C04\\\\u0C0D\\\\u0C11\\\\u0C29\\\\u0C3A-\\\\u0C3C\\\\u0C3E-\\\\u0C57\\\\u0C5B\\\\u0C5C\\\\u0C5E\\\\u0C5F\\\\u0C62-\\\\u0C7F\\\\u0C81-\\\\u0C84\\\\u0C8D\\\\u0C91\\\\u0CA9\\\\u0CB4\\\\u0CBA-\\\\u0CBC\\\\u0CBE-\\\\u0CDC\\\\u0CDF\\\\u0CE2-\\\\u0CF0\\\\u0CF3-\\\\u0D03\\\\u0D0D\\\\u0D11\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D4D\\\\u0D4F-\\\\u0D53\\\\u0D57-\\\\u0D5E\\\\u0D62-\\\\u0D79\\\\u0D80-\\\\u0D84\\\\u0D97-\\\\u0D99\\\\u0DB2\\\\u0DBC\\\\u0DBE\\\\u0DBF\\\\u0DC7-\\\\u0E00\\\\u0E31\\\\u0E34-\\\\u0E3F\\\\u0E47-\\\\u0E80\\\\u0E83\\\\u0E85\\\\u0E8B\\\\u0EA4\\\\u0EA6\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EBE\\\\u0EBF\\\\u0EC5\\\\u0EC7-\\\\u0EDB\\\\u0EE0-\\\\u0EFF\\\\u0F01-\\\\u0F3F\\\\u0F48\\\\u0F6D-\\\\u0F87\\\\u0F8D-\\\\u0FFF\\\\u102B-\\\\u103E\\\\u1040-\\\\u1049\\\\u104C-\\\\u104F\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F-\\\\u109F\\\\u10C6\\\\u10C8-\\\\u10CC\\\\u10CE\\\\u10CF\\\\u10FB\\\\u1249\\\\u124E\\\\u124F\\\\u1257\\\\u1259\\\\u125E\\\\u125F\\\\u1289\\\\u128E\\\\u128F\\\\u12B1\\\\u12B6\\\\u12B7\\\\u12BF\\\\u12C1\\\\u12C6\\\\u12C7\\\\u12D7\\\\u1311\\\\u1316\\\\u1317\\\\u135B-\\\\u1361\\\\u1363-\\\\u1366\\\\u1369-\\\\u137F\\\\u1390-\\\\u139F\\\\u13F6\\\\u13F7\\\\u13FE-\\\\u1400\\\\u166D\\\\u1680\\\\u169B-\\\\u169F\\\\u16EB-\\\\u16ED\\\\u16F9-\\\\u16FF\\\\u1712-\\\\u171E\\\\u1732-\\\\u1734\\\\u1737-\\\\u173F\\\\u1752-\\\\u175F\\\\u176D\\\\u1771-\\\\u177F\\\\u17B4-\\\\u17D3\\\\u17D6\\\\u17D8-\\\\u17DB\\\\u17DD-\\\\u1802\\\\u1804-\\\\u1808\\\\u180A-\\\\u181F\\\\u1879-\\\\u187F\\\\u1885\\\\u1886\\\\u18A9\\\\u18AB-\\\\u18AF\\\\u18F6-\\\\u18FF\\\\u191F-\\\\u1943\\\\u1946-\\\\u194F\\\\u196E\\\\u196F\\\\u1975-\\\\u197F\\\\u19AC-\\\\u19AF\\\\u19CA-\\\\u19FF\\\\u1A17-\\\\u1A1F\\\\u1A55-\\\\u1AA6\\\\u1AAC-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B4D\\\\u1B50-\\\\u1B59\\\\u1B5C\\\\u1B5D\\\\u1B60-\\\\u1B7C\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BB0-\\\\u1BB9\\\\u1BE6-\\\\u1BFF\\\\u1C24-\\\\u1C3A\\\\u1C3D-\\\\u1C4C\\\\u1C50-\\\\u1C59\\\\u1C8B-\\\\u1C8F\\\\u1CBB\\\\u1CBC\\\\u1CC0-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1CFB-\\\\u1CFF\\\\u1DC0-\\\\u1DFF\\\\u1F16\\\\u1F17\\\\u1F1E\\\\u1F1F\\\\u1F46\\\\u1F47\\\\u1F4E\\\\u1F4F\\\\u1F58\\\\u1F5A\\\\u1F5C\\\\u1F5E\\\\u1F7E\\\\u1F7F\\\\u1FB5\\\\u1FBD\\\\u1FBF-\\\\u1FC1\\\\u1FC5\\\\u1FCD-\\\\u1FCF\\\\u1FD4\\\\u1FD5\\\\u1FDC-\\\\u1FDF\\\\u1FED-\\\\u1FF1\\\\u1FF5\\\\u1FFD-\\\\u2023\\\\u2025-\\\\u2027\\\\u202A-\\\\u203B\\\\u203E-\\\\u2046\\\\u204A-\\\\u2070\\\\u2072-\\\\u207E\\\\u2080-\\\\u208F\\\\u209D-\\\\u2101\\\\u2103-\\\\u2106\\\\u2108\\\\u2109\\\\u2114\\\\u2116-\\\\u2118\\\\u211E-\\\\u2123\\\\u2125\\\\u2127\\\\u2129\\\\u212E\\\\u213A\\\\u213B\\\\u2140-\\\\u2144\\\\u214A-\\\\u214D\\\\u214F-\\\\u215F\\\\u2189-\\\\u24B5\\\\u24EA-\\\\u2BFF\\\\u2CE5-\\\\u2CEA\\\\u2CEF-\\\\u2CF1\\\\u2CF4-\\\\u2CF8\\\\u2CFC-\\\\u2CFF\\\\u2D26\\\\u2D28-\\\\u2D2C\\\\u2D2E\\\\u2D2F\\\\u2D68-\\\\u2D6E\\\\u2D70-\\\\u2D7F\\\\u2D97-\\\\u2D9F\\\\u2DA7\\\\u2DAF\\\\u2DB7\\\\u2DBF\\\\u2DC7\\\\u2DCF\\\\u2DD7\\\\u2DDF-\\\\u2E2D\\\\u2E30-\\\\u2E3B\\\\u2E3D-\\\\u2E52\\\\u2E55-\\\\u3001\\\\u3003\\\\u3004\\\\u3008-\\\\u3020\\\\u302A-\\\\u3030\\\\u3036\\\\u3037\\\\u303D-\\\\u3040\\\\u3097-\\\\u309C\\\\u30A0\\\\u30FB\\\\u3100-\\\\u3104\\\\u3130\\\\u318F-\\\\u319F\\\\u31C0-\\\\u31EF\\\\u3200-\\\\u33FF\\\\u4DC0-\\\\u4DFF\\\\uA48D-\\\\uA4CF\\\\uA4FE\\\\uA60D\\\\uA620-\\\\uA629\\\\uA62C-\\\\uA63F\\\\uA66F-\\\\uA67E\\\\uA69E\\\\uA69F\\\\uA6F0-\\\\uA6F2\\\\uA6F4-\\\\uA6F6\\\\uA6F8-\\\\uA716\\\\uA720\\\\uA721\\\\uA789\\\\uA78A\\\\uA7CE\\\\uA7CF\\\\uA7D2\\\\uA7D4\\\\uA7DD-\\\\uA7F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA83F\\\\uA874\\\\uA875\\\\uA878-\\\\uA881\\\\uA8B4-\\\\uA8CD\\\\uA8D0-\\\\uA8F1\\\\uA8F8-\\\\uA8FA\\\\uA8FC\\\\uA8FF-\\\\uA909\\\\uA926-\\\\uA92E\\\\uA947-\\\\uA95F\\\\uA97D-\\\\uA983\\\\uA9B3-\\\\uA9C7\\\\uA9CA-\\\\uA9CE\\\\uA9D0-\\\\uA9DF\\\\uA9E5\\\\uA9F0-\\\\uA9F9\\\\uA9FF\\\\uAA29-\\\\uAA3F\\\\uAA43\\\\uAA4C-\\\\uAA5C\\\\uAA77-\\\\uAA79\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAC3-\\\\uAADA\\\\uAADE\\\\uAADF\\\\uAAEB-\\\\uAAEF\\\\uAAF5-\\\\uAB00\\\\uAB07\\\\uAB08\\\\uAB0F\\\\uAB10\\\\uAB17-\\\\uAB1F\\\\uAB27\\\\uAB2F\\\\uAB5B\\\\uAB6A-\\\\uAB6F\\\\uABE3-\\\\uABEA\\\\uABEC-\\\\uABFF\\\\uD7A4-\\\\uD7AF\\\\uD7C7-\\\\uD7CA\\\\uD7FC-\\\\uD7FF\\\\uE000-\\\\uF8FF\\\\uFA6E\\\\uFA6F\\\\uFADA-\\\\uFAFF\\\\uFB07-\\\\uFB12\\\\uFB18-\\\\uFB1C\\\\uFB1E\\\\uFB29\\\\uFB37\\\\uFB3D\\\\uFB3F\\\\uFB42\\\\uFB45\\\\uFBB2-\\\\uFBD2\\\\uFD3E-\\\\uFD4F\\\\uFD90\\\\uFD91\\\\uFDC8-\\\\uFDEF\\\\uFDFC-\\\\uFE11\\\\uFE13\\\\uFE14\\\\uFE17-\\\\uFE51\\\\uFE53-\\\\uFE55\\\\uFE58-\\\\uFE6F\\\\uFE75\\\\uFEFD-\\\\uFF00\\\\uFF02-\\\\uFF0D\\\\uFF0F-\\\\uFF1E\\\\uFF20\\\\uFF3B-\\\\uFF40\\\\uFF5B-\\\\uFF60\\\\uFF62-\\\\uFF65\\\\uFF9E\\\\uFF9F\\\\uFFBF-\\\\uFFC1\\\\uFFC8\\\\uFFC9\\\\uFFD0\\\\uFFD1\\\\uFFD8\\\\uFFD9\\\\uFFDD-\\\\uFFFF]|\\\\uD800[\\\\uDC0C\\\\uDC27\\\\uDC3B\\\\uDC3E\\\\uDC4E\\\\uDC4F\\\\uDC5E-\\\\uDC7F\\\\uDCFB-\\\\uDD3F\\\\uDD75-\\\\uDE7F\\\\uDE9D-\\\\uDE9F\\\\uDED1-\\\\uDEFF\\\\uDF20-\\\\uDF2C\\\\uDF4B-\\\\uDF4F\\\\uDF76-\\\\uDF7F\\\\uDF9E\\\\uDF9F\\\\uDFC4-\\\\uDFC7\\\\uDFD0\\\\uDFD6-\\\\uDFFF]|\\\\uD801[\\\\uDC9E-\\\\uDCAF\\\\uDCD4-\\\\uDCD7\\\\uDCFC-\\\\uDCFF\\\\uDD28-\\\\uDD2F\\\\uDD64-\\\\uDD6F\\\\uDD7B\\\\uDD8B\\\\uDD93\\\\uDD96\\\\uDDA2\\\\uDDB2\\\\uDDBA\\\\uDDBD-\\\\uDDBF\\\\uDDF4-\\\\uDDFF\\\\uDF37-\\\\uDF3F\\\\uDF56-\\\\uDF5F\\\\uDF68-\\\\uDF7F\\\\uDF86\\\\uDFB1\\\\uDFBB-\\\\uDFFF]|\\\\uD802[\\\\uDC06\\\\uDC07\\\\uDC09\\\\uDC36\\\\uDC39-\\\\uDC3B\\\\uDC3D\\\\uDC3E\\\\uDC56-\\\\uDC5F\\\\uDC77-\\\\uDC7F\\\\uDC9F-\\\\uDCDF\\\\uDCF3\\\\uDCF6-\\\\uDCFF\\\\uDD16-\\\\uDD1F\\\\uDD3A-\\\\uDD7F\\\\uDDB8-\\\\uDDBD\\\\uDDC0-\\\\uDDFF\\\\uDE01-\\\\uDE0F\\\\uDE14\\\\uDE18\\\\uDE36-\\\\uDE55\\\\uDE58-\\\\uDE5F\\\\uDE7D-\\\\uDE7F\\\\uDE9D-\\\\uDEBF\\\\uDEC8\\\\uDEE5-\\\\uDEFF\\\\uDF36-\\\\uDF3F\\\\uDF56-\\\\uDF5F\\\\uDF73-\\\\uDF7F\\\\uDF92-\\\\uDFFF]|\\\\uD803[\\\\uDC49-\\\\uDC7F\\\\uDCB3-\\\\uDCBF\\\\uDCF3-\\\\uDCFF\\\\uDD24-\\\\uDD49\\\\uDD66-\\\\uDD6E\\\\uDD86-\\\\uDE7F\\\\uDEAA-\\\\uDEAF\\\\uDEB2-\\\\uDEC1\\\\uDEC5-\\\\uDEFF\\\\uDF1D-\\\\uDF26\\\\uDF28-\\\\uDF2F\\\\uDF46-\\\\uDF54\\\\uDF5A-\\\\uDF6F\\\\uDF82-\\\\uDF85\\\\uDF8A-\\\\uDFAF\\\\uDFC5-\\\\uDFDF\\\\uDFF7-\\\\uDFFF]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC49-\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC76-\\\\uDC82\\\\uDCB0-\\\\uDCBD\\\\uDCC2-\\\\uDCCF\\\\uDCE9-\\\\uDD02\\\\uDD27-\\\\uDD40\\\\uDD45\\\\uDD46\\\\uDD48-\\\\uDD4F\\\\uDD73-\\\\uDD75\\\\uDD77-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC7-\\\\uDDCC\\\\uDDCE-\\\\uDDD9\\\\uDDDB\\\\uDDDD\\\\uDDE0-\\\\uDDFF\\\\uDE12\\\\uDE2C-\\\\uDE37\\\\uDE3A\\\\uDE3D\\\\uDE3E\\\\uDE41-\\\\uDE7F\\\\uDE87\\\\uDE89\\\\uDE8E\\\\uDE9E\\\\uDEAA-\\\\uDEAF\\\\uDEDF-\\\\uDF04\\\\uDF0D\\\\uDF0E\\\\uDF11\\\\uDF12\\\\uDF29\\\\uDF31\\\\uDF34\\\\uDF3A-\\\\uDF3C\\\\uDF3E-\\\\uDF4F\\\\uDF51-\\\\uDF5C\\\\uDF62-\\\\uDF7F\\\\uDF8A\\\\uDF8C\\\\uDF8D\\\\uDF8F\\\\uDFB6\\\\uDFB8-\\\\uDFD0\\\\uDFD2\\\\uDFD6-\\\\uDFFF]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC4D-\\\\uDC5E\\\\uDC62-\\\\uDC7F\\\\uDCB0-\\\\uDCC3\\\\uDCC6\\\\uDCC8-\\\\uDD7F\\\\uDDAF-\\\\uDDC1\\\\uDDC4-\\\\uDDC8\\\\uDDDC-\\\\uDDFF\\\\uDE30-\\\\uDE40\\\\uDE43\\\\uDE45-\\\\uDE7F\\\\uDEAB-\\\\uDEB7\\\\uDEB9-\\\\uDEFF\\\\uDF1B-\\\\uDF3B\\\\uDF3F\\\\uDF47-\\\\uDFFF]|\\\\uD806[\\\\uDC2C-\\\\uDC9F\\\\uDCE0-\\\\uDCFE\\\\uDD07\\\\uDD08\\\\uDD0A\\\\uDD0B\\\\uDD14\\\\uDD17\\\\uDD30-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDD45\\\\uDD47-\\\\uDD9F\\\\uDDA8\\\\uDDA9\\\\uDDD1-\\\\uDDE0\\\\uDDE2\\\\uDDE4-\\\\uDDFF\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE41\\\\uDE44-\\\\uDE4F\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE9A\\\\uDE9E-\\\\uDEAF\\\\uDEF9-\\\\uDFBF\\\\uDFE1-\\\\uDFFF]|\\\\uD807[\\\\uDC09\\\\uDC2F-\\\\uDC3F\\\\uDC43-\\\\uDC71\\\\uDC90-\\\\uDCFF\\\\uDD07\\\\uDD0A\\\\uDD31-\\\\uDD45\\\\uDD47-\\\\uDD5F\\\\uDD66\\\\uDD69\\\\uDD8A-\\\\uDD97\\\\uDD99-\\\\uDEDF\\\\uDEF3-\\\\uDEF6\\\\uDEF9-\\\\uDF01\\\\uDF03\\\\uDF11\\\\uDF34-\\\\uDF42\\\\uDF45-\\\\uDFAF\\\\uDFB1-\\\\uDFFF]|\\\\uD808[\\\\uDF9A-\\\\uDFFF]|\\\\uD809[\\\\uDC6F-\\\\uDC7F\\\\uDD44-\\\\uDFFF]|[\\\\uD80A\\\\uD812-\\\\uD817\\\\uD819\\\\uD824-\\\\uD82A\\\\uD82D\\\\uD82E\\\\uD830-\\\\uD834\\\\uD83D-\\\\uD83F\\\\uD87C\\\\uD87D\\\\uD87F\\\\uD889-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|\\\\uD80B[\\\\uDC00-\\\\uDF8F\\\\uDFF1-\\\\uDFFF]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC5F]|\\\\uD810[\\\\uDFFB-\\\\uDFFF]|\\\\uD811[\\\\uDE47-\\\\uDFFF]|\\\\uD818[\\\\uDC00-\\\\uDCFF\\\\uDD1E-\\\\uDFFF]|\\\\uD81A[\\\\uDE39-\\\\uDE3F\\\\uDE5F-\\\\uDE6D\\\\uDEBF-\\\\uDECF\\\\uDEEE-\\\\uDEF4\\\\uDEF6-\\\\uDEFF\\\\uDF30-\\\\uDF36\\\\uDF39-\\\\uDF3F\\\\uDF45-\\\\uDF62\\\\uDF78-\\\\uDF7C\\\\uDF90-\\\\uDFFF]|\\\\uD81B[\\\\uDC00-\\\\uDD3F\\\\uDD6D\\\\uDD70-\\\\uDE3F\\\\uDE80-\\\\uDE97\\\\uDE99-\\\\uDEFF\\\\uDF4B-\\\\uDF4F\\\\uDF51-\\\\uDF92\\\\uDFA0-\\\\uDFDF\\\\uDFE2\\\\uDFE4-\\\\uDFFF]|\\\\uD821[\\\\uDFF8-\\\\uDFFF]|\\\\uD823[\\\\uDCD6-\\\\uDCFE\\\\uDD09-\\\\uDFFF]|\\\\uD82B[\\\\uDC00-\\\\uDFEF\\\\uDFF4\\\\uDFFC\\\\uDFFF]|\\\\uD82C[\\\\uDD23-\\\\uDD31\\\\uDD33-\\\\uDD4F\\\\uDD53\\\\uDD54\\\\uDD56-\\\\uDD63\\\\uDD68-\\\\uDD6F\\\\uDEFC-\\\\uDFFF]|\\\\uD82F[\\\\uDC6B-\\\\uDC6F\\\\uDC7D-\\\\uDC7F\\\\uDC89-\\\\uDC8F\\\\uDC9A-\\\\uDC9E\\\\uDCA0-\\\\uDFFF]|\\\\uD835[\\\\uDC55\\\\uDC9D\\\\uDCA0\\\\uDCA1\\\\uDCA3\\\\uDCA4\\\\uDCA7\\\\uDCA8\\\\uDCAD\\\\uDCBA\\\\uDCBC\\\\uDCC4\\\\uDD06\\\\uDD0B\\\\uDD0C\\\\uDD15\\\\uDD1D\\\\uDD3A\\\\uDD3F\\\\uDD45\\\\uDD47-\\\\uDD49\\\\uDD51\\\\uDEA6\\\\uDEA7\\\\uDEC1\\\\uDEDB\\\\uDEFB\\\\uDF15\\\\uDF35\\\\uDF4F\\\\uDF6F\\\\uDF89\\\\uDFA9\\\\uDFC3\\\\uDFCC-\\\\uDFFF]|\\\\uD836[\\\\uDC00-\\\\uDE87\\\\uDE89-\\\\uDFFF]|\\\\uD837[\\\\uDC00-\\\\uDEFF\\\\uDF1F-\\\\uDF24\\\\uDF2B-\\\\uDFFF]|\\\\uD838[\\\\uDC00-\\\\uDC2F\\\\uDC6E-\\\\uDCFF\\\\uDD2D-\\\\uDD36\\\\uDD3E-\\\\uDD4D\\\\uDD4F-\\\\uDE8F\\\\uDEAE-\\\\uDEBF\\\\uDEEC-\\\\uDFFF]|\\\\uD839[\\\\uDC00-\\\\uDCCF\\\\uDCEC-\\\\uDDCF\\\\uDDEE\\\\uDDEF\\\\uDDF1-\\\\uDFDF\\\\uDFE7\\\\uDFEC\\\\uDFEF\\\\uDFFF]|\\\\uD83A[\\\\uDCC5-\\\\uDCFF\\\\uDD44-\\\\uDD4A\\\\uDD4C-\\\\uDFFF]|\\\\uD83B[\\\\uDC00-\\\\uDDFF\\\\uDE04\\\\uDE20\\\\uDE23\\\\uDE25\\\\uDE26\\\\uDE28\\\\uDE33\\\\uDE38\\\\uDE3A\\\\uDE3C-\\\\uDE41\\\\uDE43-\\\\uDE46\\\\uDE48\\\\uDE4A\\\\uDE4C\\\\uDE50\\\\uDE53\\\\uDE55\\\\uDE56\\\\uDE58\\\\uDE5A\\\\uDE5C\\\\uDE5E\\\\uDE60\\\\uDE63\\\\uDE65\\\\uDE66\\\\uDE6B\\\\uDE73\\\\uDE78\\\\uDE7D\\\\uDE7F\\\\uDE8A\\\\uDE9C-\\\\uDEA0\\\\uDEA4\\\\uDEAA\\\\uDEBC-\\\\uDFFF]|\\\\uD83C[\\\\uDC00-\\\\uDD2F\\\\uDD4A-\\\\uDD4F\\\\uDD6A-\\\\uDD6F\\\\uDD8A-\\\\uDFFF]|\\\\uD869[\\\\uDEE0-\\\\uDEFF]|\\\\uD86D[\\\\uDF3A-\\\\uDF3F]|\\\\uD86E[\\\\uDC1E\\\\uDC1F]|\\\\uD873[\\\\uDEA2-\\\\uDEAF]|\\\\uD87A[\\\\uDFE1-\\\\uDFEF]|\\\\uD87B[\\\\uDE5E-\\\\uDFFF]|\\\\uD87E[\\\\uDE1E-\\\\uDFFF]|\\\\uD884[\\\\uDF4B-\\\\uDF4F]|\\\\uD888[\\\\uDFB0-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])\",\n                \"$Numeric\": \"((?:[0-9\\\\u0600-\\\\u0605\\\\u0660-\\\\u0669\\\\u066B\\\\u066C\\\\u06DD\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0890\\\\u0891\\\\u08E2\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19DA\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]|\\\\uD801[\\\\uDCA0-\\\\uDCA9]|[\\\\uD803\\\\uD818][\\\\uDD30-\\\\uDD39\\\\uDD40-\\\\uDD49]|\\\\uD804[\\\\uDC66-\\\\uDC6F\\\\uDCBD\\\\uDCCD\\\\uDCF0-\\\\uDCF9\\\\uDD36-\\\\uDD3F\\\\uDDD0-\\\\uDDD9\\\\uDEF0-\\\\uDEF9]|\\\\uD805[\\\\uDC50-\\\\uDC59\\\\uDCD0-\\\\uDCD9\\\\uDE50-\\\\uDE59\\\\uDEC0-\\\\uDEC9\\\\uDED0-\\\\uDEE3\\\\uDF30-\\\\uDF39]|\\\\uD806[\\\\uDCE0-\\\\uDCE9\\\\uDD50-\\\\uDD59\\\\uDFF0-\\\\uDFF9]|\\\\uD807[\\\\uDC50-\\\\uDC59\\\\uDD50-\\\\uDD59\\\\uDDA0-\\\\uDDA9\\\\uDF50-\\\\uDF59]|\\\\uD81A[\\\\uDE60-\\\\uDE69\\\\uDEC0-\\\\uDEC9\\\\uDF50-\\\\uDF59]|\\\\uD81B[\\\\uDD70-\\\\uDD79]|\\\\uD833[\\\\uDCF0-\\\\uDCF9]|\\\\uD835[\\\\uDFCE-\\\\uDFFF]|\\\\uD838[\\\\uDD40-\\\\uDD49\\\\uDEF0-\\\\uDEF9]|\\\\uD839[\\\\uDCF0-\\\\uDCF9\\\\uDDF1-\\\\uDDFA]|\\\\uD83A[\\\\uDD50-\\\\uDD59]|\\\\uD83E[\\\\uDFF0-\\\\uDFF9])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$OLetter\": \"((?:[\\\\u01BB\\\\u01C0-\\\\u01C3\\\\u0294\\\\u02B9-\\\\u02BF\\\\u02C6-\\\\u02D1\\\\u02EC\\\\u02EE\\\\u0374\\\\u0559\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F3\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u0870-\\\\u0887\\\\u0889-\\\\u088E\\\\u08A0-\\\\u08C9\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10D0-\\\\u10FA\\\\u10FD-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u1711\\\\u171F-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4C\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u2135-\\\\u2138\\\\u2180-\\\\u2182\\\\u2185-\\\\u2188\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BF\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DBF\\\\u4E00-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA66E\\\\uA67F\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA788\\\\uA78F\\\\uA7F7\\\\uA7FB-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF66-\\\\uFF9D\\\\uFFA0-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC50-\\\\uDC9D\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDDC0-\\\\uDDF3\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67\\\\uDF81\\\\uDF82]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDD00-\\\\uDD23\\\\uDD4A-\\\\uDD4F\\\\uDD6F\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDEC2-\\\\uDEC4\\\\uDF00-\\\\uDF1C\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF70-\\\\uDF81\\\\uDFB0-\\\\uDFC4\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC71\\\\uDC72\\\\uDC75\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE3F\\\\uDE40\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61\\\\uDF80-\\\\uDF89\\\\uDF8B\\\\uDF8E\\\\uDF90-\\\\uDFB5\\\\uDFB7\\\\uDFD1\\\\uDFD3]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDEB8\\\\uDF00-\\\\uDF1A\\\\uDF40-\\\\uDF46]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEB0-\\\\uDEF8\\\\uDFC0-\\\\uDFE0]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDEE0-\\\\uDEF2\\\\uDF02\\\\uDF04-\\\\uDF10\\\\uDF12-\\\\uDF33\\\\uDFB0]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|\\\\uD80B[\\\\uDF90-\\\\uDFF0]|[\\\\uD80C\\\\uD80E\\\\uD80F\\\\uD81C-\\\\uD820\\\\uD822\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872\\\\uD874-\\\\uD879\\\\uD880-\\\\uD883\\\\uD885-\\\\uD887][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2F\\\\uDC41-\\\\uDC46\\\\uDC60-\\\\uDFFF]|\\\\uD810[\\\\uDC00-\\\\uDFFA]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD818[\\\\uDD00-\\\\uDD1D]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE70-\\\\uDEBE\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDD40-\\\\uDD6C\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD821[\\\\uDC00-\\\\uDFF7]|\\\\uD823[\\\\uDC00-\\\\uDCD5\\\\uDCFF-\\\\uDD08]|\\\\uD82B[\\\\uDFF0-\\\\uDFF3\\\\uDFF5-\\\\uDFFB\\\\uDFFD\\\\uDFFE]|\\\\uD82C[\\\\uDC00-\\\\uDD22\\\\uDD32\\\\uDD50-\\\\uDD52\\\\uDD55\\\\uDD64-\\\\uDD67\\\\uDD70-\\\\uDEFB]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD837\\\\uDF0A|\\\\uD838[\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD4E\\\\uDE90-\\\\uDEAD\\\\uDEC0-\\\\uDEEB]|\\\\uD839[\\\\uDCD0-\\\\uDCEB\\\\uDDD0-\\\\uDDED\\\\uDDF0\\\\uDFE0-\\\\uDFE6\\\\uDFE8-\\\\uDFEB\\\\uDFED\\\\uDFEE\\\\uDFF0-\\\\uDFFE]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD4B]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD869[\\\\uDC00-\\\\uDEDF\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF39\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1\\\\uDEB0-\\\\uDFFF]|\\\\uD87A[\\\\uDC00-\\\\uDFE0\\\\uDFF0-\\\\uDFFF]|\\\\uD87B[\\\\uDC00-\\\\uDE5D]|\\\\uD87E[\\\\uDC00-\\\\uDE1D]|\\\\uD884[\\\\uDC00-\\\\uDF4A\\\\uDF50-\\\\uDFFF]|\\\\uD888[\\\\uDC00-\\\\uDFAF])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$ParaSep\": \"([\\\\x85\\\\u2028\\\\u2029]|\\\\r|\\\\n)\",\n                \"$SATerm\": \"(((?:[!\\\\?\\\\u0589\\\\u061D-\\\\u061F\\\\u06D4\\\\u0700-\\\\u0702\\\\u07F9\\\\u0837\\\\u0839\\\\u083D\\\\u083E\\\\u0964\\\\u0965\\\\u104A\\\\u104B\\\\u1362\\\\u1367\\\\u1368\\\\u166E\\\\u1735\\\\u1736\\\\u17D4\\\\u17D5\\\\u1803\\\\u1809\\\\u1944\\\\u1945\\\\u1AA8-\\\\u1AAB\\\\u1B4E\\\\u1B4F\\\\u1B5A\\\\u1B5B\\\\u1B5E\\\\u1B5F\\\\u1B7D-\\\\u1B7F\\\\u1C3B\\\\u1C3C\\\\u1C7E\\\\u1C7F\\\\u203C\\\\u203D\\\\u2047-\\\\u2049\\\\u2CF9-\\\\u2CFB\\\\u2E2E\\\\u2E3C\\\\u2E53\\\\u2E54\\\\u3002\\\\uA4FF\\\\uA60E\\\\uA60F\\\\uA6F3\\\\uA6F7\\\\uA876\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA92F\\\\uA9C8\\\\uA9C9\\\\uAA5D-\\\\uAA5F\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFE12\\\\uFE15\\\\uFE16\\\\uFE56\\\\uFE57\\\\uFF01\\\\uFF1F\\\\uFF61]|\\\\uD802[\\\\uDE56\\\\uDE57]|\\\\uD803[\\\\uDF55-\\\\uDF59\\\\uDF86-\\\\uDF89]|\\\\uD804[\\\\uDC47\\\\uDC48\\\\uDCBE-\\\\uDCC1\\\\uDD41-\\\\uDD43\\\\uDDC5\\\\uDDC6\\\\uDDCD\\\\uDDDE\\\\uDDDF\\\\uDE38\\\\uDE39\\\\uDE3B\\\\uDE3C\\\\uDEA9\\\\uDFD4\\\\uDFD5]|\\\\uD805[\\\\uDC4B\\\\uDC4C\\\\uDDC2\\\\uDDC3\\\\uDDC9-\\\\uDDD7\\\\uDE41\\\\uDE42\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDD44\\\\uDD46\\\\uDE42\\\\uDE43\\\\uDE9B\\\\uDE9C]|\\\\uD807[\\\\uDC41\\\\uDC42\\\\uDEF7\\\\uDEF8\\\\uDF43\\\\uDF44]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37\\\\uDF38\\\\uDF44]|\\\\uD81B[\\\\uDD6E\\\\uDD6F\\\\uDE98]|\\\\uD82F\\\\uDC9F|\\\\uD836\\\\uDE88)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)|([\\\\.\\\\u2024\\\\uFE52\\\\uFF0E](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*))\",\n                \"$SContinue\": \"([,\\\\x2D:;\\\\u037E\\\\u055D\\\\u060C\\\\u060D\\\\u07F8\\\\u1802\\\\u1808\\\\u2013\\\\u2014\\\\u3001\\\\uFE10\\\\uFE11\\\\uFE13\\\\uFE14\\\\uFE31\\\\uFE32\\\\uFE50\\\\uFE51\\\\uFE54\\\\uFE55\\\\uFE58\\\\uFE63\\\\uFF0C\\\\uFF0D\\\\uFF1A\\\\uFF1B\\\\uFF64](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$STerm\": \"((?:[!\\\\?\\\\u0589\\\\u061D-\\\\u061F\\\\u06D4\\\\u0700-\\\\u0702\\\\u07F9\\\\u0837\\\\u0839\\\\u083D\\\\u083E\\\\u0964\\\\u0965\\\\u104A\\\\u104B\\\\u1362\\\\u1367\\\\u1368\\\\u166E\\\\u1735\\\\u1736\\\\u17D4\\\\u17D5\\\\u1803\\\\u1809\\\\u1944\\\\u1945\\\\u1AA8-\\\\u1AAB\\\\u1B4E\\\\u1B4F\\\\u1B5A\\\\u1B5B\\\\u1B5E\\\\u1B5F\\\\u1B7D-\\\\u1B7F\\\\u1C3B\\\\u1C3C\\\\u1C7E\\\\u1C7F\\\\u203C\\\\u203D\\\\u2047-\\\\u2049\\\\u2CF9-\\\\u2CFB\\\\u2E2E\\\\u2E3C\\\\u2E53\\\\u2E54\\\\u3002\\\\uA4FF\\\\uA60E\\\\uA60F\\\\uA6F3\\\\uA6F7\\\\uA876\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA92F\\\\uA9C8\\\\uA9C9\\\\uAA5D-\\\\uAA5F\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFE12\\\\uFE15\\\\uFE16\\\\uFE56\\\\uFE57\\\\uFF01\\\\uFF1F\\\\uFF61]|\\\\uD802[\\\\uDE56\\\\uDE57]|\\\\uD803[\\\\uDF55-\\\\uDF59\\\\uDF86-\\\\uDF89]|\\\\uD804[\\\\uDC47\\\\uDC48\\\\uDCBE-\\\\uDCC1\\\\uDD41-\\\\uDD43\\\\uDDC5\\\\uDDC6\\\\uDDCD\\\\uDDDE\\\\uDDDF\\\\uDE38\\\\uDE39\\\\uDE3B\\\\uDE3C\\\\uDEA9\\\\uDFD4\\\\uDFD5]|\\\\uD805[\\\\uDC4B\\\\uDC4C\\\\uDDC2\\\\uDDC3\\\\uDDC9-\\\\uDDD7\\\\uDE41\\\\uDE42\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDD44\\\\uDD46\\\\uDE42\\\\uDE43\\\\uDE9B\\\\uDE9C]|\\\\uD807[\\\\uDC41\\\\uDC42\\\\uDEF7\\\\uDEF8\\\\uDF43\\\\uDF44]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37\\\\uDF38\\\\uDF44]|\\\\uD81B[\\\\uDD6E\\\\uDD6F\\\\uDE98]|\\\\uD82F\\\\uDC9F|\\\\uD836\\\\uDE88)(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Sep\": \"[\\\\x85\\\\u2028\\\\u2029]\",\n                \"$Sp\": \"([\\\\t\\\\x0B\\\\f \\\\xA0\\\\u1680\\\\u2000-\\\\u200A\\\\u202F\\\\u205F\\\\u3000](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Upper\": \"((?:[A-Z\\\\xC0-\\\\xD6\\\\xD8-\\\\xDE\\\\u0100\\\\u0102\\\\u0104\\\\u0106\\\\u0108\\\\u010A\\\\u010C\\\\u010E\\\\u0110\\\\u0112\\\\u0114\\\\u0116\\\\u0118\\\\u011A\\\\u011C\\\\u011E\\\\u0120\\\\u0122\\\\u0124\\\\u0126\\\\u0128\\\\u012A\\\\u012C\\\\u012E\\\\u0130\\\\u0132\\\\u0134\\\\u0136\\\\u0139\\\\u013B\\\\u013D\\\\u013F\\\\u0141\\\\u0143\\\\u0145\\\\u0147\\\\u014A\\\\u014C\\\\u014E\\\\u0150\\\\u0152\\\\u0154\\\\u0156\\\\u0158\\\\u015A\\\\u015C\\\\u015E\\\\u0160\\\\u0162\\\\u0164\\\\u0166\\\\u0168\\\\u016A\\\\u016C\\\\u016E\\\\u0170\\\\u0172\\\\u0174\\\\u0176\\\\u0178\\\\u0179\\\\u017B\\\\u017D\\\\u0181\\\\u0182\\\\u0184\\\\u0186\\\\u0187\\\\u0189-\\\\u018B\\\\u018E-\\\\u0191\\\\u0193\\\\u0194\\\\u0196-\\\\u0198\\\\u019C\\\\u019D\\\\u019F\\\\u01A0\\\\u01A2\\\\u01A4\\\\u01A6\\\\u01A7\\\\u01A9\\\\u01AC\\\\u01AE\\\\u01AF\\\\u01B1-\\\\u01B3\\\\u01B5\\\\u01B7\\\\u01B8\\\\u01BC\\\\u01C4\\\\u01C5\\\\u01C7\\\\u01C8\\\\u01CA\\\\u01CB\\\\u01CD\\\\u01CF\\\\u01D1\\\\u01D3\\\\u01D5\\\\u01D7\\\\u01D9\\\\u01DB\\\\u01DE\\\\u01E0\\\\u01E2\\\\u01E4\\\\u01E6\\\\u01E8\\\\u01EA\\\\u01EC\\\\u01EE\\\\u01F1\\\\u01F2\\\\u01F4\\\\u01F6-\\\\u01F8\\\\u01FA\\\\u01FC\\\\u01FE\\\\u0200\\\\u0202\\\\u0204\\\\u0206\\\\u0208\\\\u020A\\\\u020C\\\\u020E\\\\u0210\\\\u0212\\\\u0214\\\\u0216\\\\u0218\\\\u021A\\\\u021C\\\\u021E\\\\u0220\\\\u0222\\\\u0224\\\\u0226\\\\u0228\\\\u022A\\\\u022C\\\\u022E\\\\u0230\\\\u0232\\\\u023A\\\\u023B\\\\u023D\\\\u023E\\\\u0241\\\\u0243-\\\\u0246\\\\u0248\\\\u024A\\\\u024C\\\\u024E\\\\u0370\\\\u0372\\\\u0376\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E\\\\u038F\\\\u0391-\\\\u03A1\\\\u03A3-\\\\u03AB\\\\u03CF\\\\u03D2-\\\\u03D4\\\\u03D8\\\\u03DA\\\\u03DC\\\\u03DE\\\\u03E0\\\\u03E2\\\\u03E4\\\\u03E6\\\\u03E8\\\\u03EA\\\\u03EC\\\\u03EE\\\\u03F4\\\\u03F7\\\\u03F9\\\\u03FA\\\\u03FD-\\\\u042F\\\\u0460\\\\u0462\\\\u0464\\\\u0466\\\\u0468\\\\u046A\\\\u046C\\\\u046E\\\\u0470\\\\u0472\\\\u0474\\\\u0476\\\\u0478\\\\u047A\\\\u047C\\\\u047E\\\\u0480\\\\u048A\\\\u048C\\\\u048E\\\\u0490\\\\u0492\\\\u0494\\\\u0496\\\\u0498\\\\u049A\\\\u049C\\\\u049E\\\\u04A0\\\\u04A2\\\\u04A4\\\\u04A6\\\\u04A8\\\\u04AA\\\\u04AC\\\\u04AE\\\\u04B0\\\\u04B2\\\\u04B4\\\\u04B6\\\\u04B8\\\\u04BA\\\\u04BC\\\\u04BE\\\\u04C0\\\\u04C1\\\\u04C3\\\\u04C5\\\\u04C7\\\\u04C9\\\\u04CB\\\\u04CD\\\\u04D0\\\\u04D2\\\\u04D4\\\\u04D6\\\\u04D8\\\\u04DA\\\\u04DC\\\\u04DE\\\\u04E0\\\\u04E2\\\\u04E4\\\\u04E6\\\\u04E8\\\\u04EA\\\\u04EC\\\\u04EE\\\\u04F0\\\\u04F2\\\\u04F4\\\\u04F6\\\\u04F8\\\\u04FA\\\\u04FC\\\\u04FE\\\\u0500\\\\u0502\\\\u0504\\\\u0506\\\\u0508\\\\u050A\\\\u050C\\\\u050E\\\\u0510\\\\u0512\\\\u0514\\\\u0516\\\\u0518\\\\u051A\\\\u051C\\\\u051E\\\\u0520\\\\u0522\\\\u0524\\\\u0526\\\\u0528\\\\u052A\\\\u052C\\\\u052E\\\\u0531-\\\\u0556\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u13A0-\\\\u13F5\\\\u1C89\\\\u1E00\\\\u1E02\\\\u1E04\\\\u1E06\\\\u1E08\\\\u1E0A\\\\u1E0C\\\\u1E0E\\\\u1E10\\\\u1E12\\\\u1E14\\\\u1E16\\\\u1E18\\\\u1E1A\\\\u1E1C\\\\u1E1E\\\\u1E20\\\\u1E22\\\\u1E24\\\\u1E26\\\\u1E28\\\\u1E2A\\\\u1E2C\\\\u1E2E\\\\u1E30\\\\u1E32\\\\u1E34\\\\u1E36\\\\u1E38\\\\u1E3A\\\\u1E3C\\\\u1E3E\\\\u1E40\\\\u1E42\\\\u1E44\\\\u1E46\\\\u1E48\\\\u1E4A\\\\u1E4C\\\\u1E4E\\\\u1E50\\\\u1E52\\\\u1E54\\\\u1E56\\\\u1E58\\\\u1E5A\\\\u1E5C\\\\u1E5E\\\\u1E60\\\\u1E62\\\\u1E64\\\\u1E66\\\\u1E68\\\\u1E6A\\\\u1E6C\\\\u1E6E\\\\u1E70\\\\u1E72\\\\u1E74\\\\u1E76\\\\u1E78\\\\u1E7A\\\\u1E7C\\\\u1E7E\\\\u1E80\\\\u1E82\\\\u1E84\\\\u1E86\\\\u1E88\\\\u1E8A\\\\u1E8C\\\\u1E8E\\\\u1E90\\\\u1E92\\\\u1E94\\\\u1E9E\\\\u1EA0\\\\u1EA2\\\\u1EA4\\\\u1EA6\\\\u1EA8\\\\u1EAA\\\\u1EAC\\\\u1EAE\\\\u1EB0\\\\u1EB2\\\\u1EB4\\\\u1EB6\\\\u1EB8\\\\u1EBA\\\\u1EBC\\\\u1EBE\\\\u1EC0\\\\u1EC2\\\\u1EC4\\\\u1EC6\\\\u1EC8\\\\u1ECA\\\\u1ECC\\\\u1ECE\\\\u1ED0\\\\u1ED2\\\\u1ED4\\\\u1ED6\\\\u1ED8\\\\u1EDA\\\\u1EDC\\\\u1EDE\\\\u1EE0\\\\u1EE2\\\\u1EE4\\\\u1EE6\\\\u1EE8\\\\u1EEA\\\\u1EEC\\\\u1EEE\\\\u1EF0\\\\u1EF2\\\\u1EF4\\\\u1EF6\\\\u1EF8\\\\u1EFA\\\\u1EFC\\\\u1EFE\\\\u1F08-\\\\u1F0F\\\\u1F18-\\\\u1F1D\\\\u1F28-\\\\u1F2F\\\\u1F38-\\\\u1F3F\\\\u1F48-\\\\u1F4D\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F\\\\u1F68-\\\\u1F6F\\\\u1F88-\\\\u1F8F\\\\u1F98-\\\\u1F9F\\\\u1FA8-\\\\u1FAF\\\\u1FB8-\\\\u1FBC\\\\u1FC8-\\\\u1FCC\\\\u1FD8-\\\\u1FDB\\\\u1FE8-\\\\u1FEC\\\\u1FF8-\\\\u1FFC\\\\u2102\\\\u2107\\\\u210B-\\\\u210D\\\\u2110-\\\\u2112\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u2130-\\\\u2133\\\\u213E\\\\u213F\\\\u2145\\\\u2160-\\\\u216F\\\\u2183\\\\u24B6-\\\\u24CF\\\\u2C00-\\\\u2C2F\\\\u2C60\\\\u2C62-\\\\u2C64\\\\u2C67\\\\u2C69\\\\u2C6B\\\\u2C6D-\\\\u2C70\\\\u2C72\\\\u2C75\\\\u2C7E-\\\\u2C80\\\\u2C82\\\\u2C84\\\\u2C86\\\\u2C88\\\\u2C8A\\\\u2C8C\\\\u2C8E\\\\u2C90\\\\u2C92\\\\u2C94\\\\u2C96\\\\u2C98\\\\u2C9A\\\\u2C9C\\\\u2C9E\\\\u2CA0\\\\u2CA2\\\\u2CA4\\\\u2CA6\\\\u2CA8\\\\u2CAA\\\\u2CAC\\\\u2CAE\\\\u2CB0\\\\u2CB2\\\\u2CB4\\\\u2CB6\\\\u2CB8\\\\u2CBA\\\\u2CBC\\\\u2CBE\\\\u2CC0\\\\u2CC2\\\\u2CC4\\\\u2CC6\\\\u2CC8\\\\u2CCA\\\\u2CCC\\\\u2CCE\\\\u2CD0\\\\u2CD2\\\\u2CD4\\\\u2CD6\\\\u2CD8\\\\u2CDA\\\\u2CDC\\\\u2CDE\\\\u2CE0\\\\u2CE2\\\\u2CEB\\\\u2CED\\\\u2CF2\\\\uA640\\\\uA642\\\\uA644\\\\uA646\\\\uA648\\\\uA64A\\\\uA64C\\\\uA64E\\\\uA650\\\\uA652\\\\uA654\\\\uA656\\\\uA658\\\\uA65A\\\\uA65C\\\\uA65E\\\\uA660\\\\uA662\\\\uA664\\\\uA666\\\\uA668\\\\uA66A\\\\uA66C\\\\uA680\\\\uA682\\\\uA684\\\\uA686\\\\uA688\\\\uA68A\\\\uA68C\\\\uA68E\\\\uA690\\\\uA692\\\\uA694\\\\uA696\\\\uA698\\\\uA69A\\\\uA722\\\\uA724\\\\uA726\\\\uA728\\\\uA72A\\\\uA72C\\\\uA72E\\\\uA732\\\\uA734\\\\uA736\\\\uA738\\\\uA73A\\\\uA73C\\\\uA73E\\\\uA740\\\\uA742\\\\uA744\\\\uA746\\\\uA748\\\\uA74A\\\\uA74C\\\\uA74E\\\\uA750\\\\uA752\\\\uA754\\\\uA756\\\\uA758\\\\uA75A\\\\uA75C\\\\uA75E\\\\uA760\\\\uA762\\\\uA764\\\\uA766\\\\uA768\\\\uA76A\\\\uA76C\\\\uA76E\\\\uA779\\\\uA77B\\\\uA77D\\\\uA77E\\\\uA780\\\\uA782\\\\uA784\\\\uA786\\\\uA78B\\\\uA78D\\\\uA790\\\\uA792\\\\uA796\\\\uA798\\\\uA79A\\\\uA79C\\\\uA79E\\\\uA7A0\\\\uA7A2\\\\uA7A4\\\\uA7A6\\\\uA7A8\\\\uA7AA-\\\\uA7AE\\\\uA7B0-\\\\uA7B4\\\\uA7B6\\\\uA7B8\\\\uA7BA\\\\uA7BC\\\\uA7BE\\\\uA7C0\\\\uA7C2\\\\uA7C4-\\\\uA7C7\\\\uA7C9\\\\uA7CB\\\\uA7CC\\\\uA7D0\\\\uA7D6\\\\uA7D8\\\\uA7DA\\\\uA7DC\\\\uA7F5\\\\uFF21-\\\\uFF3A]|\\\\uD801[\\\\uDC00-\\\\uDC27\\\\uDCB0-\\\\uDCD3\\\\uDD70-\\\\uDD7A\\\\uDD7C-\\\\uDD8A\\\\uDD8C-\\\\uDD92\\\\uDD94\\\\uDD95]|\\\\uD803[\\\\uDC80-\\\\uDCB2\\\\uDD50-\\\\uDD65]|\\\\uD806[\\\\uDCA0-\\\\uDCBF]|\\\\uD81B[\\\\uDE40-\\\\uDE5F]|\\\\uD835[\\\\uDC00-\\\\uDC19\\\\uDC34-\\\\uDC4D\\\\uDC68-\\\\uDC81\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB5\\\\uDCD0-\\\\uDCE9\\\\uDD04\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD38\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD6C-\\\\uDD85\\\\uDDA0-\\\\uDDB9\\\\uDDD4-\\\\uDDED\\\\uDE08-\\\\uDE21\\\\uDE3C-\\\\uDE55\\\\uDE70-\\\\uDE89\\\\uDEA8-\\\\uDEC0\\\\uDEE2-\\\\uDEFA\\\\uDF1C-\\\\uDF34\\\\uDF56-\\\\uDF6E\\\\uDF90-\\\\uDFA8\\\\uDFCA]|\\\\uD83A[\\\\uDD00-\\\\uDD21]|\\\\uD83C[\\\\uDD30-\\\\uDD49\\\\uDD50-\\\\uDD69\\\\uDD70-\\\\uDD89])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\"\n            }\n        },\n        \"word\": {\n            \"segmentRules\": {\n                \"10\": {\n                    \"after\": \"$AHLetter\",\n                    \"before\": \"$Numeric\",\n                    \"breaks\": false\n                },\n                \"11\": {\n                    \"after\": \"$Numeric\",\n                    \"before\": \"$Numeric($MidNum|$MidNumLetQ)\",\n                    \"breaks\": false\n                },\n                \"12\": {\n                    \"after\": \"($MidNum|$MidNumLetQ)$Numeric\",\n                    \"before\": \"$Numeric\",\n                    \"breaks\": false\n                },\n                \"13\": {\n                    \"after\": \"$Katakana\",\n                    \"before\": \"$Katakana\",\n                    \"breaks\": false\n                },\n                \"13.1\": {\n                    \"after\": \"$ExtendNumLet\",\n                    \"before\": \"($AHLetter|$Numeric|$Katakana|$ExtendNumLet)\",\n                    \"breaks\": false\n                },\n                \"13.2\": {\n                    \"after\": \"($AHLetter|$Numeric|$Katakana)\",\n                    \"before\": \"$ExtendNumLet\",\n                    \"breaks\": false\n                },\n                \"15\": {\n                    \"after\": \"$RI\",\n                    \"before\": \"^($RI$RI)*$RI\",\n                    \"breaks\": false\n                },\n                \"16\": {\n                    \"after\": \"$RI\",\n                    \"before\": \"[^\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0600-\\\\u0605\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DD\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0890\\\\u0891\\\\u0898-\\\\u089F\\\\u08CA-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6\\\\uDD24-\\\\uDD27\\\\uDEAB\\\\uDEAC\\\\uDEFD-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCBD\\\\uDCC2\\\\uDCCD\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF\\\\uDCEC-\\\\uDCEF\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A\\\\uDDE6-\\\\uDDFF\\\\uDFFB-\\\\uDFFF\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF]($RI$RI)*$RI\",\n                    \"breaks\": false\n                },\n                \"3\": {\n                    \"after\": \"$LF\",\n                    \"before\": \"$CR\",\n                    \"breaks\": false\n                },\n                \"3.1\": {\n                    \"before\": \"($Newline|$CR|$LF)\",\n                    \"breaks\": true\n                },\n                \"3.2\": {\n                    \"after\": \"($Newline|$CR|$LF)\",\n                    \"breaks\": true\n                },\n                \"3.3\": {\n                    \"after\": \"$ExtPict\",\n                    \"before\": \"$ZWJ\",\n                    \"breaks\": false\n                },\n                \"3.4\": {\n                    \"after\": \"$WSegSpace\",\n                    \"before\": \"$WSegSpace\",\n                    \"breaks\": false\n                },\n                \"4\": {\n                    \"after\": \"(?:$Format|$Extend|$ZWJ)\",\n                    \"before\": \"$NotBreak_\",\n                    \"breaks\": false\n                },\n                \"5\": {\n                    \"after\": \"$AHLetter\",\n                    \"before\": \"$AHLetter\",\n                    \"breaks\": false\n                },\n                \"6\": {\n                    \"after\": \"($MidLetter|$MidNumLetQ)$AHLetter\",\n                    \"before\": \"$AHLetter\",\n                    \"breaks\": false\n                },\n                \"7\": {\n                    \"after\": \"$AHLetter\",\n                    \"before\": \"$AHLetter($MidLetter|$MidNumLetQ)\",\n                    \"breaks\": false\n                },\n                \"7.1\": {\n                    \"after\": \"$Single_Quote\",\n                    \"before\": \"$Hebrew_Letter\",\n                    \"breaks\": false\n                },\n                \"7.2\": {\n                    \"after\": \"$Double_Quote$Hebrew_Letter\",\n                    \"before\": \"$Hebrew_Letter\",\n                    \"breaks\": false\n                },\n                \"7.3\": {\n                    \"after\": \"$Hebrew_Letter\",\n                    \"before\": \"$Hebrew_Letter$Double_Quote\",\n                    \"breaks\": false\n                },\n                \"8\": {\n                    \"after\": \"$Numeric\",\n                    \"before\": \"$Numeric\",\n                    \"breaks\": false\n                },\n                \"9\": {\n                    \"after\": \"$Numeric\",\n                    \"before\": \"$AHLetter\",\n                    \"breaks\": false\n                }\n            },\n            \"suppressions\": [],\n            \"variables\": {\n                \"$AHLetter\": \"(((?:[A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02D7\\\\u02DE-\\\\u02FF\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u055C\\\\u055E\\\\u0560-\\\\u0588\\\\u058A\\\\u05F3\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u0870-\\\\u0887\\\\u0889-\\\\u088E\\\\u08A0-\\\\u08C9\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u1711\\\\u171F-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4C\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C80-\\\\u1C8A\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u24B6-\\\\u24E9\\\\u2C00-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u303B\\\\u303C\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BF\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA708-\\\\uA7CD\\\\uA7D0\\\\uA7D1\\\\uA7D3\\\\uA7D5-\\\\uA7DC\\\\uA7F2-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB69\\\\uAB70-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB50-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFFA0-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDD70-\\\\uDD7A\\\\uDD7C-\\\\uDD8A\\\\uDD8C-\\\\uDD92\\\\uDD94\\\\uDD95\\\\uDD97-\\\\uDDA1\\\\uDDA3-\\\\uDDB1\\\\uDDB3-\\\\uDDB9\\\\uDDBB\\\\uDDBC\\\\uDDC0-\\\\uDDF3\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67\\\\uDF80-\\\\uDF85\\\\uDF87-\\\\uDFB0\\\\uDFB2-\\\\uDFBA]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2\\\\uDD00-\\\\uDD23\\\\uDD4A-\\\\uDD65\\\\uDD6F-\\\\uDD85\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDEC2-\\\\uDEC4\\\\uDF00-\\\\uDF1C\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF70-\\\\uDF81\\\\uDFB0-\\\\uDFC4\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC71\\\\uDC72\\\\uDC75\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE3F\\\\uDE40\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61\\\\uDF80-\\\\uDF89\\\\uDF8B\\\\uDF8E\\\\uDF90-\\\\uDFB5\\\\uDFB7\\\\uDFD1\\\\uDFD3]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDEB8]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCA0-\\\\uDCDF\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEB0-\\\\uDEF8\\\\uDFC0-\\\\uDFE0]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDEE0-\\\\uDEF2\\\\uDF02\\\\uDF04-\\\\uDF10\\\\uDF12-\\\\uDF33\\\\uDFB0]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|\\\\uD80B[\\\\uDF90-\\\\uDFF0]|[\\\\uD80C\\\\uD80E\\\\uD80F][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2F\\\\uDC41-\\\\uDC46\\\\uDC60-\\\\uDFFF]|\\\\uD810[\\\\uDC00-\\\\uDFFA]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD818[\\\\uDD00-\\\\uDD1D]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE70-\\\\uDEBE\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDD40-\\\\uDD6C\\\\uDE40-\\\\uDE7F\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB]|\\\\uD837[\\\\uDF00-\\\\uDF1E\\\\uDF25-\\\\uDF2A]|\\\\uD838[\\\\uDC30-\\\\uDC6D\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD4E\\\\uDE90-\\\\uDEAD\\\\uDEC0-\\\\uDEEB]|\\\\uD839[\\\\uDCD0-\\\\uDCEB\\\\uDDD0-\\\\uDDED\\\\uDDF0\\\\uDFE0-\\\\uDFE6\\\\uDFE8-\\\\uDFEB\\\\uDFED\\\\uDFEE\\\\uDFF0-\\\\uDFFE]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD00-\\\\uDD43\\\\uDD4B]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD83C[\\\\uDD30-\\\\uDD49\\\\uDD50-\\\\uDD69\\\\uDD70-\\\\uDD89])|[\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFB4F])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$ALetter\": \"((?:[A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02D7\\\\u02DE-\\\\u02FF\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u055C\\\\u055E\\\\u0560-\\\\u0588\\\\u058A\\\\u05F3\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u0860-\\\\u086A\\\\u0870-\\\\u0887\\\\u0889-\\\\u088E\\\\u08A0-\\\\u08C9\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u09FC\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C5D\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D04-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u1711\\\\u171F-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4C\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C80-\\\\u1C8A\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5\\\\u1CF6\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u24B6-\\\\u24E9\\\\u2C00-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u303B\\\\u303C\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BF\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA708-\\\\uA7CD\\\\uA7D0\\\\uA7D1\\\\uA7D3\\\\uA7D5-\\\\uA7DC\\\\uA7F2-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA8FE\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB69\\\\uAB70-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB50-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFFA0-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF2D-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDD70-\\\\uDD7A\\\\uDD7C-\\\\uDD8A\\\\uDD8C-\\\\uDD92\\\\uDD94\\\\uDD95\\\\uDD97-\\\\uDDA1\\\\uDDA3-\\\\uDDB1\\\\uDDB3-\\\\uDDB9\\\\uDDBB\\\\uDDBC\\\\uDDC0-\\\\uDDF3\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67\\\\uDF80-\\\\uDF85\\\\uDF87-\\\\uDFB0\\\\uDFB2-\\\\uDFBA]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE35\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2\\\\uDD00-\\\\uDD23\\\\uDD4A-\\\\uDD65\\\\uDD6F-\\\\uDD85\\\\uDE80-\\\\uDEA9\\\\uDEB0\\\\uDEB1\\\\uDEC2-\\\\uDEC4\\\\uDF00-\\\\uDF1C\\\\uDF27\\\\uDF30-\\\\uDF45\\\\uDF70-\\\\uDF81\\\\uDFB0-\\\\uDFC4\\\\uDFE0-\\\\uDFF6]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC71\\\\uDC72\\\\uDC75\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD44\\\\uDD47\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE3F\\\\uDE40\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61\\\\uDF80-\\\\uDF89\\\\uDF8B\\\\uDF8E\\\\uDF90-\\\\uDFB5\\\\uDFB7\\\\uDFD1\\\\uDFD3]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC5F-\\\\uDC61\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDEB8]|\\\\uD806[\\\\uDC00-\\\\uDC2B\\\\uDCA0-\\\\uDCDF\\\\uDCFF-\\\\uDD06\\\\uDD09\\\\uDD0C-\\\\uDD13\\\\uDD15\\\\uDD16\\\\uDD18-\\\\uDD2F\\\\uDD3F\\\\uDD41\\\\uDDA0-\\\\uDDA7\\\\uDDAA-\\\\uDDD0\\\\uDDE1\\\\uDDE3\\\\uDE00\\\\uDE0B-\\\\uDE32\\\\uDE3A\\\\uDE50\\\\uDE5C-\\\\uDE89\\\\uDE9D\\\\uDEB0-\\\\uDEF8\\\\uDFC0-\\\\uDFE0]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F\\\\uDD00-\\\\uDD06\\\\uDD08\\\\uDD09\\\\uDD0B-\\\\uDD30\\\\uDD46\\\\uDD60-\\\\uDD65\\\\uDD67\\\\uDD68\\\\uDD6A-\\\\uDD89\\\\uDD98\\\\uDEE0-\\\\uDEF2\\\\uDF02\\\\uDF04-\\\\uDF10\\\\uDF12-\\\\uDF33\\\\uDFB0]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|\\\\uD80B[\\\\uDF90-\\\\uDFF0]|[\\\\uD80C\\\\uD80E\\\\uD80F][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2F\\\\uDC41-\\\\uDC46\\\\uDC60-\\\\uDFFF]|\\\\uD810[\\\\uDC00-\\\\uDFFA]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD818[\\\\uDD00-\\\\uDD1D]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE70-\\\\uDEBE\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDD40-\\\\uDD6C\\\\uDE40-\\\\uDE7F\\\\uDF00-\\\\uDF4A\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0\\\\uDFE1\\\\uDFE3]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB]|\\\\uD837[\\\\uDF00-\\\\uDF1E\\\\uDF25-\\\\uDF2A]|\\\\uD838[\\\\uDC30-\\\\uDC6D\\\\uDD00-\\\\uDD2C\\\\uDD37-\\\\uDD3D\\\\uDD4E\\\\uDE90-\\\\uDEAD\\\\uDEC0-\\\\uDEEB]|\\\\uD839[\\\\uDCD0-\\\\uDCEB\\\\uDDD0-\\\\uDDED\\\\uDDF0\\\\uDFE0-\\\\uDFE6\\\\uDFE8-\\\\uDFEB\\\\uDFED\\\\uDFEE\\\\uDFF0-\\\\uDFFE]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD00-\\\\uDD43\\\\uDD4B]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD83C[\\\\uDD30-\\\\uDD49\\\\uDD50-\\\\uDD69\\\\uDD70-\\\\uDD89])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$CR\": \"\\\\r\",\n                \"$Double_Quote\": \"(\\\"(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$ExtPict\": \"(?:[\\\\xA9\\\\xAE\\\\u203C\\\\u2049\\\\u2122\\\\u2139\\\\u2194-\\\\u2199\\\\u21A9\\\\u21AA\\\\u231A\\\\u231B\\\\u2328\\\\u2388\\\\u23CF\\\\u23E9-\\\\u23F3\\\\u23F8-\\\\u23FA\\\\u24C2\\\\u25AA\\\\u25AB\\\\u25B6\\\\u25C0\\\\u25FB-\\\\u25FE\\\\u2600-\\\\u2605\\\\u2607-\\\\u2612\\\\u2614-\\\\u2685\\\\u2690-\\\\u2705\\\\u2708-\\\\u2712\\\\u2714\\\\u2716\\\\u271D\\\\u2721\\\\u2728\\\\u2733\\\\u2734\\\\u2744\\\\u2747\\\\u274C\\\\u274E\\\\u2753-\\\\u2755\\\\u2757\\\\u2763-\\\\u2767\\\\u2795-\\\\u2797\\\\u27A1\\\\u27B0\\\\u27BF\\\\u2934\\\\u2935\\\\u2B05-\\\\u2B07\\\\u2B1B\\\\u2B1C\\\\u2B50\\\\u2B55\\\\u3030\\\\u303D\\\\u3297\\\\u3299]|\\\\uD83C[\\\\uDC00-\\\\uDCFF\\\\uDD0D-\\\\uDD0F\\\\uDD2F\\\\uDD6C-\\\\uDD71\\\\uDD7E\\\\uDD7F\\\\uDD8E\\\\uDD91-\\\\uDD9A\\\\uDDAD-\\\\uDDE5\\\\uDE01-\\\\uDE0F\\\\uDE1A\\\\uDE2F\\\\uDE32-\\\\uDE3A\\\\uDE3C-\\\\uDE3F\\\\uDE49-\\\\uDFFA]|\\\\uD83D[\\\\uDC00-\\\\uDD3D\\\\uDD46-\\\\uDE4F\\\\uDE80-\\\\uDEFF\\\\uDF74-\\\\uDF7F\\\\uDFD5-\\\\uDFFF]|\\\\uD83E[\\\\uDC0C-\\\\uDC0F\\\\uDC48-\\\\uDC4F\\\\uDC5A-\\\\uDC5F\\\\uDC88-\\\\uDC8F\\\\uDCAE-\\\\uDCFF\\\\uDD0C-\\\\uDD3A\\\\uDD3C-\\\\uDD45\\\\uDD47-\\\\uDEFF]|\\\\uD83F[\\\\uDC00-\\\\uDFFD])\",\n                \"$Extend\": \"(?:[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFF9E\\\\uFF9F]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\n                \"$ExtendNumLet\": \"([_\\\\u202F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$FE\": \"(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])\",\n                \"$Format\": \"(?:[\\\\xAD\\\\u061C\\\\u180E\\\\u200E\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\uFEFF\\\\uFFF9-\\\\uFFFB]|\\\\uD80D[\\\\uDC30-\\\\uDC3F]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40\\\\uDC01)\",\n                \"$Hebrew_Letter\": \"([\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFB4F](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Katakana\": \"((?:[\\\\u3031-\\\\u3035\\\\u309B\\\\u309C\\\\u30A0-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u31F0-\\\\u31FF\\\\u32D0-\\\\u32FE\\\\u3300-\\\\u3357\\\\uFF66-\\\\uFF9D]|\\\\uD82B[\\\\uDFF0-\\\\uDFF3\\\\uDFF5-\\\\uDFFB\\\\uDFFD\\\\uDFFE]|\\\\uD82C[\\\\uDC00\\\\uDD20-\\\\uDD22\\\\uDD55\\\\uDD64-\\\\uDD67])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$LF\": \"\\\\n\",\n                \"$MidLetter\": \"([:\\\\xB7\\\\u0387\\\\u055F\\\\u05F4\\\\u2027\\\\uFE13\\\\uFE55\\\\uFF1A](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$MidNum\": \"([,;\\\\u037E\\\\u0589\\\\u060C\\\\u060D\\\\u066C\\\\u07F8\\\\u2044\\\\uFE50\\\\uFE54\\\\uFF0C\\\\uFF1B](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$MidNumLet\": \"([\\\\.\\\\u2018\\\\u2019\\\\u2024\\\\uFE52\\\\uFF07\\\\uFF0E](?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$MidNumLetQ\": \"(([\\\\.\\\\u2018\\\\u2019\\\\u2024\\\\uFE52\\\\uFF07\\\\uFF0E]|')(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Newline\": \"[\\\\x0B\\\\f\\\\x85\\\\u2028\\\\u2029]\",\n                \"$NotBreak_\": \"(?:[\\\\0-\\\\t\\\\x0E-\\\\x84\\\\x86-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])\",\n                \"$Numeric\": \"((?:[0-9\\\\u0600-\\\\u0605\\\\u0660-\\\\u0669\\\\u066B\\\\u06DD\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0890\\\\u0891\\\\u08E2\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19DA\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]|\\\\uD801[\\\\uDCA0-\\\\uDCA9]|[\\\\uD803\\\\uD818][\\\\uDD30-\\\\uDD39\\\\uDD40-\\\\uDD49]|\\\\uD804[\\\\uDC66-\\\\uDC6F\\\\uDCBD\\\\uDCCD\\\\uDCF0-\\\\uDCF9\\\\uDD36-\\\\uDD3F\\\\uDDD0-\\\\uDDD9\\\\uDEF0-\\\\uDEF9]|\\\\uD805[\\\\uDC50-\\\\uDC59\\\\uDCD0-\\\\uDCD9\\\\uDE50-\\\\uDE59\\\\uDEC0-\\\\uDEC9\\\\uDED0-\\\\uDEE3\\\\uDF30-\\\\uDF39]|\\\\uD806[\\\\uDCE0-\\\\uDCE9\\\\uDD50-\\\\uDD59\\\\uDFF0-\\\\uDFF9]|\\\\uD807[\\\\uDC50-\\\\uDC59\\\\uDD50-\\\\uDD59\\\\uDDA0-\\\\uDDA9\\\\uDF50-\\\\uDF59]|\\\\uD81A[\\\\uDE60-\\\\uDE69\\\\uDEC0-\\\\uDEC9\\\\uDF50-\\\\uDF59]|\\\\uD81B[\\\\uDD70-\\\\uDD79]|\\\\uD833[\\\\uDCF0-\\\\uDCF9]|\\\\uD835[\\\\uDFCE-\\\\uDFFF]|\\\\uD838[\\\\uDD40-\\\\uDD49\\\\uDEF0-\\\\uDEF9]|\\\\uD839[\\\\uDCF0-\\\\uDCF9\\\\uDDF1-\\\\uDDFA]|\\\\uD83A[\\\\uDD50-\\\\uDD59]|\\\\uD83E[\\\\uDFF0-\\\\uDFF9])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$RI\": \"((?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF])(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$Single_Quote\": \"('(?:[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u0897-\\\\u089F\\\\u08CA-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3C\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0CF3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D81-\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECE\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1715\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180F\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ACE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DFF\\\\u200C-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA82C\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFF9E\\\\uFF9F\\\\uFFF9-\\\\uFFFB]|\\\\uD800[\\\\uDDFD\\\\uDEE0\\\\uDF76-\\\\uDF7A]|\\\\uD802[\\\\uDE01-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE0F\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDEE5\\\\uDEE6]|\\\\uD803[\\\\uDD24-\\\\uDD27\\\\uDD69-\\\\uDD6D\\\\uDEAB\\\\uDEAC\\\\uDEFC-\\\\uDEFF\\\\uDF46-\\\\uDF50\\\\uDF82-\\\\uDF85]|\\\\uD804[\\\\uDC00-\\\\uDC02\\\\uDC38-\\\\uDC46\\\\uDC70\\\\uDC73\\\\uDC74\\\\uDC7F-\\\\uDC82\\\\uDCB0-\\\\uDCBA\\\\uDCC2\\\\uDD00-\\\\uDD02\\\\uDD27-\\\\uDD34\\\\uDD45\\\\uDD46\\\\uDD73\\\\uDD80-\\\\uDD82\\\\uDDB3-\\\\uDDC0\\\\uDDC9-\\\\uDDCC\\\\uDDCE\\\\uDDCF\\\\uDE2C-\\\\uDE37\\\\uDE3E\\\\uDE41\\\\uDEDF-\\\\uDEEA\\\\uDF00-\\\\uDF03\\\\uDF3B\\\\uDF3C\\\\uDF3E-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF57\\\\uDF62\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74\\\\uDFB8-\\\\uDFC0\\\\uDFC2\\\\uDFC5\\\\uDFC7-\\\\uDFCA\\\\uDFCC-\\\\uDFD0\\\\uDFD2\\\\uDFE1\\\\uDFE2]|\\\\uD805[\\\\uDC35-\\\\uDC46\\\\uDC5E\\\\uDCB0-\\\\uDCC3\\\\uDDAF-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDDC\\\\uDDDD\\\\uDE30-\\\\uDE40\\\\uDEAB-\\\\uDEB7\\\\uDF1D-\\\\uDF2B]|\\\\uD806[\\\\uDC2C-\\\\uDC3A\\\\uDD30-\\\\uDD35\\\\uDD37\\\\uDD38\\\\uDD3B-\\\\uDD3E\\\\uDD40\\\\uDD42\\\\uDD43\\\\uDDD1-\\\\uDDD7\\\\uDDDA-\\\\uDDE0\\\\uDDE4\\\\uDE01-\\\\uDE0A\\\\uDE33-\\\\uDE39\\\\uDE3B-\\\\uDE3E\\\\uDE47\\\\uDE51-\\\\uDE5B\\\\uDE8A-\\\\uDE99]|\\\\uD807[\\\\uDC2F-\\\\uDC36\\\\uDC38-\\\\uDC3F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6\\\\uDD31-\\\\uDD36\\\\uDD3A\\\\uDD3C\\\\uDD3D\\\\uDD3F-\\\\uDD45\\\\uDD47\\\\uDD8A-\\\\uDD8E\\\\uDD90\\\\uDD91\\\\uDD93-\\\\uDD97\\\\uDEF3-\\\\uDEF6\\\\uDF00\\\\uDF01\\\\uDF03\\\\uDF34-\\\\uDF3A\\\\uDF3E-\\\\uDF42\\\\uDF5A]|\\\\uD80D[\\\\uDC30-\\\\uDC40\\\\uDC47-\\\\uDC55]|\\\\uD818[\\\\uDD1E-\\\\uDD2F]|\\\\uD81A[\\\\uDEF0-\\\\uDEF4\\\\uDF30-\\\\uDF36]|\\\\uD81B[\\\\uDF4F\\\\uDF51-\\\\uDF87\\\\uDF8F-\\\\uDF92\\\\uDFE4\\\\uDFF0\\\\uDFF1]|\\\\uD82F[\\\\uDC9D\\\\uDC9E\\\\uDCA0-\\\\uDCA3]|\\\\uD833[\\\\uDF00-\\\\uDF2D\\\\uDF30-\\\\uDF46]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A\\\\uDC8F\\\\uDD30-\\\\uDD36\\\\uDEAE\\\\uDEEC-\\\\uDEEF]|\\\\uD839[\\\\uDCEC-\\\\uDCEF\\\\uDDEE\\\\uDDEF]|\\\\uD83A[\\\\uDCD0-\\\\uDCD6\\\\uDD44-\\\\uDD4A]|\\\\uD83C[\\\\uDFFB-\\\\uDFFF]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F\\\\uDD00-\\\\uDDEF])*)\",\n                \"$WSegSpace\": \"[ \\\\u1680\\\\u2000-\\\\u2006\\\\u2008-\\\\u200A\\\\u205F\\\\u3000]\",\n                \"$ZWJ\": \"\\\\u200D\"\n            }\n        }\n    },\n    \"ru\": {\n        \"sentence\": {\n            \"segmentRules\": {},\n            \"suppressions\": [\n                \"руб.\",\n                \"янв.\",\n                \"до н. э.\",\n                \"сент.\",\n                \"тел.\",\n                \"дек.\",\n                \"февр.\",\n                \"нояб.\",\n                \"апр.\",\n                \"н. э.\",\n                \"окт.\",\n                \"тыс.\",\n                \"авг.\",\n                \"проф.\",\n                \"н.э.\",\n                \"кв.\",\n                \"ул.\",\n                \"отд.\"\n            ],\n            \"variables\": {}\n        }\n    },\n    \"zh\": {}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSurrogate = exports.replaceVariables = void 0;\nvar replaceVariables = function (variables, input) {\n    var findVarRegex = /\\$[A-Za-z0-9_]+/gm;\n    return input.replaceAll(findVarRegex, function (match) {\n        if (!(match in variables)) {\n            throw new Error(\"No such variable \".concat(match));\n        }\n        return variables[match];\n    });\n};\nexports.replaceVariables = replaceVariables;\nvar isSurrogate = function (str, pos) {\n    return (0xd800 <= str.charCodeAt(pos - 1) &&\n        str.charCodeAt(pos - 1) <= 0xdbff &&\n        0xdc00 <= str.charCodeAt(pos) &&\n        str.charCodeAt(pos) <= 0xdfff);\n};\nexports.isSurrogate = isSurrogate;\n// alternative surrogate check mimicking the java implementation\n// const TRAIL_SURROGATE_BITMASK = 0xfffffc00\n// const TRAIL_SURROGATE_BITS = 0xdc00\n// const LEAD_SURROGATE_BITMASK = 0xfffffc00\n// const LEAD_SURROGATE_BITS = 0xd800\n// const isSurrogate = (text: string, position: number) => {\n//   if (\n//     (text.charCodeAt(position - 1) & LEAD_SURROGATE_BITMASK) ==\n//       LEAD_SURROGATE_BITS &&\n//     (text.charCodeAt(position) & TRAIL_SURROGATE_BITMASK) ==\n//       TRAIL_SURROGATE_BITS\n//   ) {\n//     return true\n//   } else {\n//     return false\n//   }\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Segmenter = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\nvar cldr_segmentation_rules_generated_1 = require(\"./cldr-segmentation-rules.generated\");\nvar segmentation_utils_1 = require(\"./segmentation-utils\");\n/**\n * Adds $ to before rules and ^ to after rules for strictness\n * Replaces variables\n * Initializes the RegExp\n *\n * @param rule raw rule string from cldr-segmentation-rules.generated\n * @param variables\n * @param after appends ^ if true and $ if false\n * @returns\n */\nvar generateRuleRegex = function (rule, variables, after) {\n    return new RegExp(\"\".concat(after ? '^' : '').concat((0, segmentation_utils_1.replaceVariables)(variables, rule)).concat(after ? '' : '$'));\n};\nvar prepareLocaleSegmentationRules = function (segmentationTypeValue) {\n    var preparedRules = {};\n    for (var _i = 0, _a = Object.keys(segmentationTypeValue.segmentRules); _i < _a.length; _i++) {\n        var ruleNr = _a[_i];\n        var ruleValue = segmentationTypeValue.segmentRules[ruleNr];\n        var preparedRule = {\n            breaks: ruleValue.breaks,\n        };\n        if ('before' in ruleValue && ruleValue.before) {\n            preparedRule.before = generateRuleRegex(ruleValue.before, segmentationTypeValue.variables, false);\n        }\n        if ('after' in ruleValue && ruleValue.after) {\n            preparedRule.after = generateRuleRegex(ruleValue.after, segmentationTypeValue.variables, true);\n        }\n        preparedRules[ruleNr] = preparedRule;\n    }\n    return preparedRules;\n};\nvar breaksAtResult = function (breaks, matchingRule) { return ({\n    breaks: breaks,\n    matchingRule: matchingRule,\n}); };\nvar Segmenter = /** @class */ (function () {\n    function Segmenter(locales, options) {\n        var _newTarget = this.constructor;\n        if (_newTarget === undefined) {\n            throw TypeError(\"Constructor Intl.Segmenter requires 'new'\");\n        }\n        var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);\n        options = (0, ecma402_abstract_1.GetOptionsObject)(options);\n        var opt = Object.create(null);\n        var matcher = (0, ecma402_abstract_1.GetOption)(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n        opt.localeMatcher = matcher;\n        var granularity = (0, ecma402_abstract_1.GetOption)(options, 'granularity', 'string', ['word', 'sentence', 'grapheme'], 'grapheme');\n        setSlot(this, 'granularity', granularity);\n        //TODO: figure out correct availible locales\n        var r = (0, intl_localematcher_1.ResolveLocale)(Segmenter.availableLocales, //availible locales\n        requestedLocales, opt, [], // there is no relevantExtensionKeys\n        {}, function () { return ''; } //use only root rules\n        );\n        setSlot(this, 'locale', r.locale);\n        //root rules based on granularity\n        this.mergedSegmentationTypeValue = cldr_segmentation_rules_generated_1.SegmentationRules.root[granularity];\n        //merge root rules with locale ones if locale is specified\n        if (r.locale.length) {\n            var localeOverrides = cldr_segmentation_rules_generated_1.SegmentationRules[r.locale];\n            if (granularity in localeOverrides) {\n                var localeSegmentationTypeValue = localeOverrides[granularity];\n                this.mergedSegmentationTypeValue.variables = tslib_1.__assign(tslib_1.__assign({}, this.mergedSegmentationTypeValue.variables), localeSegmentationTypeValue.variables);\n                this.mergedSegmentationTypeValue.segmentRules = tslib_1.__assign(tslib_1.__assign({}, this.mergedSegmentationTypeValue.segmentRules), localeSegmentationTypeValue.segmentRules);\n                this.mergedSegmentationTypeValue.suppressions = tslib_1.__spreadArray(tslib_1.__spreadArray([], this.mergedSegmentationTypeValue.suppressions, true), localeSegmentationTypeValue.suppressions, true);\n            }\n        }\n        //prepare rules\n        this.rules = prepareLocaleSegmentationRules(this.mergedSegmentationTypeValue);\n        //order rule keys\n        this.ruleSortedKeys = Object.keys(this.rules).sort(function (a, b) { return Number(a) - Number(b); });\n    }\n    Segmenter.prototype.breaksAt = function (position, input) {\n        var ruleSortedKeys = this.ruleSortedKeys;\n        var rules = this.rules;\n        var mergedSegmentationTypeValue = this.mergedSegmentationTypeValue;\n        //artificial rule 0.2\n        if (position === 0) {\n            return breaksAtResult(true, '0.2');\n        }\n        if (position === input.length) {\n            //rule 0.3\n            return breaksAtResult(true, '0.3');\n        }\n        //artificial rule 0.1: js specific, due to es5 regex not being unicode aware\n        //number 0.1 chosen to mimic java implementation, but needs to execute after 0.2 and 0.3 to be inside the string bounds\n        if ((0, segmentation_utils_1.isSurrogate)(input, position)) {\n            return breaksAtResult(false, '0.1');\n        }\n        var stringBeforeBreak = input.substring(0, position);\n        var stringAfterBreak = input.substring(position);\n        //artificial rule 0.4: handle suppressions\n        if ('suppressions' in mergedSegmentationTypeValue) {\n            for (var _i = 0, _a = mergedSegmentationTypeValue.suppressions; _i < _a.length; _i++) {\n                var suppressions = _a[_i];\n                if (stringBeforeBreak.trim().endsWith(suppressions)) {\n                    return breaksAtResult(false, '0.4');\n                }\n            }\n        }\n        // loop through rules and find a match\n        for (var _b = 0, ruleSortedKeys_1 = ruleSortedKeys; _b < ruleSortedKeys_1.length; _b++) {\n            var ruleKey = ruleSortedKeys_1[_b];\n            var _c = rules[ruleKey], before = _c.before, after = _c.after, breaks = _c.breaks;\n            // for debugging\n            // if (ruleKey === '16' && position === 4) {\n            //   console.log({before, after, stringBeforeBreak, stringAfterBreak})\n            // }\n            if (before) {\n                if (!before.test(stringBeforeBreak)) {\n                    //didn't match the before part, therfore skipping\n                    continue;\n                }\n            }\n            if (after) {\n                if (!after.test(stringAfterBreak)) {\n                    //didn't match the after part, therfore skipping\n                    continue;\n                }\n            }\n            return breaksAtResult(breaks, ruleKey);\n        }\n        //artificial rule 999: if no rule matched is Any ÷ Any so return true\n        return breaksAtResult(true, '999');\n    };\n    Segmenter.prototype.segment = function (input) {\n        checkReceiver(this, 'segment');\n        return new SegmentIterator(this, input);\n    };\n    Segmenter.prototype.resolvedOptions = function () {\n        checkReceiver(this, 'resolvedOptions');\n        return tslib_1.__assign({}, (0, ecma402_abstract_1.getMultiInternalSlots)(__INTERNAL_SLOT_MAP__, this, 'locale', 'granularity'));\n    };\n    Segmenter.supportedLocalesOf = function (locales, options) {\n        return (0, ecma402_abstract_1.SupportedLocales)(Segmenter.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);\n    };\n    Segmenter.availableLocales = new Set(Object.keys(cldr_segmentation_rules_generated_1.SegmentationRules).filter(function (key) { return key !== 'root'; }));\n    Segmenter.polyfilled = true;\n    return Segmenter;\n}());\nexports.Segmenter = Segmenter;\nvar createSegmentDataObject = function (segmenter, segment, index, input, matchingRule) {\n    var returnValue = {\n        segment: segment,\n        index: index,\n        input: input,\n    };\n    if (getSlot(segmenter, 'granularity') === 'word') {\n        returnValue.isWordLike = matchingRule !== '3.1' && matchingRule !== '3.2';\n    }\n    return returnValue;\n};\nvar SegmentIterator = /** @class */ (function () {\n    function SegmentIterator(segmenter, input) {\n        this.segmenter = segmenter;\n        this.lastSegmentIndex = 0;\n        if (typeof input == 'symbol') {\n            throw TypeError(\"Input must not be a symbol\");\n        }\n        this.input = String(input);\n    }\n    SegmentIterator.prototype[Symbol.iterator] = function () {\n        return new SegmentIterator(this.segmenter, this.input);\n    };\n    SegmentIterator.prototype.next = function () {\n        //using only the relevant bit of the string\n        var checkString = this.input.substring(this.lastSegmentIndex);\n        //loop from the start of the checkString, until exactly length (breaksAt returns break at pos=== lenght)\n        for (var position = 1; position <= checkString.length; position++) {\n            var _a = this.segmenter.breaksAt(position, checkString), breaks = _a.breaks, matchingRule = _a.matchingRule;\n            if (breaks) {\n                var segment = checkString.substring(0, position);\n                var index = this.lastSegmentIndex;\n                this.lastSegmentIndex += position;\n                return {\n                    done: false,\n                    value: createSegmentDataObject(this.segmenter, segment, index, this.input, matchingRule),\n                };\n            }\n        }\n        //no segment was found by the loop, therefore the segmentation is done\n        return { done: true, value: undefined };\n    };\n    SegmentIterator.prototype.containing = function (positionInput) {\n        if (typeof positionInput === 'bigint') {\n            throw TypeError('Index must not be a BigInt');\n        }\n        var position = Number(positionInput);\n        //https://tc39.es/ecma262/#sec-tointegerorinfinity\n        // 2. If number is NaN, +0𝔽, or -0𝔽, return 0.\n        if (isNaN(position) || !position) {\n            position = 0;\n        }\n        // 5. Let integer be floor(abs(ℝ(number))).\n        // 6. If number < -0𝔽, set integer to -integer.\n        position = Math.floor(Math.abs(position)) * (position < 0 ? -1 : 1);\n        if (position < 0 || position >= this.input.length) {\n            return undefined;\n        }\n        //find previous break point\n        var previousBreakPoint = 0;\n        if (position === 0) {\n            previousBreakPoint = 0;\n        }\n        else {\n            var checkString_1 = this.input;\n            for (var cursor = position; cursor >= 0; cursor--) {\n                var breaks = this.segmenter.breaksAt(cursor, checkString_1).breaks;\n                if (breaks) {\n                    previousBreakPoint = cursor;\n                    break;\n                }\n            }\n        }\n        var checkString = this.input.substring(previousBreakPoint);\n        //find next break point\n        for (var cursor = 1; cursor <= checkString.length; cursor++) {\n            var _a = this.segmenter.breaksAt(cursor, checkString), breaks = _a.breaks, matchingRule = _a.matchingRule;\n            if (breaks) {\n                var segment = checkString.substring(0, cursor);\n                return createSegmentDataObject(this.segmenter, segment, previousBreakPoint, this.input, matchingRule);\n            }\n        }\n    };\n    return SegmentIterator;\n}());\nvar __INTERNAL_SLOT_MAP__ = new WeakMap();\nfunction getSlot(instance, key) {\n    return (0, ecma402_abstract_1.getInternalSlot)(__INTERNAL_SLOT_MAP__, instance, key);\n}\nfunction setSlot(instance, key, value) {\n    (0, ecma402_abstract_1.setInternalSlot)(__INTERNAL_SLOT_MAP__, instance, key, value);\n}\nfunction checkReceiver(receiver, methodName) {\n    if (!(receiver instanceof Segmenter)) {\n        throw TypeError(\"Method Intl.Segmenter.prototype.\".concat(methodName, \" called on incompatible receiver\"));\n    }\n}\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(Segmenter.prototype, Symbol.toStringTag, {\n            value: 'Intl.Segmenter',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    //github.com/tc39/test262/blob/main/test/intl402/Segmenter/constructor/length.js\n    https: Object.defineProperty(Segmenter.prototype.constructor, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/main/test/intl402/Segmenter/constructor/supportedLocalesOf/length.js\n    Object.defineProperty(Segmenter.supportedLocalesOf, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (e) {\n    // Meta fix so we're test262-compliant, not important\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar segmenter_1 = require(\"./src/segmenter\");\nObject.defineProperty(Intl, 'Segmenter', {\n    value: segmenter_1.Segmenter,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n});\n"],"names":["CanonicalizeLocaleList","locales","CanonicalizeTimeZoneName","tz","_a","zoneNames","uppercaseLinks","uppercasedTz","uppercasedZones","all","z","ianaTimeZone","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","inexact","quadrant","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","MAX_SAFE_INTEGER","LN10_PRECISION","PI_PRECISION","P","x","finalise","min","max","k","Ctor","y","i","j","xdL","ydL","xd","yd","xs","ys","pr","rm","cosine","toLessThanHalfPi","e","m","n","r","rep","s","sd","t","t3","t3plusx","digitsToString","divide","w","d","len","one","tinyPow","taylorSeries","cosh2_x","d8","sinh2_x","d5","d16","d20","getPi","wpr","xsd","halfPi","px","x2","base","isBase10","denominator","inf","num","arg","guard","naturalLogarithm","getLn10","checkRoundingDigits","xe","xLTy","getBase10Exponent","q","naturalExponential","carry","getPrecision","sine","rL","toStringBinary","dp","checkInt32","str","finiteToString","maxD","d0","d1","d2","n0","n1","yn","intPow","ws","indexOfLastWord","getZeroString","repeating","di","rd","convertBase","baseIn","baseOut","arr","arrL","strL","cos2x","multiplyInteger","temp","compare","a","b","aL","bL","subtract","cmp","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","pow","sum","c","c0","numerator","x1","parseDecimal","parseOther","divisor","isFloat","p","Decimal","sin2_x","isHyperbolic","u","isNeg","pi","abs","acos","acosh","add","asin","asinh","atan","atanh","atan2","cbrt","ceil","clamp","config","obj","v","useDefaults","ps","cos","cosh","clone","isDecimalInstance","div","exp","floor","hypot","ln","log","log10","log2","mod","mul","random","round","sin","sinh","sqrt","sub","tan","tanh","trunc","TEN","ZERO","NEGATIVE_ZERO","memoize","fn","options","cache","cacheDefault","serializer","serializerDefault","strategy","strategyDefault","isPrimitive","value","monadic","cacheKey","computedValue","variadic","assemble","context","serialize","strategyVariadic","strategyMonadic","ObjectWithoutPrototypeCache","key","strategies","repeat","times","setInternalSlot","map","pl","field","slots","setMultiInternalSlots","props","_i","getInternalSlot","getMultiInternalSlots","fields","f","isLiteralPart","patternPart","defineProperty","target","name","createDataProperty","invariant","condition","message","Err","createMemoizedNumberFormat","__spreadArray","createMemoizedDateTimeFormat","createMemoizedPluralRules","createMemoizedLocale","createMemoizedListFormat","ToString","o","ToNumber","primValue","ToPrimitive","ToInteger","number","integer","TimeClip","time","ToObject","SameValue","ArrayCreate","HasOwnProperty","prop","Type","MS_PER_DAY","Day","WeekDay","DayFromYear","TimeFromYear","YearFromTime","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","DateFromTime","mft","HOURS_PER_DAY","MINUTES_PER_HOUR","SECONDS_PER_MINUTE","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","HourFromTime","MinFromTime","SecFromTime","IsCallable","OrdinaryHasInstance","C","O","internalSlots","BC","msFromTime","OrdinaryToPrimitive","hint","methodNames","methodNames_1","name_1","method","result","input","preferredType","exoticToPrim","CoerceOptionsToObject","DefaultNumberOption","inputVal","fallback","val","GetNumberOption","property","minimum","maximum","GetOption","opts","type","values","GetOptionsObject","GetStringOrBooleanOption","trueValue","falsyValue","valueBoolean","SANCTIONED_UNITS","removeUnitNamespace","unit","SIMPLE_UNITS","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsValidTimeZoneName","zoneNamesFromData","linkNames","linkName","toUpperCase","_","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","toLowerCase","IsWellFormedUnitIdentifier","units","ApplyUnsignedRoundingMode","r1","r2","unsignedRoundingMode","cardinality","PART_TYPES_TO_COLLAPSE","CollapseNumberRange","numberFormat","getInternalSlots","symbols","rangeSignRegex","rangeSignIndex","prefixSignParts","newResult","suffixSignParts","ComputeExponentForMagnitude","magnitude","notation","dataLocaleData","numberingSystem","thousands","compactDisplay","style","currencyDisplay","thresholdMap","decimal","thresholds","magnitudeKey","compactPattern","negativeMapping","positiveMapping","GetUnsignedRoundingMode","roundingMode","isNegative","ToRawFixedFn","findN1R1","roundingIncrement","nx","findN2R2","n2","ToRawFixed","minFraction","maxFraction","_b","xFinal","int","cut","findN1E1R1","maxN1","minN1","maxE1","currentE1","currentN1","currentR1","findN2E2R2","maxN2","minN2","minE2","currentE2","currentN2","currentR2","ToRawPrecision","minPrecision","maxPrecision","e1","e2","FormatNumericToString","intlObject","_x","roundingType","sResult","fResult","string","minInteger","forwardZeros","ComputeExponent","exponent","formatNumberResult","newMagnitude","CurrencyDigits","currencyDigitsData","S_UNICODE_REGEX","digitMapping","CARET_S_UNICODE_REGEX","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","data","defaultNumberingSystem","compactNumberPattern","getCompactDisplayPattern","nonNameCurrencyPart","byCurrencyDisplay","numberPattern","decimalData","getPatternForSign","currencyData","percentPattern","decimalNumberPattern","afterCurrency","beforeCurrency","numberPatternParts","numberParts","numberPatternParts_1","part","partitionNumberIntoParts","unitPattern","unitName","currencyNameData","selectPlural","unitPatternParts","unitPatternParts_1","unitDisplay","unitData","_c","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perPattern","denominatorPattern","_d","_e","interpolateMatch","useGrouping","digitReplacementTable","digit","decimalSepIndex","fraction","shouldUseGrouping","groupSepSymbol","groups","integerNumberPattern","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","decimalSepSymbol","exponentResult","pattern","zeroPattern","negativePattern","roundedNumber","byNumberingSystem","compactPluralRules","byCompactDisplay","compactPlaralRule","rules","FormatApproximately","approximatelySign","PartitionNumberPattern","signDisplay","FormatNumeric","parts","PartitionNumberRangePattern","xResult","yResult","appxResult","el","rangeSeparator","FormatNumericRange","FormatNumericRangeToParts","index","FormatNumericToParts","nf","implDetails","parts_1","VALID_ROUNDING_INCREMENTS","SetNumberFormatDigitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","roundingPriority","trailingZeroDisplay","hasSd","hasFd","needSd","needFd","SetNumberFormatUnitOptions","currencySign","InitializeNumberFormat","localeData","availableLocales","numberingSystemNames","getDefaultLocale","requestedLocales","opt","matcher","ResolveLocale","cDigits","defaultUseGrouping","PartitionPattern","beginIndex","endIndex","nextIndex","length","SupportedLocales","LookupSupportedLocales","MissingLocaleDataError","_super","__extends","_this","isMissingLocaleDataError","RangePatternType","ToIntlMathematicalValue","cldrSegmentationRules_generated","segmentationUtils","replaceVariables","variables","findVarRegex","match","isSurrogate","pos","segmenter","tslib_1","require$$0","ecma402_abstract_1","require$$1","intl_localematcher_1","require$$2","cldr_segmentation_rules_generated_1","require$$3","segmentation_utils_1","require$$4","generateRuleRegex","rule","after","prepareLocaleSegmentationRules","segmentationTypeValue","preparedRules","ruleNr","ruleValue","preparedRule","breaksAtResult","breaks","matchingRule","Segmenter","_newTarget","granularity","setSlot","localeOverrides","localeSegmentationTypeValue","position","ruleSortedKeys","mergedSegmentationTypeValue","stringBeforeBreak","stringAfterBreak","suppressions","ruleSortedKeys_1","ruleKey","before","checkReceiver","SegmentIterator","__INTERNAL_SLOT_MAP__","createSegmentDataObject","segment","returnValue","getSlot","checkString","positionInput","previousBreakPoint","checkString_1","cursor","instance","receiver","methodName","polyfillForce","segmenter_1"],"mappings":"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,IAAI4R,GAAkB,u8ECDlBC,GAAe,CACtB,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,QAAW,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,QAAW,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,QAAW,CACP,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,QAAW,CACP,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EACD,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACH,EACD,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,G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ACA,SACA,KACA,OACA,UACA,QACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,KACA,QACA,OACA,MACA,SACA,OACA,OACA,OACA,QACA,OACA,KACA,OACA,MACA,OACA,SACA,SACA,KACA,OACA,UACA,OACA,OACA,OACA,OACA,QACA,WACA,OACA,OACA,QACA,OACA,KACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,WACA,OACA,KACA,aACA,OACA,QACA,MACA,OACA,KACA,KACA,OACA,OACA,QACA,OACA,QACA,QACA,KACA,SACA,QACA,MACA,OACA,YACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,OACA,MACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,KACA,QACA,QACA,MACA,OACA,SACA,SACA,QACA,KACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,OACA,QACA,YACA,MACA,SACA,OACA,QACA,OACA,KACA,WACA,SACA,QACA,OACA,OACA,KACA,QACA,OACA,OACA,OACA,OACA,QACA,MACA,KACA,QACA,KACA,aACA,aACA,OACA,OACA,OACA,KACA,OACA,OACA,OACA,KACA,SACA,QACA,YACA,OACA,SACA,SACH,EACD,UAAa,CAAA,CACzB,CACK,EACD,GAAM,CACF,SAAY,CACR,aAAgB,CAAE,EAClB,aAAgB,CAAE,EAClB,UAAa,CACT,OAAU,s9KAC1B,CACA,CACK,EACD,GAAM,CACF,SAAY,CACR,aAAgB,CAAE,EAClB,aAAgB,CACZ,OACA,OACA,UACA,OACA,KACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,MACA,QACA,OACA,KACA,QACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,KACA,OACA,MACA,OACA,OACA,SACA,MACA,OACA,MACA,QACA,KACA,QACA,MACA,OACA,MACA,MACA,KACA,KACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,KACA,SACA,MACA,KACA,OACA,SACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,KACA,QACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,SACA,OACA,UACA,OACA,KACA,MACA,OACA,MACA,MACA,QACA,MACA,OACA,QACA,WACA,KACA,MACA,MACA,OACA,OACA,MACA,MACA,KACA,SACA,KACA,OACA,QACA,MACA,MACA,KACA,OACA,MACA,OACA,KACA,OACA,OACA,KACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,OACA,MACA,KACH,EACD,UAAa,CAAA,CACzB,CACK,EACD,GAAM,CACF,SAAY,CACR,aAAgB,CAAE,EAClB,aAAgB,CACZ,QACA,SACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,OACA,SACA,QACA,UACA,OACA,OACA,SACA,MACA,OACA,QACA,MACA,SACA,MACA,QACA,OACA,OACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,OACA,MACA,SACA,QACA,OACA,QACA,OACA,MACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,SACA,OACA,OACA,QACA,OACA,QACA,QACA,MACA,SACA,OACA,MACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,MACA,KACA,QACA,MACA,QACA,QACA,QACA,QACA,KACA,OACA,SACA,OACA,QACA,MACA,OACA,SACA,OACA,OACA,KACA,KACA,OACA,OACA,UACA,MACA,QACA,SACA,OACA,SACA,QACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,QACA,SACA,OACA,QACA,OACA,OACA,OACA,UACA,QACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,UACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,KACA,OACA,MACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,QACA,SACA,MACA,OACA,MACA,QACA,OACA,MACH,EACD,UAAa,CAAA,CACzB,CACK,EACD,GAAM,CACF,SAAY,CACR,aAAgB,CAAE,EAClB,aAAgB,CACZ,OACA,UACA,UACA,KACA,OACA,UACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,KACA,OACA,QACA,MACA,SACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,MACA,SACA,WACA,UACA,OACA,KACA,OACA,OACA,aACA,QACA,OACA,OACA,QACA,WACA,OACA,QACA,UACA,OACA,QACA,OACA,KACA,OACA,OACA,OACA,KACA,UACA,OACA,SACA,QACA,OACA,OACA,SACA,OACA,UACA,OACA,OACA,KACA,SACA,QACA,YACA,KACA,MACA,YACA,QACA,aACH,EACD,UAAa,CAAA,CACzB,CACK,EACD,GAAM,CACF,SAAY,CACR,aAAgB,CAAE,EAClB,aAAgB,CACZ,OACA,OACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,OACA,MACA,OACA,SACA,MACA,QACA,OACA,OACA,MACA,OACA,MACA,KACA,OACA,aACA,OACA,OACA,OACA,OACA,KACA,SACA,OACA,OACA,SACA,OACA,IACH,EACD,UAAa,CAAA,CACzB,CACK,EACD,GAAM,CACF,KAAQ,CACJ,aAAgB,CACZ,OAAQ,CACJ,MAAS,YACT,OAAU,YACV,OAAU,EACb,EACD,OAAQ,CACJ,MAAS,eACT,OAAU,eACV,OAAU,EAC9B,CACa,EACD,aAAgB,CAAE,EAClB,UAAa,CACT,UAAa,kiJACb,aAAgB,slKAChC,CACA,CACK,EACD,GAAM,CACF,SAAY,CACR,aAAgB,CAAE,EAClB,aAAgB,CACZ,UACA,OACA,SACA,OACA,OACA,OACA,UACA,QACA,UACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,OACA,MACA,OACA,QACA,OACA,MACA,QACA,OACA,KACA,UACA,MACA,KACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,KACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,UACA,OACA,QACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,OACA,SACA,SACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,KACA,OACA,WACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,SACA,QACA,SACA,WACA,QACA,MACA,QACA,OACA,MACA,OACA,OACA,OACA,QACA,MACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,SACA,OACA,OACA,KACA,OACA,OACA,SACA,OACA,QACA,OACA,MACA,QACA,MACA,WACA,QACA,SACA,KACA,QACA,OACA,OACA,SACA,MACA,MACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,QACA,OACA,OACA,SACA,QACA,OACA,OACA,OACA,MACA,OACA,OACA,UACA,OACA,OACA,QACA,aACA,QACA,OACH,EACD,UAAa,CAAA,CACzB,CACK,EACD,KAAQ,CACJ,SAAY,CACR,aAAgB,CACZ,GAAM,CACF,MAAS,WACT,OAAU,uBACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,MACT,OAAU,gBACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,MACT,OAAU,iCACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,MACT,OAAU,MACV,OAAU,EACb,EACD,EAAK,CACD,OAAU,qBACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,qBACT,OAAU,EACb,EACD,EAAK,CACD,MAAS,mBACT,OAAU,KACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,UACT,OAAU,WACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,KACT,OAAU,YACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,iBACT,OAAU,EACb,EACD,MAAO,CACH,MAAS,eACT,OAAU,EACb,EACD,MAAO,CACH,OAAU,WACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,oBACT,OAAU,yDACV,OAAU,EAC9B,CACa,EACD,aAAgB,CAAE,EAClB,UAAa,CACT,IAAO,MACP,gBAAmB,+CACnB,wBAA2B,w8BAC3B,SAAY,+SACZ,WAAc,mmJACd,SAAY,g6BACZ,QAAW,mmJACX,GAAM,mCACN,IAAO,MACP,IAAO,8uFACP,KAAQ,s2LACR,kBAAqB,8VACrB,SAAY,qLACZ,IAAO,+BACP,aAAgB,yyDAChB,GAAM,mCACN,GAAM,uEACN,KAAQ,SACxB,CACS,EACD,SAAY,CACR,aAAgB,CACZ,GAAM,CACF,MAAS,iBACT,OAAU,qBACV,OAAU,EACb,EACD,GAAM,CACF,OAAU,8BACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,MACT,OAAU,MACV,OAAU,EACb,EACD,EAAK,CACD,OAAU,WACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,sBACT,OAAU,EACb,EACD,EAAK,CACD,MAAS,WACT,OAAU,SACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,SACT,OAAU,wBACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,uBACT,OAAU,oBACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,uBACT,OAAU,qBACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,wBACT,OAAU,iBACV,OAAU,EACb,EACD,IAAO,CACH,MAAS,OACT,OAAU,EAC9B,CACa,EACD,aAAgB,CAAE,EAClB,UAAa,CACT,OAAU,w8IACV,KAAQ,uJACR,IAAO,MACP,OAAU,88JACV,QAAW,40IACX,IAAO,26IACP,QAAW,qNACX,IAAO,MACP,OAAU,2/TACV,cAAiB,0zTACjB,SAAY,8pLACZ,SAAY,qtYACZ,SAAY,kCACZ,QAAW,u5TACX,WAAc,qnJACd,OAAU,+8KACV,KAAQ,wBACR,IAAO,4+IACP,OAAU,kyTAC1B,CACS,EACD,KAAQ,CACJ,aAAgB,CACZ,GAAM,CACF,MAAS,YACT,OAAU,WACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,WACT,OAAU,gCACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,gCACT,OAAU,WACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,YACT,OAAU,YACV,OAAU,EACb,EACD,OAAQ,CACJ,MAAS,gBACT,OAAU,+CACV,OAAU,EACb,EACD,OAAQ,CACJ,MAAS,iCACT,OAAU,gBACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,MACT,OAAU,gBACV,OAAU,EACb,EACD,GAAM,CACF,MAAS,MACT,OAAU,6qIACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,MACT,OAAU,MACV,OAAU,EACb,EACD,MAAO,CACH,OAAU,qBACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,qBACT,OAAU,EACb,EACD,MAAO,CACH,MAAS,WACT,OAAU,OACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,aACT,OAAU,aACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,2BACT,OAAU,aACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,YACT,OAAU,YACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,oCACT,OAAU,YACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,YACT,OAAU,oCACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,gBACT,OAAU,iBACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,8BACT,OAAU,iBACV,OAAU,EACb,EACD,MAAO,CACH,MAAS,iBACT,OAAU,8BACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,WACT,OAAU,WACV,OAAU,EACb,EACD,EAAK,CACD,MAAS,WACT,OAAU,YACV,OAAU,EA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}