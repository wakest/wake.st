{"version":3,"mappings":"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","names":["Combobox","input","list","tabInsertsSuggestions","defaultFirstOption","event","keyboardBindings","trackComposition","commitWithElement","_a","visible","indexDiff","focusEl","els","focusIndex","indexOfItem","newIndex","target","el","scrollTo","combobox","commit","fireCommitEvent","container","inViewport","element","scrollTop","containerBottom","top","bottom","boundary","query","text","key","cursor","multiWord","lookBackIndex","lastMatchPosition","keyIndex","pre","InputStyleCloneUpdateEvent","CloneRegistry","InputStyleClone","#styleObserver","#updateStyles","#resizeObserver","#requestUpdateLayout","#inputRef","#container","#cloneElement","clone","#updateText","#onDocumentScrollOrResize","#onInput","#input","#usingInput","fn","#xOffset","#yOffset","#updateLayout","inputStyle","inputRect","cloneRect","#isLayoutUpdating","prop","propertiesToCopy","InputRange","#inputElement","#startOffset","#endOffset","startOffset","endOffset","selectionStart","selectionEnd","offset","#clampOffset","toStart","#createCloneRange","#styleClone","range","textNode","states","TextExpander","expander","match","menu","_b","position","caretRect","targetPosition","currentPosition","delta","currentStyle","item","beginning","remaining","detail","suffix","value","found","providers","provide","result","changeEvent","x","TextExpanderElement","keysAttr","keys","multiWordAttr","globalMultiWord","state","ansiRegex","onlyFirst","pattern","regex","stripAnsi","string","segmenter","stringLength","countAnsiEscapeCodes","length","_","poweredByGiphyURL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","import","supportedLanguagesMap","supportedLanguages","reduce","acc","l","code","common","native","expiryOptions","i18nDuration","expirySeconds","Object","oneDay","expiresInFromExpiresAt","expiresAt","Date","getTime","now","find","s","document","createElement","role","className","windowMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","left","width","boundingClientRect","innerWidth","window","insetInlineStart","isRTL","style","observe","DEFAULT_LANG","localeMatch","Intl","DateTimeFormat","resolvedOptions","locale","navigator","languages","map","urlRegexObj","RegExp","urlRegex","source","flags","usernameRegex","urlPlaceholder","countableText","inputText","replace","USERNAME_RE","MENTION_RE","HASHTAG_RE","SHORTCODE_RE_FRAGMENT","SCAN_RE","Segmenter","escapeHTML","highlightText","maxCharacters","Infinity","composerCharacterCount","withinLimitHTML","exceedLimitHTML","htmlSegments","segment","index","RTF","mem","RelativeTimeFormat","undefined","LF","ListFormat","CUSTOM_EMOJIS_COUNT","ADD_LABELS","camera","id","media","customEmoji","gif","poll","scheduledPost","Compose","onClose","replyToStatus","editStatus","draftStatus","standalone","hasOpener","i18n","t","_useLingui","rtf","lf","console","masto","instance","uiState","setUIState","useState","UID","uid","log","currentAccount","currentAccountInfo","maxMediaAttachments","charactersReservedPerUrl","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","descriptionLimit","maxExpiration","maxOptions","maxCharactersPerOption","minExpiration","textareaRef","useRef","supportedImagesVideosTypes","spoilerTextRef","store","prevLanguage","language","sensitive","setMediaAttachments","setLanguage","prefs","oninputTextarea","scheduledAt","getPreferences","focusTextarea","dispatchEvent","setTimeout","spoilerText","useEffect","visibility2","language2","sensitive2","visibility","current","m","allMentions","Set","setSensitive","poll2","mediaAttachments","options","expiresIn","statusSource","dataset","mediaAttachments2","setVisibility","e","composablePoll","scheduledAt2","status","o","canClose","_t","hasValue","hasMediaAttachments","isSelf","hasOnlyAcct","confirmClose","hasIDMediaAttachments","beforeUnloadCopy","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","supportsCloseWatcher","useHotkeys","yes","escDownRef","addEventListener","modals","hasOnlyComposer","count","draftKey","enabled","backgroundDraft","ignoreEventWhen","hasModal","useCloseWatcher","prevBackgroundDraft","db","ns","useInterval","saveUnsavedDraft","username","acct","unsupportedFiles","i2","items","_i18n","drafts","set","updatedAt","f","debug","error","files","clipboardData","max","file","alert","mediaFiles","allowedFiles","1","2","handleDragover","handleItems","setShowMentionPicker","showEmoji2Picker","showGIFPicker","useMemo","contentTranslationHideLanguages","autoDetectedLanguages","topLanguages","restLanguages","commonB","type","size","url","codeA","commonA","codeB","onMinimize","gifPickerDisabled","onPollButtonClick","setPoll","removeEventListener","addSubToolbarRef","setShowAddButton","useResizeObserver","showMentionPicker","scrollWidth","settings","scheduledAtButtonDisabled","onScheduledAtClick","sort","MIN_SCHEDULED_AT","replyToStatusMonthsAgo","_jsx","children","class","confirmText","passData","opener","composerState","Icon","_jsxs","showAddButton","openCompose","avatarStatic","onClick","Status","_Trans","__STATES__","formRef","formData","components","option","description","params2","res","attachment","results","mediaPromises","hasNoDescriptions","params","removeNullUndefined","allSettled","newStatus","i","supports","media_attributes","in_reply_to_id","saveStatus","visibilityIconsMap","opacity","pointerEvents","checked","disabled","onChange","icon","title","limit","action","setShowEmoji2Picker","setAutoDetectedLanguages","Textarea","ref","fileID","newAttachments","attachments","required","performSearch","q","onTrigger","defaultSearchTerm","onDescriptionChange","setScheduledAt","onRemove","ScheduledAtField","getLocalTimezoneName","Menu2","onInput","newPoll","supportsCameraCapture","MenuItem","CameraCaptureInput","0","body","open","showPollButton","pollButtonDisabled","showScheduledAt","FilePickerInput","composerGIFPicker","setShowGIFPicker","_Fragment","alt","Loader","topSupportedLanguages","commonText","localeCode2Text","MentionModal","socialAddress","textarea","textBeforeMention","spaceBeforeMention","textAfterMention","newText","spaceAfterMention","emojiShortcode","textBeforeEmoji","spaceBeforeEmoji","textAfterEmoji","Modal","spaceAfterEmoji","onSelect","alt_text","theToast","showToast","Event","hidden","mediaFile","blob","fetch","newMediaAttachments","accept","Array","offsetHeight","scrollHeight","clientHeight","height","visibleEmojis","createObjectURL","langs2","lang","detectAll","langs","forwardRef","props","_t2","setText","r","searcherRef","textExpanderRef","_getCustomEmojis","emojis","v1","searcher","Fuse","handleCommited","handleActivate","handleDeactivate","handleChange","getCustomEmojis","textExpanderTextRef","text2","cacheKeyArg","detectLangs","langDetector","html","shortcode","emoji","encodeHTML","textareaProps","hasTextExpanderRef","history","displayNameWithEmoji","emojifyText","displayName","search","total","cur","name","shortenNumber","Promise","resolve","then","v","more","handleValue","matched","slowHighlightPerf","composeHighlightRef","useThrottledCallback","throttleHighlightText","start","end","useDebouncedCallback","dom","resizeObserver","hasTextExpander","lastLine","bullet","postSpaces","anything","number","preSpaces","pos","debouncedAutoDetectLanguage","cloneNode","mark","autoResizeTextarea","rows","cols","onKeyDown","charCount","ctrlKey","leftChars","setRangeText","setSelectionRange","scaleDimension","matrix","matrixLimit","scalingFactor","newHeight","newWidth","MediaAttachment","supportsEdit","onScroll","checkMaxError","configuration","maxError","setMaxError","snapStates","useSnapshot","setImageMatrix","imageMatrix","videoMatrix","debouncedOnDescriptionChange","timer","details","_t3","setVideoMatrix","toastRef","setDescription","showModal","imageSizeLimit2","descTextarea","prettyBytes","videoSize","videoSizeLimit2","videoMatrixLimit2","videoMatrix2","maxErrorToast","maxErrorText","err","imageSize","suffixType","naturalWidth","naturalHeight","3","videoWidth","videoHeight","values","setShowModal","src","onLoad","onLoadedMetadata","subtype","response","zIndex","menuButton","append","Poll","_t4","multiple","label","splice","str","char","obj","push","api","accounts","setAccounts","setRelationshipsMap","selectedIndex","setSelectedIndex","loadRelationships","accounts2","term","debouncedLoadAccounts","loadAccounts","inputRef","filterShortcodes","searchTerm","aLower","a","bLower","b","aContains","bContains","bothStartWith","slice","selectAccount","account","selectedAccount","listRef","selectedItem","relationshipsMap","relationships","_t5","enableOnFormTags","relationship","shiftKey","onSubmit","_t6","customEmojisList","customEmojis","setCustomEmojis","recentlyUsedCustomEmojis","AccountBlock","emojisCat","othersCat","scrollableRef","matches","setMatches","onFind","onSelectEmoji","useCallback","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","emoji2","customEmojisCatList","category","queueMicrotask","CustomEmojisList","memo","setMax","CustomEmojiButton","showMore","showCode","parent","selfRect","rect","targetClassList","addEdges","GIFS_PER_PAGE","GIFPickerModal","_t7","setResults","fetchGIFs","qRef","closest","currentTarget","remove","debouncedOnInput","onPointerEnter","onFocus","staticUrl","currentOffset","images","fixed_height_small","fixed_height_downsampled","fixed_height","theImage","webp","urlObj","strippedURL","strippedWebP","preventDefault","original","theURL","mp4","url2","strippedURL2","webpObj","parse"],"ignoreList":[0,1,2,3,4],"sources":["../../node_modules/@github/combobox-nav/dist/index.js","../../node_modules/@github/text-expander-element/dist/index.js","../../node_modules/ansi-regex/index.js","../../node_modules/strip-ansi/index.js","../../node_modules/string-length/index.js","../../src/assets/powered-by-giphy.svg","../../src/components/compose.jsx"],"sourcesContent":["export default class Combobox {\n    constructor(input, list, { tabInsertsSuggestions, defaultFirstOption } = {}) {\n        this.input = input;\n        this.list = list;\n        this.tabInsertsSuggestions = tabInsertsSuggestions !== null && tabInsertsSuggestions !== void 0 ? tabInsertsSuggestions : true;\n        this.defaultFirstOption = defaultFirstOption !== null && defaultFirstOption !== void 0 ? defaultFirstOption : false;\n        this.isComposing = false;\n        if (!list.id) {\n            list.id = `combobox-${Math.random().toString().slice(2, 6)}`;\n        }\n        this.ctrlBindings = !!navigator.userAgent.match(/Macintosh/);\n        this.keyboardEventHandler = event => keyboardBindings(event, this);\n        this.compositionEventHandler = event => trackComposition(event, this);\n        this.inputHandler = this.clearSelection.bind(this);\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-controls', list.id);\n        input.setAttribute('aria-expanded', 'false');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-haspopup', 'listbox');\n    }\n    destroy() {\n        this.clearSelection();\n        this.stop();\n        this.input.removeAttribute('role');\n        this.input.removeAttribute('aria-controls');\n        this.input.removeAttribute('aria-expanded');\n        this.input.removeAttribute('aria-autocomplete');\n        this.input.removeAttribute('aria-haspopup');\n    }\n    start() {\n        this.input.setAttribute('aria-expanded', 'true');\n        this.input.addEventListener('compositionstart', this.compositionEventHandler);\n        this.input.addEventListener('compositionend', this.compositionEventHandler);\n        this.input.addEventListener('input', this.inputHandler);\n        this.input.addEventListener('keydown', this.keyboardEventHandler);\n        this.list.addEventListener('click', commitWithElement);\n        this.indicateDefaultOption();\n    }\n    stop() {\n        this.clearSelection();\n        this.input.setAttribute('aria-expanded', 'false');\n        this.input.removeEventListener('compositionstart', this.compositionEventHandler);\n        this.input.removeEventListener('compositionend', this.compositionEventHandler);\n        this.input.removeEventListener('input', this.inputHandler);\n        this.input.removeEventListener('keydown', this.keyboardEventHandler);\n        this.list.removeEventListener('click', commitWithElement);\n    }\n    indicateDefaultOption() {\n        var _a;\n        if (this.defaultFirstOption) {\n            (_a = Array.from(this.list.querySelectorAll('[role=\"option\"]:not([aria-disabled=\"true\"])'))\n                .filter(visible)[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('data-combobox-option-default', 'true');\n        }\n    }\n    navigate(indexDiff = 1) {\n        const focusEl = Array.from(this.list.querySelectorAll('[aria-selected=\"true\"]')).filter(visible)[0];\n        const els = Array.from(this.list.querySelectorAll('[role=\"option\"]')).filter(visible);\n        const focusIndex = els.indexOf(focusEl);\n        if ((focusIndex === els.length - 1 && indexDiff === 1) || (focusIndex === 0 && indexDiff === -1)) {\n            this.clearSelection();\n            this.input.focus();\n            return;\n        }\n        let indexOfItem = indexDiff === 1 ? 0 : els.length - 1;\n        if (focusEl && focusIndex >= 0) {\n            const newIndex = focusIndex + indexDiff;\n            if (newIndex >= 0 && newIndex < els.length)\n                indexOfItem = newIndex;\n        }\n        const target = els[indexOfItem];\n        if (!target)\n            return;\n        for (const el of els) {\n            el.removeAttribute('data-combobox-option-default');\n            if (target === el) {\n                this.input.setAttribute('aria-activedescendant', target.id);\n                target.setAttribute('aria-selected', 'true');\n                scrollTo(this.list, target);\n            }\n            else {\n                el.removeAttribute('aria-selected');\n            }\n        }\n    }\n    clearSelection() {\n        this.input.removeAttribute('aria-activedescendant');\n        for (const el of this.list.querySelectorAll('[aria-selected=\"true\"]')) {\n            el.removeAttribute('aria-selected');\n        }\n        this.indicateDefaultOption();\n    }\n}\nfunction keyboardBindings(event, combobox) {\n    if (event.shiftKey || event.metaKey || event.altKey)\n        return;\n    if (!combobox.ctrlBindings && event.ctrlKey)\n        return;\n    if (combobox.isComposing)\n        return;\n    switch (event.key) {\n        case 'Enter':\n            if (commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Tab':\n            if (combobox.tabInsertsSuggestions && commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Escape':\n            combobox.clearSelection();\n            break;\n        case 'ArrowDown':\n            combobox.navigate(1);\n            event.preventDefault();\n            break;\n        case 'ArrowUp':\n            combobox.navigate(-1);\n            event.preventDefault();\n            break;\n        case 'n':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(1);\n                event.preventDefault();\n            }\n            break;\n        case 'p':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(-1);\n                event.preventDefault();\n            }\n            break;\n        default:\n            if (event.ctrlKey)\n                break;\n            combobox.clearSelection();\n    }\n}\nfunction commitWithElement(event) {\n    if (!(event.target instanceof Element))\n        return;\n    const target = event.target.closest('[role=\"option\"]');\n    if (!target)\n        return;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return;\n    fireCommitEvent(target);\n}\nfunction commit(input, list) {\n    const target = list.querySelector('[aria-selected=\"true\"], [data-combobox-option-default=\"true\"]');\n    if (!target)\n        return false;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return true;\n    target.click();\n    return true;\n}\nfunction fireCommitEvent(target) {\n    target.dispatchEvent(new CustomEvent('combobox-commit', { bubbles: true }));\n}\nfunction visible(el) {\n    return (!el.hidden &&\n        !(el instanceof HTMLInputElement && el.type === 'hidden') &&\n        (el.offsetWidth > 0 || el.offsetHeight > 0));\n}\nfunction trackComposition(event, combobox) {\n    combobox.isComposing = event.type === 'compositionstart';\n    const list = document.getElementById(combobox.input.getAttribute('aria-controls') || '');\n    if (!list)\n        return;\n    combobox.clearSelection();\n}\nfunction scrollTo(container, target) {\n    if (!inViewport(container, target)) {\n        container.scrollTop = target.offsetTop;\n    }\n}\nfunction inViewport(container, element) {\n    const scrollTop = container.scrollTop;\n    const containerBottom = scrollTop + container.clientHeight;\n    const top = element.offsetTop;\n    const bottom = top + element.clientHeight;\n    return top >= scrollTop && bottom <= containerBottom;\n}\n","import Combobox from '@github/combobox-nav';\n\nconst boundary = /\\s|\\(|\\[/;\nfunction query(text, key, cursor, { multiWord, lookBackIndex, lastMatchPosition } = {\n    multiWord: false,\n    lookBackIndex: 0,\n    lastMatchPosition: null\n}) {\n    let keyIndex = text.lastIndexOf(key, cursor - 1);\n    if (keyIndex === -1)\n        return;\n    if (keyIndex < lookBackIndex)\n        return;\n    if (multiWord) {\n        if (lastMatchPosition != null) {\n            if (lastMatchPosition === keyIndex)\n                return;\n            keyIndex = lastMatchPosition - key.length;\n        }\n        const charAfterKey = text[keyIndex + 1];\n        if (charAfterKey === ' ' && cursor >= keyIndex + key.length + 1)\n            return;\n        const newLineIndex = text.lastIndexOf('\\n', cursor - 1);\n        if (newLineIndex > keyIndex)\n            return;\n        const dotIndex = text.lastIndexOf('.', cursor - 1);\n        if (dotIndex > keyIndex)\n            return;\n    }\n    else {\n        const spaceIndex = text.lastIndexOf(' ', cursor - 1);\n        if (spaceIndex > keyIndex)\n            return;\n    }\n    const pre = text[keyIndex - 1];\n    if (pre && !boundary.test(pre))\n        return;\n    const queryString = text.substring(keyIndex + key.length, cursor);\n    return {\n        text: queryString,\n        position: keyIndex + key.length\n    };\n}\n\nclass InputStyleCloneUpdateEvent extends Event {\n    constructor() {\n        super(\"update\");\n    }\n}\nconst CloneRegistry = new WeakMap();\n/**\n * Creates an element that exactly matches an input pixel-for-pixel and automatically stays in sync with it. This\n * is a non-interactive overlay on to the input and can be used to affect the visual appearance of the input\n * without modifying its behavior. The clone element is hidden by default.\n *\n * This lower level API powers the `InputRange` but provides more advanced functionality including event updates.\n *\n * Emits `update` events whenever anything is recalculated: when the layout changes, when the user scrolls, when the\n * input is updated, etc. This event may be emitted more than once per change.\n *\n * @note There may be cases in which the clone cannot observe changes to the input and fails to automatically update.\n * For example, if the `value` property on the input is written to directly, no `input` event is emitted by the input\n * and the clone does not automatically update. In these cases, `forceUpdate` can be used to manually trigger an update.\n */\n// PRIOR ART: This approach was adapted from the following MIT-licensed sources:\n//  - primer/react (Copyright (c) 2018 GitHub, Inc.): https://github.com/primer/react/blob/a0db832302702b869aa22b0c4049ad9305ef631f/src/drafts/utils/character-coordinates.ts\n//  - component/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/component/textarea-caret-position/blob/b5db7a7e47dd149c2a66276183c69234e4dabe30/index.js\n//  - koddsson/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/koddsson/textarea-caret-position/blob/eba40ec8488eed4d77815f109af22e1d9c0751d3/index.js\nclass InputStyleClone extends EventTarget {\n    #styleObserver = new MutationObserver(() => this.#updateStyles());\n    #resizeObserver = new ResizeObserver(() => this.#requestUpdateLayout());\n    // This class is unique in that it will prevent itself from getting garbage collected because of the subscribed\n    // observers (if never detached). Because of this, we want to avoid preventing the existence of this class from also\n    // preventing the garbage collection of the associated input. This also allows us to automatically detach if the\n    // input gets collected.\n    #inputRef;\n    #container = document.createElement(\"div\");\n    #cloneElement = document.createElement(\"div\");\n    /**\n     * Get the clone for an input, reusing an existing one if available. This avoids creating unecessary clones, which\n     * have a performance cost due to their high-frequency event-based updates. Because these elements are shared, they\n     * should be mutated with caution. If you're planning to mutate the clone, consider constructing a new one instead.\n     *\n     * Upon initial creation the clone element will automatically be inserted into the DOM and begin observing the\n     * linked input.\n     * @param input The target input to clone.\n     */\n    static for(input) {\n        let clone = CloneRegistry.get(input);\n        if (!clone) {\n            clone = new InputStyleClone(input);\n            CloneRegistry.set(input, clone);\n        }\n        return clone;\n    }\n    /**\n     * Connect this instance to a target input element and insert this instance into the DOM in the correct location.\n     *\n     * NOTE: calling the static `for` method is usually preferable as it will reuse an existing clone if available.\n     * However, if reusing clones is problematic (ie, if the clone needs to be mutated), a clone can be constructed\n     * directly with `new InputStyleClone(target)`.\n     */\n    constructor(input) {\n        super();\n        this.#inputRef = new WeakRef(input);\n        // We want position:absolute so it doesn't take space in the layout, but that doesn't work with display:table-cell\n        // used in the HTMLInputElement approach. So we need a wrapper.\n        this.#container.style.position = \"absolute\";\n        this.#container.style.pointerEvents = \"none\";\n        this.#container.setAttribute(\"aria-hidden\", \"true\");\n        this.#container.appendChild(this.#cloneElement);\n        this.#cloneElement.style.pointerEvents = \"none\";\n        this.#cloneElement.style.userSelect = \"none\";\n        this.#cloneElement.style.overflow = \"hidden\";\n        this.#cloneElement.style.display = \"block\";\n        // Important not to use display:none which would not render the content at all\n        this.#cloneElement.style.visibility = \"hidden\";\n        if (input instanceof HTMLTextAreaElement) {\n            this.#cloneElement.style.whiteSpace = \"pre-wrap\";\n            this.#cloneElement.style.wordWrap = \"break-word\";\n        }\n        else {\n            this.#cloneElement.style.whiteSpace = \"nowrap\";\n            // text in single-line inputs is vertically centered\n            this.#cloneElement.style.display = \"table-cell\";\n            this.#cloneElement.style.verticalAlign = \"middle\";\n        }\n        input.after(this.#container);\n        this.#updateStyles();\n        this.#updateText();\n        this.#styleObserver.observe(input, {\n            attributeFilter: [\n                \"style\",\n                \"dir\", // users can right-click in some browsers to change the text direction dynamically\n            ],\n        });\n        this.#resizeObserver.observe(input);\n        document.addEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n        window.addEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n        // capture so this happens first, so other things can respond to `input` events after this data updates\n        input.addEventListener(\"input\", this.#onInput, { capture: true });\n    }\n    /** Get the clone element. */\n    get element() {\n        return this.#cloneElement;\n    }\n    /**\n     * Force a recalculation. Will emit an `update` event. This is typically not needed unless the input has changed in\n     * an unobservable way, eg by directly writing to the `value` property.\n     */\n    forceUpdate() {\n        this.#updateStyles();\n        this.#updateText();\n    }\n    disconnect() {\n        this.#container?.remove();\n        this.#styleObserver.disconnect();\n        this.#resizeObserver.disconnect();\n        document.removeEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n        window.removeEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n        // Can't use `usingInput` here since that could infinitely recurse\n        const input = this.#input;\n        if (input) {\n            input.removeEventListener(\"input\", this.#onInput, { capture: true });\n            CloneRegistry.delete(input);\n        }\n    }\n    // --- private ---\n    get #input() {\n        return this.#inputRef?.deref();\n    }\n    /** Perform `fn` using the `input` if it is still available. If not, clean up the clone instead. */\n    #usingInput(fn) {\n        const input = this.#input;\n        if (!input)\n            return this.disconnect();\n        return fn(input);\n    }\n    /** Current relative x-adjustment in pixels, executed via CSS transform. */\n    #xOffset = 0;\n    /** Current relative y-adjustment in pixels, executed via CSS transform. */\n    #yOffset = 0;\n    /**\n     * Update only geometric properties without recalculating styles. Typically call `#requestUpdateLayout` instead to\n     * only update once per animation frame.\n     */\n    #updateLayout() {\n        // This runs often, so keep it as fast as possible! Avoid all unecessary updates.\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            this.#cloneElement.style.height = inputStyle.height;\n            this.#cloneElement.style.width = inputStyle.width;\n            // Immediately re-adjust for browser inconsistencies in scrollbar handling, if necessary\n            if (input.clientHeight !== this.#cloneElement.clientHeight)\n                this.#cloneElement.style.height = `calc(${inputStyle.height} + ${input.clientHeight - this.#cloneElement.clientHeight}px)`;\n            if (input.clientWidth !== this.#cloneElement.clientWidth)\n                this.#cloneElement.style.width = `calc(${inputStyle.width} + ${input.clientWidth - this.#cloneElement.clientWidth}px)`;\n            // Position on top of the input\n            const inputRect = input.getBoundingClientRect();\n            const cloneRect = this.#cloneElement.getBoundingClientRect();\n            this.#xOffset = this.#xOffset + inputRect.left - cloneRect.left;\n            this.#yOffset = this.#yOffset + inputRect.top - cloneRect.top;\n            this.#cloneElement.style.transform = `translate(${this.#xOffset}px, ${this.#yOffset}px)`;\n            this.#cloneElement.scrollTop = input.scrollTop;\n            this.#cloneElement.scrollLeft = input.scrollLeft;\n            this.dispatchEvent(new InputStyleCloneUpdateEvent());\n        });\n    }\n    #isLayoutUpdating = false;\n    /** Request a layout update. Will only happen once per animation frame, to avoid unecessary updates. */\n    #requestUpdateLayout() {\n        if (this.#isLayoutUpdating)\n            return;\n        this.#isLayoutUpdating = true;\n        requestAnimationFrame(() => {\n            this.#updateLayout();\n            this.#isLayoutUpdating = false;\n        });\n    }\n    /** Update the styles of the clone based on the styles of the input, then request a layout update. */\n    #updateStyles() {\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            for (const prop of propertiesToCopy)\n                this.#cloneElement.style[prop] = inputStyle[prop];\n            this.#requestUpdateLayout();\n        });\n    }\n    /**\n     * Update the text content of the clone based on the text content of the input. Triggers a layout update in case the\n     * text update caused scrolling.\n     */\n    #updateText() {\n        this.#usingInput((input) => {\n            this.#cloneElement.textContent = input.value;\n            // This is often unecessary on a pure text update, but text updates could potentially cause layout updates like\n            // scrolling or resizing. And we run the update on _every frame_ when scrolling, so this isn't that expensive.\n            // We don't requestUpdateLayout here because this one should happen synchronously, so that clients can react\n            // within their own `input` event handlers.\n            this.#updateLayout();\n        });\n    }\n    #onInput = () => this.#updateText();\n    #onDocumentScrollOrResize = (event) => {\n        this.#usingInput((input) => {\n            if (event.target === document ||\n                event.target === window ||\n                (event.target instanceof Node && event.target.contains(input)))\n                this.#requestUpdateLayout();\n        });\n    };\n}\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nconst propertiesToCopy = [\n    // RTL / vertical writing modes support:\n    \"direction\",\n    \"writingMode\",\n    \"unicodeBidi\",\n    \"textOrientation\",\n    \"boxSizing\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderStyle\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    \"fontStyle\",\n    \"fontVariant\",\n    \"fontWeight\",\n    \"fontStretch\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"lineHeight\",\n    \"fontFamily\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textIndent\",\n    \"textDecoration\",\n    \"letterSpacing\",\n    \"wordSpacing\",\n    \"tabSize\",\n    \"MozTabSize\",\n];\n\nclass InputRange {\n    #inputElement;\n    #startOffset;\n    #endOffset;\n    /**\n     * Construct a new `InputRange`.\n     * @param element The target input element that contains the content for the range.\n     * @param startOffset The inclusive 0-based start index for the range. Will be adjusted to fit in the input contents.\n     * @param endOffset The exclusive 0-based end index for the range. Will be adjusted to fit in the input contents.\n     */\n    constructor(element, startOffset = 0, endOffset = startOffset) {\n        this.#inputElement = element;\n        this.#startOffset = startOffset;\n        this.#endOffset = endOffset;\n    }\n    /**\n     * Create a new range from the current user selection. If the input is not focused, the range will just be the start\n     * of the input (offsets `0` to `0`).\n     *\n     * This can be used to get the caret coordinates: if the resulting range is `collapsed`, the location of the\n     * `getBoundingClientRect` will be the location of the caret caret (note, however, that the width will be `0` in\n     * this case).\n     */\n    static fromSelection(input) {\n        const { selectionStart, selectionEnd } = input;\n        return new InputRange(input, selectionStart ?? undefined, selectionEnd ?? undefined);\n    }\n    /** Returns true if the start is equal to the end of this range. */\n    get collapsed() {\n        return this.startOffset === this.endOffset;\n    }\n    /** Always returns the containing input element. */\n    get commonAncestorContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get endContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get startContainer() {\n        return this.#inputElement;\n    }\n    get startOffset() {\n        return this.#startOffset;\n    }\n    get endOffset() {\n        return this.#endOffset;\n    }\n    /** Update the inclusive start offset. Will be adjusted to fit within the content size. */\n    setStartOffset(offset) {\n        this.#startOffset = this.#clampOffset(offset);\n    }\n    /** Update the exclusive end offset. Will be adjusted to fit within the content size. */\n    setEndOffset(offset) {\n        this.#endOffset = this.#clampOffset(offset);\n    }\n    /**\n     * Collapse this range to one side.\n     * @param toStart If `true`, will collapse to the start side. Otherwise, will collapse to the end.\n     */\n    collapse(toStart = false) {\n        if (toStart)\n            this.setEndOffset(this.startOffset);\n        else\n            this.setStartOffset(this.endOffset);\n    }\n    /** Returns a `DocumentFragment` containing a new `Text` node containing the content in the range. */\n    cloneContents() {\n        return this.#createCloneRange().cloneContents();\n    }\n    /** Create a copy of this range. */\n    cloneRange() {\n        return new InputRange(this.#inputElement, this.startOffset, this.endOffset);\n    }\n    /**\n     * Obtain one rect that contains the entire contents of the range. If the range spans multiple lines, this box will\n     * contain all pieces of the range but may also contain some space outside the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getBoundingClientRect() {\n        return this.#createCloneRange().getBoundingClientRect();\n    }\n    /**\n     * Obtain the rects that contain contents of this range. If the range spans multiple lines, there will be multiple\n     * bounding boxes. These boxes can be used, for example, to draw a highlight over the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getClientRects() {\n        return this.#createCloneRange().getClientRects();\n    }\n    /** Get the contents of the range as a string. */\n    toString() {\n        return this.#createCloneRange().toString();\n    }\n    /**\n     * Get the underlying `InputStyleClone` instance powering these calculations. This can be used to listen for\n     * updates to trigger layout recalculation.\n     */\n    getStyleClone() {\n        return this.#styleClone;\n    }\n    // --- private ---\n    get #styleClone() {\n        return InputStyleClone.for(this.#inputElement);\n    }\n    get #cloneElement() {\n        return this.#styleClone;\n    }\n    #clampOffset(offset) {\n        return Math.max(0, Math.min(offset, this.#inputElement.value.length));\n    }\n    #createCloneRange() {\n        // It's tempting to create a single Range and reuse it across the lifetime of the class. However, this wouldn't be\n        // accurate because the contents of the input can change and the contents of the range would become stale. So we\n        // must create a new range every time we need it.\n        const range = document.createRange();\n        const textNode = this.#cloneElement.element.childNodes[0];\n        if (textNode) {\n            range.setStart(textNode, this.startOffset);\n            range.setEnd(textNode, this.endOffset);\n        }\n        return range;\n    }\n}\n\nconst states = new WeakMap();\nclass TextExpander {\n    constructor(expander, input) {\n        this.expander = expander;\n        this.input = input;\n        this.combobox = null;\n        this.menu = null;\n        this.match = null;\n        this.justPasted = false;\n        this.lookBackIndex = 0;\n        this.oninput = this.onInput.bind(this);\n        this.onpaste = this.onPaste.bind(this);\n        this.onkeydown = this.onKeydown.bind(this);\n        this.oncommit = this.onCommit.bind(this);\n        this.onmousedown = this.onMousedown.bind(this);\n        this.onblur = this.onBlur.bind(this);\n        this.interactingWithList = false;\n        input.addEventListener('paste', this.onpaste);\n        input.addEventListener('input', this.oninput);\n        input.addEventListener('keydown', this.onkeydown);\n        input.addEventListener('blur', this.onblur);\n    }\n    destroy() {\n        this.input.removeEventListener('paste', this.onpaste);\n        this.input.removeEventListener('input', this.oninput);\n        this.input.removeEventListener('keydown', this.onkeydown);\n        this.input.removeEventListener('blur', this.onblur);\n    }\n    dismissMenu() {\n        if (this.deactivate()) {\n            this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n        }\n    }\n    activate(match, menu) {\n        var _a, _b;\n        if (this.input !== document.activeElement && this.input !== ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement)) {\n            return;\n        }\n        this.deactivate();\n        this.menu = menu;\n        if (!menu.id)\n            menu.id = `text-expander-${Math.floor(Math.random() * 100000).toString()}`;\n        this.expander.append(menu);\n        this.combobox = new Combobox(this.input, menu);\n        this.expander.dispatchEvent(new Event('text-expander-activate'));\n        this.positionMenu(menu, match.position);\n        this.combobox.start();\n        menu.addEventListener('combobox-commit', this.oncommit);\n        menu.addEventListener('mousedown', this.onmousedown);\n        this.combobox.navigate(1);\n    }\n    positionMenu(menu, position) {\n        const caretRect = new InputRange(this.input, position).getBoundingClientRect();\n        const targetPosition = { left: caretRect.left, top: caretRect.top + caretRect.height };\n        const currentPosition = menu.getBoundingClientRect();\n        const delta = {\n            left: targetPosition.left - currentPosition.left,\n            top: targetPosition.top - currentPosition.top\n        };\n        if (delta.left !== 0 || delta.top !== 0) {\n            const currentStyle = getComputedStyle(menu);\n            menu.style.left = currentStyle.left ? `calc(${currentStyle.left} + ${delta.left}px)` : `${delta.left}px`;\n            menu.style.top = currentStyle.top ? `calc(${currentStyle.top} + ${delta.top}px)` : `${delta.top}px`;\n        }\n    }\n    deactivate() {\n        const menu = this.menu;\n        if (!menu || !this.combobox)\n            return false;\n        this.expander.dispatchEvent(new Event('text-expander-deactivate'));\n        this.menu = null;\n        menu.removeEventListener('combobox-commit', this.oncommit);\n        menu.removeEventListener('mousedown', this.onmousedown);\n        this.combobox.destroy();\n        this.combobox = null;\n        menu.remove();\n        return true;\n    }\n    onCommit({ target }) {\n        var _a;\n        const item = target;\n        if (!(item instanceof HTMLElement))\n            return;\n        if (!this.combobox)\n            return;\n        const match = this.match;\n        if (!match)\n            return;\n        const beginning = this.input.value.substring(0, match.position - match.key.length);\n        const remaining = this.input.value.substring(match.position + match.text.length);\n        const detail = { item, key: match.key, value: null, continue: false };\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-value', { cancelable: true, detail }));\n        if (canceled)\n            return;\n        if (!detail.value)\n            return;\n        let suffix = (_a = this.expander.getAttribute('suffix')) !== null && _a !== void 0 ? _a : ' ';\n        if (detail.continue) {\n            suffix = '';\n        }\n        const value = `${detail.value}${suffix}`;\n        this.input.value = beginning + value + remaining;\n        const cursor = beginning.length + value.length;\n        this.deactivate();\n        this.input.focus({\n            preventScroll: true\n        });\n        this.input.selectionStart = cursor;\n        this.input.selectionEnd = cursor;\n        if (!detail.continue) {\n            this.lookBackIndex = cursor;\n            this.match = null;\n        }\n        this.expander.dispatchEvent(new CustomEvent('text-expander-committed', { cancelable: false, detail: { input: this.input } }));\n    }\n    onBlur() {\n        if (this.interactingWithList) {\n            this.interactingWithList = false;\n            return;\n        }\n        this.deactivate();\n    }\n    onPaste() {\n        this.justPasted = true;\n    }\n    async onInput() {\n        if (this.justPasted) {\n            this.justPasted = false;\n            return;\n        }\n        const match = this.findMatch();\n        if (match) {\n            this.match = match;\n            const menu = await this.notifyProviders(match);\n            if (!this.match)\n                return;\n            if (menu) {\n                this.activate(match, menu);\n            }\n            else {\n                this.deactivate();\n            }\n        }\n        else {\n            this.match = null;\n            this.deactivate();\n        }\n    }\n    findMatch() {\n        const cursor = this.input.selectionEnd || 0;\n        const text = this.input.value;\n        if (cursor <= this.lookBackIndex) {\n            this.lookBackIndex = cursor - 1;\n        }\n        for (const { key, multiWord } of this.expander.keys) {\n            const found = query(text, key, cursor, {\n                multiWord,\n                lookBackIndex: this.lookBackIndex,\n                lastMatchPosition: this.match ? this.match.position : null\n            });\n            if (found) {\n                return { text: found.text, key, position: found.position };\n            }\n        }\n    }\n    async notifyProviders(match) {\n        const providers = [];\n        const provide = (result) => providers.push(result);\n        const changeEvent = new CustomEvent('text-expander-change', {\n            cancelable: true,\n            detail: { provide, text: match.text, key: match.key }\n        });\n        const canceled = !this.expander.dispatchEvent(changeEvent);\n        if (canceled)\n            return;\n        const all = await Promise.all(providers);\n        const fragments = all.filter(x => x.matched).map(x => x.fragment);\n        return fragments[0];\n    }\n    onMousedown() {\n        this.interactingWithList = true;\n    }\n    onKeydown(event) {\n        if (event.key === 'Escape') {\n            this.match = null;\n            if (this.deactivate()) {\n                this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n        }\n    }\n}\nclass TextExpanderElement extends HTMLElement {\n    get keys() {\n        const keysAttr = this.getAttribute('keys');\n        const keys = keysAttr ? keysAttr.split(' ') : [];\n        const multiWordAttr = this.getAttribute('multiword');\n        const multiWord = multiWordAttr ? multiWordAttr.split(' ') : [];\n        const globalMultiWord = multiWord.length === 0 && this.hasAttribute('multiword');\n        return keys.map(key => ({ key, multiWord: globalMultiWord || multiWord.includes(key) }));\n    }\n    set keys(value) {\n        this.setAttribute('keys', value);\n    }\n    connectedCallback() {\n        const input = this.querySelector('input[type=\"text\"], textarea');\n        if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement))\n            return;\n        const state = new TextExpander(this, input);\n        states.set(this, state);\n    }\n    disconnectedCallback() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.destroy();\n        states.delete(this);\n    }\n    dismiss() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.dismissMenu();\n    }\n}\n\nif (!window.customElements.get('text-expander')) {\n    window.TextExpanderElement = TextExpanderElement;\n    window.customElements.define('text-expander', TextExpanderElement);\n}\n\nexport { TextExpanderElement as default };\n","export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n","import ansiRegex from 'ansi-regex';\n\nconst regex = ansiRegex();\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\t// Even though the regex is global, we don't need to reset the `.lastIndex`\n\t// because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n\t// and doing it manually has a performance penalty.\n\treturn string.replace(regex, '');\n}\n","import stripAnsi from 'strip-ansi';\n\nconst segmenter = new Intl.Segmenter();\n\nexport default function stringLength(string, {countAnsiEscapeCodes = false} = {}) {\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tif (!countAnsiEscapeCodes) {\n\t\tstring = stripAnsi(string);\n\t}\n\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tlet length = 0;\n\n\tfor (const _ of segmenter.segment(string)) { // eslint-disable-line no-unused-vars\n\t\tlength++;\n\t}\n\n\treturn length;\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20version='1.0'%20viewBox='0%200%20641%20223'%3e%3cpath%20fill='%23aaa'%20d='M86%20214c-9-1-17-4-24-8l-6-3-5-5-5-4-4-6-4-6-3-8-2-8v-27l2-9%203-9%204-6%204-6%205-5%205-5%207-3%206-4%207-2%207-2%2012-1h12l7%201%208%202%207%204%207%203%205%205%205%204-10%2010-10%209-4-3-10-5-5-1H88l-5%202-6%203-3%204-4%204-2%205-2%206v6l-1%207%201%207%202%207%203%205%202%204%204%203%204%203%205%202%206%202h9l10-1%205-2%206-3v-16H91v-27h59v54l-1%203-2%203-5%204-4%204-5%203-5%202-8%202-8%202-10%201H92l-6-1zm266-62V91h34v46h44V91h34v121h-34v-46h-44v46h-34v-61zm-182-1V90h34v121h-34v-60zm59-1V90h35l36%201%205%202c3%200%208%202%2010%204l5%202%204%205%205%204%203%207%203%207%201%2013v13l-4%206-3%207-4%204-5%205-5%202-5%203-6%202-5%201-18%201h-18v32h-34v-61zm67-2%203-2%202-4%202-5v-5l-2-4-2-4-3-2-3-3h-30v31h30l3-2zm226%2039v-24l-8-12-18-28a1751%201751%200%200%200-20-31v-2h39l7%2012%2012%2021%206%209%2013-21%2013-21h38v2l-41%2061-7%2010v48h-34v-24zM109%2066l-4-1-5-5-5-4-1-5-3-9v-5l1-5c2-7%203-10%208-15l4-4%207-2%207-2h7l6%201%205%202%205%202%203%204%204%203%202%206%202%205v13l-2%205-2%206-4%204-3%203-5%202-4%202-9%201h-9l-5-2zm22-11%204-2%203-4%202-5V34l-2-4-2-4-3-2-4-3-5-1h-6l-4%202-5%202-2%204-3%205-1%203v4l1%205%202%205%202%202%205%203%204%202h10l4-2zM37%2039V11h33l3%201%203%202%204%203%203%203%201%205%201%204v5l-1%204-3%204-3%205-4%201-3%202-11%201H49v16H37V39zm31%200%203-2%201-2%201-2v-4l-1-3-3-2-2-2H49v18h15l4-1zm107%2025a512%20512%200%200%200-19-53h14l4%2014%206%2019%201%204%201-1%207-19%205-17h9l6%2019%207%2018v-1l2-6%205-17%204-13h14v1l-4%2012-16%2041v2h-5l-5-1-6-15-6-15-1%201-3%207-6%2015-2%208h-11l-1-3zm74-25V11h42v11h-29v2l-1%205v4h29v11h-28v11h2l15%201h13v11h-43V39zm55%200V11h33l5%203%205%202%202%204%202%205v10l-2%203-1%204-5%203-5%203%205%205%208%2010%203%204h-14l-7-9-8-10h-9v19h-12V39zm33-3%202-3v-6l-3-3-2-3h-18v16h1v1h17l2-2zm26%203V11h42v11h-29l-1%206v5h29v11h-28v5l-1%205%201%201v1h30v11h-43V39zm54%200V11h17l18%201%204%202%205%203%202%204%203%204%202%206%201%206v5c-1%206-3%2012-6%2015l-3%204-5%203-5%202-17%201h-16V39zm33%2014%205-5%202-3v-6l-1-6-1-3-1-3-4-3-3-2h-5l-6-1-3%201h-3v34h9l8-1%203-2zm50-14V11h34l5%202%204%202%202%203%202%203v9l-2%202-3%204-1%201%203%203%203%204%201%203%201%204-1%204-1%204-3%203-3%203-5%201-5%201h-31V39zm34%2015%202-1v-6l-2-2-2-2h-20v13h20l2-2zm-3-22%204-2v-6l-2-1-2-2h-19v12h16l4-1zm42%2024V45l-6-9-11-17-5-8h15l4%208%207%2011%202%203%207-11%207-11h14l-11%2016-11%2017v23h-12V56z'/%3e%3c/svg%3e\"","import './compose.css';\nimport '@github/text-expander-element';\n\nimport { msg, plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { deepEqual } from 'fast-equals';\nimport Fuse from 'fuse.js';\nimport { forwardRef, memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport stringLength from 'string-length';\n// import { detectAll } from 'tinyld/light';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\nimport useResizeObserver from 'use-resize-observer';\nimport { useSnapshot } from 'valtio';\n\nimport poweredByGiphyURL from '../assets/powered-by-giphy.svg';\n\nimport Menu2 from '../components/menu2';\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api, getPreferences } from '../utils/api';\nimport { langDetector } from '../utils/browser-translator';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport i18nDuration from '../utils/i18n-duration';\nimport isRTL from '../utils/is-rtl';\nimport localeMatch from '../utils/locale-match';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport mem from '../utils/mem';\nimport openCompose from '../utils/open-compose';\nimport pmem from '../utils/pmem';\nimport prettyBytes from '../utils/pretty-bytes';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n  getCurrentInstanceConfiguration,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useCloseWatcher from '../utils/useCloseWatcher';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport AccountBlock from './account-block';\n// import Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport ScheduledAtField, {\n  getLocalTimezoneName,\n  MIN_SCHEDULED_AT,\n} from './ScheduledAtField';\nimport Status from './status';\n\nconst {\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n};\nconst expirySeconds = Object.keys(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        const insetInlineStart = isRTL() ? 'right' : 'left';\n        menu.style[insetInlineStart] = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = localeMatch(\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\n  supportedLanguages.map((l) => l[0]),\n  'en',\n);\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\nconst MENTION_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\p{L}\\\\w.-]+[\\\\w]+)?)`,\n  'uig',\n);\n\n// AI-generated, all other regexes are too complicated\nconst HASHTAG_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(#[\\\\p{L}\\\\p{N}_]+([\\\\p{L}\\\\p{N}_.]+[\\\\p{L}\\\\p{N}_]+)?)(?![\\\\/\\\\w])`,\n  'iug',\n);\n\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\nconst SCAN_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\n  'g',\n);\n\nconst segmenter = new Intl.Segmenter();\nfunction escapeHTML(text) {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;');\n}\nfunction highlightText(text, { maxCharacters = Infinity }) {\n  // Exceeded characters limit\n  const { composerCharacterCount } = states;\n  if (composerCharacterCount > maxCharacters) {\n    // Highlight exceeded characters\n    let withinLimitHTML = '',\n      exceedLimitHTML = '';\n    const htmlSegments = segmenter.segment(text);\n    for (const { segment, index } of htmlSegments) {\n      if (index < maxCharacters) {\n        withinLimitHTML += segment;\n      } else {\n        exceedLimitHTML += segment;\n      }\n    }\n    if (exceedLimitHTML) {\n      exceedLimitHTML =\n        '<mark class=\"compose-highlight-exceeded\">' +\n        escapeHTML(exceedLimitHTML) +\n        '</mark>';\n    }\n    return escapeHTML(withinLimitHTML) + exceedLimitHTML;\n  }\n\n  return escapeHTML(text)\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\n    .replace(\n      SCAN_RE,\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\n    ); // Emoji shortcodes\n}\n\n// const rtf = new Intl.RelativeTimeFormat();\nconst RTF = mem((locale) => new Intl.RelativeTimeFormat(locale || undefined));\nconst LF = mem((locale) => new Intl.ListFormat(locale || undefined));\n\nconst CUSTOM_EMOJIS_COUNT = 100;\n\nconst ADD_LABELS = {\n  camera: msg`Take photo or video`,\n  media: msg`Add media`,\n  customEmoji: msg`Add custom emoji`,\n  gif: msg`Add GIF`,\n  poll: msg`Add poll`,\n  scheduledPost: msg`Schedule post`,\n};\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  const { i18n, _, t } = useLingui();\n  const rtf = RTF(i18n.locale);\n  const lf = LF(i18n.locale);\n\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const configuration = getCurrentInstanceConfiguration();\n  console.log('⚙️ Configuration', configuration);\n\n  const {\n    statuses: {\n      maxCharacters,\n      maxMediaAttachments, // Beware: it can be undefined!\n      charactersReservedPerUrl,\n    } = {},\n    mediaAttachments: {\n      supportedMimeTypes,\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n      descriptionLimit,\n    } = {},\n    polls: {\n      maxOptions,\n      maxCharactersPerOption,\n      maxExpiration,\n      minExpiration,\n    } = {},\n  } = configuration || {};\n  const supportedImagesVideosTypes = supportedMimeTypes?.filter((mimeType) =>\n    /^(image|video)/i.test(mimeType),\n  );\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const prevLanguage = useRef(language);\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n  const [scheduledAt, setScheduledAt] = useState(null);\n\n  const prefs = getPreferences();\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      if (!textareaRef.current) return;\n      // status starts with newline or space, focus on first position\n      if (/^\\n|\\s/.test(draftStatus?.status)) {\n        textareaRef.current.selectionStart = 0;\n        textareaRef.current.selectionEnd = 0;\n      }\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(\n        visibility === 'public' && prefs['posting:default:visibility']\n          ? prefs['posting:default:visibility'].toLowerCase()\n          : visibility,\n      );\n      setLanguage(\n        language ||\n          prefs['posting:default:language']?.toLowerCase() ||\n          DEFAULT_LANG,\n      );\n      setSensitive(sensitive && !!spoilerText);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses\n            .$select(editStatus.id)\n            .source.fetch();\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(\n            language ||\n              prefs['posting:default:language']?.toLowerCase() ||\n              DEFAULT_LANG,\n          );\n          setSensitive(sensitive);\n          if (composablePoll) setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs['posting:default:visibility']) {\n        setVisibility(prefs['posting:default:visibility'].toLowerCase());\n      }\n      if (prefs['posting:default:language']) {\n        setLanguage(prefs['posting:default:language'].toLowerCase());\n      }\n      if (prefs['posting:default:sensitive']) {\n        setSensitive(!!prefs['posting:default:sensitive']);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n        scheduledAt,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\n      if (visibility) setVisibility(visibility);\n      setLanguage(\n        language ||\n          prefs['posting:default:language']?.toLowerCase() ||\n          DEFAULT_LANG,\n      );\n      if (sensitive !== null) setSensitive(sensitive);\n      if (composablePoll) setPoll(composablePoll);\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\n      if (scheduledAt) setScheduledAt(scheduledAt);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = t`You have unsaved changes. Discard this post?`;\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasValue = (value || '')\n      .trim()\n      .replace(/^\\p{White_Space}+|\\p{White_Space}+$/gu, '');\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!hasValue && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escDownRef = useRef(false);\n  useHotkeys(\n    'esc',\n    () => {\n      escDownRef.current = true;\n      // This won't be true if this event is already handled and not propagated 🤞\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && escDownRef.current && confirmClose()) {\n        onClose();\n      }\n      escDownRef.current = false;\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n      ignoreEventWhen: (e) => {\n        const modals = document.querySelectorAll('#modal-container > *');\n        const hasModal = !!modals;\n        const hasOnlyComposer =\n          modals.length === 1 && modals[0].querySelector('#compose-container');\n        return (\n          (hasModal && !hasOnlyComposer) ||\n          e.metaKey ||\n          e.ctrlKey ||\n          e.altKey ||\n          e.shiftKey\n        );\n      },\n      useKey: true,\n    },\n  );\n  useCloseWatcher(() => {\n    if (!standalone && confirmClose()) {\n      onClose();\n    }\n  }, []);\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    if (states.composerState.minimized) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n        scheduledAt,\n      },\n    };\n    if (\n      !deepEqual(backgroundDraft, prevBackgroundDraft.current) &&\n      !canClose()\n    ) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      const unsupportedFiles = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (\n            supportedMimeTypes !== undefined &&\n            !supportedMimeTypes.includes(file.type)\n          ) {\n            unsupportedFiles.push(file);\n          } else {\n            files.push(file);\n          }\n        }\n      }\n      if (unsupportedFiles.length > 0) {\n        alert(\n          plural(unsupportedFiles.length, {\n            one: `File ${unsupportedFiles[0].name} is not supported.`,\n            other: `Files ${lf.format(\n              unsupportedFiles.map((f) => f.name),\n            )} are not supported.`,\n          }),\n        );\n      }\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\n        alert(\n          plural(maxMediaAttachments, {\n            one: 'You can only attach up to 1 file.',\n            other: 'You can only attach up to # files.',\n          }),\n        );\n        return;\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        let allowedFiles = files;\n        if (maxMediaAttachments !== undefined) {\n          const max = maxMediaAttachments - mediaAttachments.length;\n          allowedFiles = allowedFiles.slice(0, max);\n          if (allowedFiles.length <= 0) {\n            alert(\n              plural(maxMediaAttachments, {\n                one: 'You can only attach up to 1 file.',\n                other: 'You can only attach up to # files.',\n              }),\n            );\n            return;\n          }\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  const [showMentionPicker, setShowMentionPicker] = useState(false);\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\n  const [showGIFPicker, setShowGIFPicker] = useState(false);\n\n  const [autoDetectedLanguages, setAutoDetectedLanguages] = useState(null);\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\n    const topLanguages = [];\n    const restLanguages = [];\n    const { contentTranslationHideLanguages = [] } = states.settings;\n    supportedLanguages.forEach((l) => {\n      const [code] = l;\n      if (\n        code === language ||\n        code === prevLanguage.current ||\n        code === DEFAULT_LANG ||\n        contentTranslationHideLanguages.includes(code) ||\n        (autoDetectedLanguages?.length && autoDetectedLanguages.includes(code))\n      ) {\n        topLanguages.push(l);\n      } else {\n        restLanguages.push(l);\n      }\n    });\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\n      if (codeA === language) return -1;\n      if (codeB === language) return 1;\n      return commonA.localeCompare(commonB);\n    });\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\n      commonA.localeCompare(commonB),\n    );\n    return [topLanguages, restLanguages];\n  }, [language, autoDetectedLanguages]);\n\n  const replyToStatusMonthsAgo = useMemo(\n    () =>\n      !!replyToStatus?.createdAt &&\n      Math.floor(\n        (Date.now() - new Date(replyToStatus.createdAt)) /\n          (1000 * 60 * 60 * 24 * 30),\n      ),\n    [replyToStatus],\n  );\n\n  const onMinimize = () => {\n    saveUnsavedDraft();\n    states.composerState.minimized = true;\n  };\n\n  const gifPickerDisabled =\n    uiState === 'loading' ||\n    (maxMediaAttachments !== undefined &&\n      mediaAttachments.length >= maxMediaAttachments) ||\n    !!poll;\n\n  // If maxOptions is not defined or defined and is greater than 1, show poll button\n  const showPollButton = maxOptions == null || maxOptions > 1;\n  const pollButtonDisabled =\n    uiState === 'loading' || !!poll || !!mediaAttachments.length;\n  const onPollButtonClick = () => {\n    setPoll({\n      options: ['', ''],\n      expiresIn: 24 * 60 * 60, // 1 day\n      multiple: false,\n    });\n  };\n\n  const addSubToolbarRef = useRef();\n  const [showAddButton, setShowAddButton] = useState(false);\n  useResizeObserver({\n    ref: addSubToolbarRef,\n    box: 'border-box',\n    onResize: ({ width }) => {\n      // If scrollable, it's truncated\n      const { scrollWidth } = addSubToolbarRef.current;\n      const truncated = scrollWidth > width;\n      const overTruncated = width < 84; // roughly two buttons width\n      setShowAddButton(overTruncated || truncated);\n      addSubToolbarRef.current.hidden = overTruncated;\n    },\n  });\n\n  const showScheduledAt = !editStatus;\n  const scheduledAtButtonDisabled = uiState === 'loading' || !!scheduledAt;\n  const onScheduledAtClick = () => {\n    const date = new Date(Date.now() + MIN_SCHEDULED_AT);\n    setScheduledAt(date);\n  };\n\n  return (\n    <div id=\"compose-container-outer\">\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n        <div class=\"compose-top\">\n          {currentAccountInfo?.avatarStatic && (\n            // <Avatar\n            //   url={currentAccountInfo.avatarStatic}\n            //   size=\"xl\"\n            //   alt={currentAccountInfo.username}\n            //   squircle={currentAccountInfo?.bot}\n            // />\n            <AccountBlock\n              account={currentAccountInfo}\n              accountInstance={currentAccount.instanceURL}\n              hideDisplayName\n              useAvatarStatic\n            />\n          )}\n          {!standalone ? (\n            <span class=\"compose-controls\">\n              <button\n                type=\"button\"\n                class=\"plain4 pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  const newWin = openCompose({\n                    editStatus,\n                    replyToStatus,\n                    draftStatus: {\n                      uid: UID.current,\n                      status: textareaRef.current.value,\n                      spoilerText: spoilerTextRef.current.value,\n                      visibility,\n                      language,\n                      sensitive,\n                      poll,\n                      mediaAttachments,\n                      scheduledAt,\n                    },\n                  });\n\n                  if (!newWin) {\n                    return;\n                  }\n\n                  onClose();\n                }}\n              >\n                <Icon icon=\"popout\" alt={t`Pop out`} />\n              </button>\n              <button\n                type=\"button\"\n                class=\"plain4 min-button\"\n                onClick={onMinimize}\n              >\n                <Icon icon=\"minimize\" alt={t`Minimize`} />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"light close-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  if (confirmClose()) {\n                    onClose();\n                  }\n                }}\n              >\n                <Icon icon=\"x\" alt={t`Close`} />\n              </button>\n            </span>\n          ) : (\n            hasOpener && (\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  if (!window.opener) {\n                    alert(t`Looks like you closed the parent window.`);\n                    return;\n                  }\n\n                  if (window.opener.__STATES__.showCompose) {\n                    if (window.opener.__STATES__.composerState?.publishing) {\n                      alert(\n                        t`Looks like you already have a compose field open in the parent window and currently publishing. Please wait for it to be done and try again later.`,\n                      );\n                      return;\n                    }\n\n                    let confirmText = t`Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?`;\n                    const yes = confirm(confirmText);\n                    if (!yes) return;\n                  }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  onClose({\n                    fn: () => {\n                      const passData = {\n                        editStatus,\n                        replyToStatus,\n                        draftStatus: {\n                          uid: UID.current,\n                          status: textareaRef.current.value,\n                          spoilerText: spoilerTextRef.current.value,\n                          visibility,\n                          language,\n                          sensitive,\n                          poll,\n                          mediaAttachments,\n                          scheduledAt,\n                        },\n                      };\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                      if (window.opener.__STATES__.showCompose) {\n                        window.opener.__STATES__.showCompose = false;\n                        setTimeout(() => {\n                          window.opener.__STATES__.showCompose = true;\n                        }, 10);\n                      } else {\n                        window.opener.__STATES__.showCompose = true;\n                      }\n                      if (window.opener.__STATES__.composerState.minimized) {\n                        // Maximize it\n                        window.opener.__STATES__.composerState.minimized = false;\n                      }\n                    },\n                  });\n                }}\n              >\n                <Icon icon=\"popin\" alt={t`Pop in`} />\n              </button>\n            )\n          )}\n        </div>\n        {!!replyToStatus && (\n          <div class=\"status-preview\">\n            <Status status={replyToStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend reply-to\">\n              {replyToStatusMonthsAgo > 0 ? (\n                <Trans>\n                  Replying to @\n                  {replyToStatus.account.acct || replyToStatus.account.username}\n                  &rsquo;s post (\n                  <strong>\n                    {rtf.format(-replyToStatusMonthsAgo, 'month')}\n                  </strong>\n                  )\n                </Trans>\n              ) : (\n                <Trans>\n                  Replying to @\n                  {replyToStatus.account.acct || replyToStatus.account.username}\n                  &rsquo;s post\n                </Trans>\n              )}\n            </div>\n          </div>\n        )}\n        {!!editStatus && (\n          <div class=\"status-preview\">\n            <Status status={editStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend\">\n              <Trans>Editing source post</Trans>\n            </div>\n          </div>\n        )}\n        <form\n          ref={formRef}\n          class={`form-visibility-${visibility}`}\n          style={{\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n            opacity: uiState === 'loading' ? 0.5 : 1,\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n              formRef.current.dispatchEvent(\n                new Event('submit', { cancelable: true }),\n              );\n            }\n          }}\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n            let { status, visibility, sensitive, spoilerText, scheduledAt } =\n              entries;\n\n            // Pre-cleanup\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n            // Convert datetime-local input value to RFC3339 Date string value\n            scheduledAt = scheduledAt\n              ? new Date(scheduledAt).toISOString()\n              : undefined;\n\n            // Validation\n            /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n            if (poll) {\n              if (poll.options.length < 2) {\n                alert(t`Poll must have at least 2 options`);\n                return;\n              }\n              if (poll.options.some((option) => option === '')) {\n                alert(t`Some poll choices are empty`);\n                return;\n              }\n            }\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n            if (mediaAttachments.length > 0) {\n              // If there are media attachments, check if they have no descriptions\n              const hasNoDescriptions = mediaAttachments.some(\n                (media) => !media.description?.trim?.(),\n              );\n              if (hasNoDescriptions) {\n                const yes = confirm(\n                  t`Some media have no descriptions. Continue?`,\n                );\n                if (!yes) return;\n              }\n            }\n\n            // Post-cleanup\n            spoilerText = (sensitive && spoilerText) || undefined;\n            status = status === '' ? undefined : status;\n\n            // states.composerState.minimized = true;\n            states.composerState.publishing = true;\n            setUIState('loading');\n            (async () => {\n              try {\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\n                if (mediaAttachments.length > 0) {\n                  // Upload media attachments first\n                  const mediaPromises = mediaAttachments.map((attachment) => {\n                    const { file, description, id } = attachment;\n                    console.log('UPLOADING', attachment);\n                    if (id) {\n                      // If already uploaded\n                      return attachment;\n                    } else {\n                      const params = removeNullUndefined({\n                        file,\n                        description,\n                      });\n                      return masto.v2.media.create(params).then((res) => {\n                        if (res.id) {\n                          attachment.id = res.id;\n                        }\n                        return res;\n                      });\n                    }\n                  });\n                  const results = await Promise.allSettled(mediaPromises);\n\n                  // If any failed, return\n                  if (\n                    results.some((result) => {\n                      return result.status === 'rejected' || !result.value?.id;\n                    })\n                  ) {\n                    states.composerState.publishing = false;\n                    states.composerState.publishingError = true;\n                    setUIState('error');\n                    // Alert all the reasons\n                    results.forEach((result) => {\n                      if (result.status === 'rejected') {\n                        console.error(result);\n                        alert(result.reason || t`Attachment #${i} failed`);\n                      }\n                    });\n                    return;\n                  }\n\n                  console.log({ results, mediaAttachments });\n                }\n\n                /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\n              */\n                let params = {\n                  status,\n                  // spoilerText,\n                  spoiler_text: spoilerText,\n                  language,\n                  sensitive,\n                  poll,\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                  media_ids: mediaAttachments.map(\n                    (attachment) => attachment.id,\n                  ),\n                };\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                  params.media_attributes = mediaAttachments.map(\n                    (attachment) => {\n                      return {\n                        id: attachment.id,\n                        description: attachment.description,\n                        // focus\n                        // thumbnail\n                      };\n                    },\n                  );\n                } else if (!editStatus) {\n                  params.visibility = visibility;\n                  // params.inReplyToId = replyToStatus?.id || undefined;\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\n                  params.scheduled_at = scheduledAt;\n                }\n                params = removeNullUndefined(params);\n                console.log('POST', params);\n\n                let newStatus;\n                if (editStatus) {\n                  newStatus = await masto.v1.statuses\n                    .$select(editStatus.id)\n                    .update(params);\n                  saveStatus(newStatus, instance, {\n                    skipThreading: true,\n                  });\n                } else {\n                  try {\n                    newStatus = await masto.v1.statuses.create(params, {\n                      requestInit: {\n                        headers: {\n                          'Idempotency-Key': UID.current,\n                        },\n                      },\n                    });\n                  } catch (_) {\n                    // If idempotency key fails, try again without it\n                    newStatus = await masto.v1.statuses.create(params);\n                  }\n                }\n                states.composerState.minimized = false;\n                states.composerState.publishing = false;\n                setUIState('default');\n\n                // Close\n                onClose({\n                  // type: post, reply, edit\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\n                  newStatus,\n                  instance,\n                  scheduledAt,\n                });\n              } catch (e) {\n                states.composerState.publishing = false;\n                states.composerState.publishingError = true;\n                console.error(e);\n                alert(e?.reason || e);\n                setUIState('error');\n              }\n            })();\n          }}\n        >\n          <div class=\"toolbar stretch\">\n            <input\n              ref={spoilerTextRef}\n              type=\"text\"\n              name=\"spoilerText\"\n              placeholder={t`Content warning`}\n              disabled={uiState === 'loading'}\n              class=\"spoiler-text-field\"\n              lang={language}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              style={{\n                opacity: sensitive ? 1 : 0,\n                pointerEvents: sensitive ? 'auto' : 'none',\n              }}\n              onInput={() => {\n                updateCharCount();\n              }}\n            />\n            <label\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\n              title={t`Content warning or sensitive media`}\n            >\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                  if (sensitive) {\n                    spoilerTextRef.current?.focus();\n                  } else {\n                    textareaRef.current?.focus();\n                  }\n                }}\n              />\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>{' '}\n            <label\n              class={`toolbar-button ${\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\n              title={visibility}\n            >\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n              <select\n                name=\"visibility\"\n                value={visibility}\n                onChange={(e) => {\n                  setVisibility(e.target.value);\n                }}\n                disabled={uiState === 'loading' || !!editStatus}\n                dir=\"auto\"\n              >\n                <option value=\"public\">\n                  <Trans>Public</Trans>\n                </option>\n                {(supports('@pleroma/local-visibility-post') ||\n                  supports('@akkoma/local-visibility-post')) && (\n                  <option value=\"local\">\n                    <Trans>Local</Trans>\n                  </option>\n                )}\n                <option value=\"unlisted\">\n                  <Trans>Unlisted</Trans>\n                </option>\n                <option value=\"private\">\n                  <Trans>Followers only</Trans>\n                </option>\n                <option value=\"direct\">\n                  <Trans>Private mention</Trans>\n                </option>\n              </select>\n            </label>{' '}\n          </div>\n          <Textarea\n            ref={textareaRef}\n            placeholder={\n              replyToStatus\n                ? t`Post your reply`\n                : editStatus\n                  ? t`Edit your post`\n                  : t`What are you doing?`\n            }\n            required={mediaAttachments?.length === 0}\n            disabled={uiState === 'loading'}\n            lang={language}\n            onInput={() => {\n              updateCharCount();\n            }}\n            maxCharacters={maxCharacters}\n            performSearch={(params) => {\n              const { type, q, limit } = params;\n              if (type === 'accounts') {\n                return masto.v1.accounts.search.list({\n                  q,\n                  limit,\n                  resolve: false,\n                });\n              }\n              return masto.v2.search.list(params);\n            }}\n            onTrigger={(action) => {\n              if (action?.name === 'custom-emojis') {\n                setShowEmoji2Picker({\n                  defaultSearchTerm: action?.defaultSearchTerm || null,\n                });\n              } else if (action?.name === 'mention') {\n                setShowMentionPicker({\n                  defaultSearchTerm: action?.defaultSearchTerm || null,\n                });\n              } else if (\n                action?.name === 'auto-detect-language' &&\n                action?.languages\n              ) {\n                setAutoDetectedLanguages(action.languages);\n              }\n            }}\n          />\n          {mediaAttachments?.length > 0 && (\n            <div class=\"media-attachments\">\n              {mediaAttachments.map((attachment, i) => {\n                const { id, file } = attachment;\n                const fileID = file?.size + file?.type + file?.name;\n                return (\n                  <MediaAttachment\n                    key={id || fileID || i}\n                    attachment={attachment}\n                    disabled={uiState === 'loading'}\n                    lang={language}\n                    descriptionLimit={descriptionLimit}\n                    onDescriptionChange={(value) => {\n                      setMediaAttachments((attachments) => {\n                        const newAttachments = [...attachments];\n                        newAttachments[i] = {\n                          ...newAttachments[i],\n                          description: value,\n                        };\n                        return newAttachments;\n                      });\n                    }}\n                    onRemove={() => {\n                      setMediaAttachments((attachments) => {\n                        return attachments.filter((_, j) => j !== i);\n                      });\n                    }}\n                  />\n                );\n              })}\n              <label class=\"media-sensitive\">\n                <input\n                  name=\"sensitive\"\n                  type=\"checkbox\"\n                  checked={sensitive}\n                  disabled={uiState === 'loading'}\n                  onChange={(e) => {\n                    const sensitive = e.target.checked;\n                    setSensitive(sensitive);\n                  }}\n                />{' '}\n                <span>\n                  <Trans>Mark media as sensitive</Trans>\n                </span>{' '}\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n              </label>\n            </div>\n          )}\n          {!!poll && (\n            <Poll\n              lang={language}\n              maxOptions={maxOptions}\n              maxExpiration={maxExpiration}\n              minExpiration={minExpiration}\n              maxCharactersPerOption={maxCharactersPerOption}\n              poll={poll}\n              disabled={uiState === 'loading'}\n              onInput={(poll) => {\n                if (poll) {\n                  const newPoll = { ...poll };\n                  setPoll(newPoll);\n                } else {\n                  setPoll(null);\n                }\n              }}\n            />\n          )}\n          {scheduledAt && (\n            <div class=\"toolbar scheduled-at\">\n              <button\n                type=\"button\"\n                class=\"plain4 small\"\n                onClick={() => {\n                  setScheduledAt(null);\n                }}\n              >\n                <Icon icon=\"x\" />\n              </button>\n              <label>\n                <Trans>\n                  Posting on{' '}\n                  <ScheduledAtField\n                    scheduledAt={scheduledAt}\n                    setScheduledAt={setScheduledAt}\n                  />\n                </Trans>\n                <br />\n                <small>{getLocalTimezoneName()}</small>\n              </label>\n            </div>\n          )}\n          <div class=\"toolbar compose-footer\">\n            <span class=\"add-toolbar-button-group spacer\">\n              {showAddButton && (\n                <Menu2\n                  portal={{\n                    target: document.body,\n                  }}\n                  containerProps={{\n                    style: {\n                      zIndex: 1001,\n                    },\n                  }}\n                  menuButton={({ open }) => (\n                    <button\n                      type=\"button\"\n                      class={`toolbar-button add-button ${\n                        open ? 'active' : ''\n                      }`}\n                    >\n                      <Icon icon=\"plus\" title={t`Add`} />\n                    </button>\n                  )}\n                >\n                  {supportsCameraCapture && (\n                    <MenuItem className=\"compose-menu-add-media\">\n                      <label class=\"compose-menu-add-media-field\">\n                        <CameraCaptureInput\n                          hidden\n                          supportedMimeTypes={supportedImagesVideosTypes}\n                          disabled={\n                            uiState === 'loading' ||\n                            mediaAttachments.length >= maxMediaAttachments ||\n                            !!poll\n                          }\n                          setMediaAttachments={setMediaAttachments}\n                        />\n                      </label>\n                      <Icon icon=\"camera\" /> <span>{_(ADD_LABELS.camera)}</span>\n                    </MenuItem>\n                  )}\n                  <MenuItem className=\"compose-menu-add-media\">\n                    <label class=\"compose-menu-add-media-field\">\n                      <FilePickerInput\n                        hidden\n                        supportedMimeTypes={supportedMimeTypes}\n                        maxMediaAttachments={maxMediaAttachments}\n                        mediaAttachments={mediaAttachments}\n                        disabled={\n                          uiState === 'loading' ||\n                          mediaAttachments.length >= maxMediaAttachments ||\n                          !!poll\n                        }\n                        setMediaAttachments={setMediaAttachments}\n                      />\n                    </label>\n                    <Icon icon=\"media\" /> <span>{_(ADD_LABELS.media)}</span>\n                  </MenuItem>\n                  <MenuItem\n                    onClick={() => {\n                      setShowEmoji2Picker(true);\n                    }}\n                  >\n                    <Icon icon=\"emoji2\" />{' '}\n                    <span>{_(ADD_LABELS.customEmoji)}</span>\n                  </MenuItem>\n                  {!!states.settings.composerGIFPicker && (\n                    <MenuItem\n                      disabled={gifPickerDisabled}\n                      onClick={() => {\n                        setShowGIFPicker(true);\n                      }}\n                    >\n                      <span class=\"icon icon-gif\" role=\"img\" />\n                      <span>{_(ADD_LABELS.gif)}</span>\n                    </MenuItem>\n                  )}\n                  {showPollButton && (\n                    <MenuItem\n                      disabled={pollButtonDisabled}\n                      onClick={onPollButtonClick}\n                    >\n                      <Icon icon=\"poll\" /> <span>{_(ADD_LABELS.poll)}</span>\n                    </MenuItem>\n                  )}\n                  {showScheduledAt && (\n                    <MenuItem\n                      disabled={scheduledAtButtonDisabled}\n                      onClick={onScheduledAtClick}\n                    >\n                      <Icon icon=\"schedule\" />{' '}\n                      <span>{_(ADD_LABELS.scheduledPost)}</span>\n                    </MenuItem>\n                  )}\n                </Menu2>\n              )}\n              <span class=\"add-sub-toolbar-button-group\" ref={addSubToolbarRef}>\n                {supportsCameraCapture && (\n                  <label class=\"toolbar-button\">\n                    <CameraCaptureInput\n                      supportedMimeTypes={supportedImagesVideosTypes}\n                      mediaAttachments={mediaAttachments}\n                      disabled={\n                        uiState === 'loading' ||\n                        mediaAttachments.length >= maxMediaAttachments ||\n                        !!poll\n                      }\n                      setMediaAttachments={setMediaAttachments}\n                    />\n                    <Icon icon=\"camera\" alt={_(ADD_LABELS.camera)} />\n                  </label>\n                )}\n                <label class=\"toolbar-button\">\n                  <FilePickerInput\n                    supportedMimeTypes={supportedMimeTypes}\n                    maxMediaAttachments={maxMediaAttachments}\n                    mediaAttachments={mediaAttachments}\n                    disabled={\n                      uiState === 'loading' ||\n                      mediaAttachments.length >= maxMediaAttachments ||\n                      !!poll\n                    }\n                    setMediaAttachments={setMediaAttachments}\n                  />\n                  <Icon icon=\"media\" alt={_(ADD_LABELS.media)} />\n                </label>\n                {/* <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowMentionPicker(true);\n                }}\n              >\n                <Icon icon=\"at\" />\n              </button> */}\n                <button\n                  type=\"button\"\n                  class=\"toolbar-button\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    setShowEmoji2Picker(true);\n                  }}\n                >\n                  <Icon icon=\"emoji2\" alt={_(ADD_LABELS.customEmoji)} />\n                </button>\n                {!!states.settings.composerGIFPicker && (\n                  <button\n                    type=\"button\"\n                    class=\"toolbar-button gif-picker-button\"\n                    disabled={gifPickerDisabled}\n                    onClick={() => {\n                      setShowGIFPicker(true);\n                    }}\n                  >\n                    <span\n                      class=\"icon icon-gif\"\n                      aria-label={_(ADD_LABELS.gif)}\n                    />\n                  </button>\n                )}\n                {showPollButton && (\n                  <>\n                    <button\n                      type=\"button\"\n                      class=\"toolbar-button\"\n                      disabled={pollButtonDisabled}\n                      onClick={onPollButtonClick}\n                    >\n                      <Icon icon=\"poll\" alt={_(ADD_LABELS.poll)} />\n                    </button>\n                  </>\n                )}\n                {showScheduledAt && (\n                  <button\n                    type=\"button\"\n                    class={`toolbar-button ${scheduledAt ? 'highlight' : ''}`}\n                    disabled={scheduledAtButtonDisabled}\n                    onClick={onScheduledAtClick}\n                  >\n                    <Icon icon=\"schedule\" alt={_(ADD_LABELS.scheduledPost)} />\n                  </button>\n                )}\n              </span>\n            </span>\n            {/* <div class=\"spacer\" /> */}\n            {uiState === 'loading' ? (\n              <Loader abrupt />\n            ) : (\n              <CharCountMeter\n                maxCharacters={maxCharacters}\n                hidden={uiState === 'loading'}\n              />\n            )}\n            <label\n              class={`toolbar-button ${\n                language !== prevLanguage.current ||\n                (\n                  autoDetectedLanguages?.length &&\n                    !autoDetectedLanguages.includes(language)\n                )\n                  ? 'highlight'\n                  : ''\n              }`}\n            >\n              <span class=\"icon-text\">\n                {supportedLanguagesMap[language]?.native}\n              </span>\n              <select\n                name=\"language\"\n                value={language}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setLanguage(value || DEFAULT_LANG);\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\n                }}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              >\n                {topSupportedLanguages.map(([code, common, native]) => {\n                  const commonText = localeCode2Text({\n                    code,\n                    fallback: common,\n                  });\n                  const showCommon = commonText !== native;\n                  return (\n                    <option value={code} key={code}>\n                      {showCommon ? `${native} - ${commonText}` : commonText}\n                    </option>\n                  );\n                })}\n                <hr />\n                {restSupportedLanguages.map(([code, common, native]) => {\n                  const commonText = localeCode2Text({\n                    code,\n                    fallback: common,\n                  });\n                  const showCommon = commonText !== native;\n                  return (\n                    <option value={code} key={code}>\n                      {showCommon ? `${native} - ${commonText}` : commonText}\n                    </option>\n                  );\n                })}\n              </select>\n            </label>{' '}\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {scheduledAt\n                ? t`Schedule`\n                : replyToStatus\n                  ? t`Reply`\n                  : editStatus\n                    ? t`Update`\n                    : t({\n                        message: 'Post',\n                        context: 'Submit button in composer',\n                      })}\n            </button>\n          </div>\n        </form>\n      </div>\n      {showMentionPicker && (\n        <Modal\n          onClose={() => {\n            setShowMentionPicker(false);\n          }}\n        >\n          <MentionModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowMentionPicker(false);\n            }}\n            defaultSearchTerm={showMentionPicker?.defaultSearchTerm}\n            onSelect={(socialAddress) => {\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              let textBeforeMention = text.slice(0, selectionStart);\n              // Remove zero-width space from end of text\n              textBeforeMention = textBeforeMention.replace(/\\u200B$/, '');\n              const spaceBeforeMention = textBeforeMention\n                ? /[\\s\\t\\n\\r]$/.test(textBeforeMention)\n                  ? ''\n                  : ' '\n                : '';\n              const textAfterMention = text.slice(selectionEnd);\n              const spaceAfterMention = /^[\\s\\t\\n\\r]/.test(textAfterMention)\n                ? ''\n                : ' ';\n              const newText =\n                textBeforeMention +\n                spaceBeforeMention +\n                '@' +\n                socialAddress +\n                spaceAfterMention +\n                textAfterMention;\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd +\n                1 +\n                socialAddress.length +\n                spaceAfterMention.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n      {showEmoji2Picker && (\n        <Modal\n          onClose={() => {\n            setShowEmoji2Picker(false);\n          }}\n        >\n          <CustomEmojisModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowEmoji2Picker(false);\n            }}\n            defaultSearchTerm={showEmoji2Picker?.defaultSearchTerm}\n            onSelect={(emojiShortcode) => {\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              let textBeforeEmoji = text.slice(0, selectionStart);\n              // Remove zero-width space from end of text\n              textBeforeEmoji = textBeforeEmoji.replace(/\\u200B$/, '');\n              const spaceBeforeEmoji = textBeforeEmoji\n                ? /[\\s\\t\\n\\r]$/.test(textBeforeEmoji)\n                  ? ''\n                  : ' '\n                : '';\n              const textAfterEmoji = text.slice(selectionEnd);\n              const spaceAfterEmoji = /^[\\s\\t\\n\\r]/.test(textAfterEmoji)\n                ? ''\n                : ' ';\n              const newText =\n                textBeforeEmoji +\n                spaceBeforeEmoji +\n                emojiShortcode +\n                spaceAfterEmoji +\n                textAfterEmoji;\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd + emojiShortcode.length + spaceAfterEmoji.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n      {showGIFPicker && (\n        <Modal\n          onClose={() => {\n            setShowGIFPicker(false);\n          }}\n        >\n          <GIFPickerModal\n            onClose={() => setShowGIFPicker(false)}\n            onSelect={({ url, type, alt_text }) => {\n              console.log('GIF URL', url);\n              if (mediaAttachments.length >= maxMediaAttachments) {\n                alert(\n                  plural(maxMediaAttachments, {\n                    one: 'You can only attach up to 1 file.',\n                    other: 'You can only attach up to # files.',\n                  }),\n                );\n                return;\n              }\n              // Download the GIF and insert it as media attachment\n              (async () => {\n                let theToast;\n                try {\n                  theToast = showToast({\n                    text: t`Downloading GIF…`,\n                    duration: -1,\n                  });\n                  const blob = await fetch(url, {\n                    referrerPolicy: 'no-referrer',\n                  }).then((res) => res.blob());\n                  const file = new File(\n                    [blob],\n                    type === 'video/mp4' ? 'video.mp4' : 'image.gif',\n                    {\n                      type,\n                    },\n                  );\n                  const newMediaAttachments = [\n                    ...mediaAttachments,\n                    {\n                      file,\n                      type,\n                      size: file.size,\n                      id: null,\n                      description: alt_text || '',\n                    },\n                  ];\n                  setMediaAttachments(newMediaAttachments);\n                  theToast?.hideToast?.();\n                } catch (err) {\n                  console.error(err);\n                  theToast?.hideToast?.();\n                  showToast(t`Failed to download GIF`);\n                }\n              })();\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst supportsCameraCapture = (() => {\n  const input = document.createElement('input');\n  return 'capture' in input;\n})();\nfunction CameraCaptureInput({\n  hidden,\n  disabled = false,\n  supportedMimeTypes,\n  setMediaAttachments,\n}) {\n  return (\n    <input\n      type=\"file\"\n      hidden={hidden}\n      accept={supportedMimeTypes?.join(',')}\n      capture=\"environment\"\n      disabled={disabled}\n      onChange={(e) => {\n        const files = e.target.files;\n        if (!files) return;\n        const mediaFile = Array.from(files)[0];\n        if (!mediaFile) return;\n        setMediaAttachments((attachments) => [\n          ...attachments,\n          {\n            file: mediaFile,\n            type: mediaFile.type,\n            size: mediaFile.size,\n            url: URL.createObjectURL(mediaFile),\n            id: null, // indicate uploaded state\n            description: null,\n          },\n        ]);\n        e.target.value = null;\n      }}\n    />\n  );\n}\n\nfunction FilePickerInput({\n  hidden,\n  supportedMimeTypes,\n  maxMediaAttachments,\n  mediaAttachments,\n  disabled = false,\n  setMediaAttachments,\n}) {\n  return (\n    <input\n      type=\"file\"\n      hidden={hidden}\n      accept={supportedMimeTypes?.join(',')}\n      multiple={\n        maxMediaAttachments === undefined ||\n        maxMediaAttachments - mediaAttachments >= 2\n      }\n      disabled={disabled}\n      onChange={(e) => {\n        const files = e.target.files;\n        if (!files) return;\n\n        const mediaFiles = Array.from(files).map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null, // indicate uploaded state\n          description: null,\n        }));\n        console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n        // Validate max media attachments\n        if (mediaAttachments.length + mediaFiles.length > maxMediaAttachments) {\n          alert(\n            plural(maxMediaAttachments, {\n              one: 'You can only attach up to 1 file.',\n              other: 'You can only attach up to # files.',\n            }),\n          );\n        } else {\n          setMediaAttachments((attachments) => {\n            return attachments.concat(mediaFiles);\n          });\n        }\n        // Reset\n        e.target.value = '';\n      }}\n    />\n  );\n}\n\nfunction autoResizeTextarea(textarea) {\n  if (!textarea) return;\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\n  if (offsetHeight < window.innerHeight) {\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\n    // No idea why it does that, will re-investigate in far future\n    const offset = offsetHeight - clientHeight;\n    const height = value ? scrollHeight + offset + 'px' : null;\n    textarea.style.height = height;\n  }\n}\n\nasync function _getCustomEmojis(instance, masto) {\n  const emojis = await masto.v1.customEmojis.list();\n  const visibleEmojis = emojis.filter((e) => e.visibleInPicker);\n  const searcher = new Fuse(visibleEmojis, {\n    keys: ['shortcode'],\n    findAllMatches: true,\n  });\n  return [visibleEmojis, searcher];\n}\nconst getCustomEmojis = pmem(_getCustomEmojis, {\n  // Limit by time to reduce memory usage\n  // Cached by instance\n  matchesArg: (cacheKeyArg, keyArg) => cacheKeyArg.instance === keyArg.instance,\n  maxAge: 30 * 60 * 1000, // 30 minutes\n});\n\nconst detectLangs = async (text) => {\n  if (langDetector) {\n    const langs = await langDetector.detect(text);\n    if (langs?.length) {\n      return langs.slice(0, 2).map((lang) => lang.detectedLanguage);\n    }\n  }\n  const { detectAll } = await import('tinyld/light');\n  const langs = detectAll(text);\n  if (langs?.length) {\n    // return max 2\n    return langs.slice(0, 2).map((lang) => lang.lang);\n  }\n  return null;\n};\n\nconst Textarea = forwardRef((props, ref) => {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const {\n    maxCharacters,\n    performSearch = () => {},\n    onTrigger = () => {},\n    ...textareaProps\n  } = props;\n  // const snapStates = useSnapshot(states);\n  // const charCount = snapStates.composerCharacterCount;\n\n  // const customEmojis = useRef();\n  const searcherRef = useRef();\n  useEffect(() => {\n    getCustomEmojis(instance, masto)\n      .then((r) => {\n        const [emojis, searcher] = r;\n        searcherRef.current = searcher;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  const hasTextExpanderRef = useRef(false);\n  useEffect(() => {\n    let handleChange,\n      handleValue,\n      handleCommited,\n      handleActivate,\n      handleDeactivate;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          // const emojis = filterShortcodes(customEmojis.current, text);\n          const results = searcherRef.current?.search(text, {\n            limit: 5,\n          });\n          let html = '';\n          results.forEach(({ item: emoji }) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                ${encodeHTML(shortcode)}\n              </li>`;\n          });\n          html += `<li role=\"option\" data-value=\"\" data-more=\"${text}\">${t`More…`}</li>`;\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: results.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type] || value;\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                  history,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br><span class=\"bidi-isolate\">@${encodeHTML(\n                          acct,\n                        )}</span>\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  const total = history?.reduce?.(\n                    (acc, cur) => acc + +cur.uses,\n                    0,\n                  );\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\n                      ${\n                        total\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\n                          : ''\n                      }\n                    </li>\n                  `;\n                }\n              });\n              if (type === 'accounts') {\n                html += `<li role=\"option\" data-value=\"\" data-more=\"${text}\">${t`More…`}</li>`;\n              }\n              menu.innerHTML = html;\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        const { value, more } = item.dataset;\n        if (key === ':') {\n          e.detail.value = value ? `:${value}:` : '​'; // zero-width space\n          if (more) {\n            // Prevent adding space after the above value\n            e.detail.continue = true;\n\n            setTimeout(() => {\n              onTrigger?.({\n                name: 'custom-emojis',\n                defaultSearchTerm: more,\n              });\n            }, 300);\n          }\n        } else if (key === '@') {\n          e.detail.value = value ? `@${value}` : '​'; // zero-width space\n          if (more) {\n            e.detail.continue = true;\n            setTimeout(() => {\n              onTrigger?.({\n                name: 'mention',\n                defaultSearchTerm: more,\n              });\n            }, 300);\n          }\n        } else {\n          e.detail.value = `${key}${value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n        // fire input event\n        if (ref.current) {\n          const event = new Event('input', { bubbles: true });\n          ref.current.dispatchEvent(event);\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n\n      handleActivate = () => {\n        hasTextExpanderRef.current = true;\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-activate',\n        handleActivate,\n      );\n\n      handleDeactivate = () => {\n        hasTextExpanderRef.current = false;\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-deactivate',\n        handleDeactivate,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-activate',\n          handleActivate,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-deactivate',\n          handleDeactivate,\n        );\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Resize observer for textarea\n    const textarea = ref.current;\n    if (!textarea) return;\n    const resizeObserver = new ResizeObserver(() => {\n      // Get height of textarea, set height to textExpander\n      if (textExpanderRef.current) {\n        const { height } = textarea.getBoundingClientRect();\n        textExpanderRef.current.style.height = height + 'px';\n      }\n    });\n    resizeObserver.observe(textarea);\n  }, []);\n\n  const slowHighlightPerf = useRef(0); // increment if slow\n  const composeHighlightRef = useRef();\n  const throttleHighlightText = useThrottledCallback((text) => {\n    if (!composeHighlightRef.current) return;\n    if (slowHighlightPerf.current > 3) {\n      // After 3 times of lag, disable highlighting\n      composeHighlightRef.current.innerHTML = '';\n      composeHighlightRef.current = null; // Destroy the whole thing\n      throttleHighlightText?.cancel?.();\n      return;\n    }\n    let start;\n    let end;\n    if (slowHighlightPerf.current <= 3) start = Date.now();\n    composeHighlightRef.current.innerHTML =\n      highlightText(text, {\n        maxCharacters,\n      }) + '\\n';\n    if (slowHighlightPerf.current <= 3) end = Date.now();\n    console.debug('HIGHLIGHT PERF', { start, end, diff: end - start });\n    if (start && end && end - start > 50) {\n      // if slow, increment\n      slowHighlightPerf.current++;\n    }\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\n  }, 500);\n\n  const debouncedAutoDetectLanguage = useDebouncedCallback(() => {\n    // Make use of the highlightRef to get the DOM\n    // Clone the dom\n    const dom = composeHighlightRef.current?.cloneNode(true);\n    if (!dom) return;\n    // Remove mark\n    dom.querySelectorAll('mark').forEach((mark) => {\n      mark.remove();\n    });\n    const text = dom.innerText?.trim();\n    if (!text) return;\n    (async () => {\n      const langs = await detectLangs(text);\n      if (langs?.length) {\n        onTrigger?.({\n          name: 'auto-detect-language',\n          languages: langs,\n        });\n      }\n    })();\n  }, 2000);\n\n  return (\n    <text-expander\n      ref={textExpanderRef}\n      keys=\"@ # :\"\n      class=\"compose-field-container\"\n    >\n      <textarea\n        class=\"compose-field\"\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onKeyDown={(e) => {\n          // Get line before cursor position after pressing 'Enter'\n          const { key, target } = e;\n          const hasTextExpander = hasTextExpanderRef.current;\n          if (\n            key === 'Enter' &&\n            !(e.ctrlKey || e.metaKey || hasTextExpander) &&\n            !e.isComposing\n          ) {\n            try {\n              const { value, selectionStart } = target;\n              const textBeforeCursor = value.slice(0, selectionStart);\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\n              if (lastLine) {\n                // If line starts with \"- \" or \"12. \"\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\n                  // insert \"- \" at cursor position\n                  const [_, preSpaces, bullet, postSpaces, anything] =\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\n                  if (anything) {\n                    e.preventDefault();\n                    const [number] = bullet.match(/\\d+/) || [];\n                    const newBullet = number ? `${+number + 1}.` : '-';\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\n                    target.setRangeText(text, selectionStart, selectionStart);\n                    const pos = selectionStart + text.length;\n                    target.setSelectionRange(pos, pos);\n                  } else {\n                    // trim the line before the cursor, then insert new line\n                    const pos = selectionStart - lastLine.length;\n                    target.setRangeText('', pos, selectionStart);\n                  }\n                  autoResizeTextarea(target);\n                  target.dispatchEvent(new Event('input'));\n                }\n              }\n            } catch (e) {\n              // silent fail\n              console.error(e);\n            }\n          }\n          if (composeHighlightRef.current) {\n            composeHighlightRef.current.scrollTop = target.scrollTop;\n          }\n        }}\n        onInput={(e) => {\n          const { target } = e;\n          const text = target.value;\n          setText(text);\n          autoResizeTextarea(target);\n          props.onInput?.(e);\n          throttleHighlightText(text);\n          debouncedAutoDetectLanguage();\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n        onScroll={(e) => {\n          if (composeHighlightRef.current) {\n            const { scrollTop } = e.target;\n            composeHighlightRef.current.scrollTop = scrollTop;\n          }\n        }}\n      />\n      <div\n        ref={composeHighlightRef}\n        class=\"compose-highlight\"\n        aria-hidden=\"true\"\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (hidden) {\n    return <span class=\"char-counter\" hidden />;\n  }\n  return (\n    <span\n      class=\"char-counter\"\n      title={`${leftChars}/${maxCharacters}`}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    >\n      <meter\n        class={`${\n          leftChars <= -10\n            ? 'explode'\n            : leftChars <= 0\n              ? 'danger'\n              : leftChars <= 20\n                ? 'warning'\n                : ''\n        }`}\n        value={charCount}\n        max={maxCharacters}\n      />\n      <span class=\"counter\">{leftChars}</span>\n    </span>\n  );\n}\n\nfunction scaleDimension(matrix, matrixLimit, width, height) {\n  // matrix = number of pixels\n  // matrixLimit = max number of pixels\n  // Calculate new width and height, downsize to within the limit, preserve aspect ratio, no decimals\n  const scalingFactor = Math.sqrt(matrixLimit / matrix);\n  const newWidth = Math.floor(width * scalingFactor);\n  const newHeight = Math.floor(height * scalingFactor);\n  return { newWidth, newHeight };\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  descriptionLimit = 1500,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const { i18n, t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { type, id, file } = attachment;\n  const url = useMemo(\n    () => (file ? URL.createObjectURL(file) : attachment.url),\n    [file, attachment.url],\n  );\n  console.log({ attachment });\n\n  const checkMaxError = !!file?.size;\n  const configuration = checkMaxError ? getCurrentInstanceConfiguration() : {};\n  const {\n    mediaAttachments: {\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    } = {},\n  } = configuration || {};\n\n  const [maxError, setMaxError] = useState(() => {\n    if (!checkMaxError) return null;\n    if (\n      type.startsWith('image') &&\n      imageSizeLimit &&\n      file.size > imageSizeLimit\n    ) {\n      return {\n        type: 'imageSizeLimit',\n        details: {\n          imageSize: file.size,\n          imageSizeLimit,\n        },\n      };\n    } else if (\n      type.startsWith('video') &&\n      videoSizeLimit &&\n      file.size > videoSizeLimit\n    ) {\n      return {\n        type: 'videoSizeLimit',\n        details: {\n          videoSize: file.size,\n          videoSizeLimit,\n        },\n      };\n    }\n    return null;\n  });\n\n  const [imageMatrix, setImageMatrix] = useState({});\n  useEffect(() => {\n    if (!checkMaxError || !imageMatrixLimit) return;\n    if (imageMatrix?.matrix > imageMatrixLimit) {\n      setMaxError({\n        type: 'imageMatrixLimit',\n        details: {\n          imageMatrix: imageMatrix?.matrix,\n          imageMatrixLimit,\n          width: imageMatrix?.width,\n          height: imageMatrix?.height,\n        },\n      });\n    }\n  }, [imageMatrix, imageMatrixLimit, checkMaxError]);\n\n  const [videoMatrix, setVideoMatrix] = useState({});\n  useEffect(() => {\n    if (!checkMaxError || !videoMatrixLimit) return;\n    if (videoMatrix?.matrix > videoMatrixLimit) {\n      setMaxError({\n        type: 'videoMatrixLimit',\n        details: {\n          videoMatrix: videoMatrix?.matrix,\n          videoMatrixLimit,\n          width: videoMatrix?.width,\n          height: videoMatrix?.height,\n        },\n      });\n    }\n  }, [videoMatrix, videoMatrixLimit, checkMaxError]);\n\n  const [description, setDescription] = useState(attachment.description);\n  const [suffixType, subtype] = type.split('/');\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    250,\n  );\n  useEffect(() => {\n    debouncedOnDescriptionChange(description);\n  }, [description, debouncedOnDescriptionChange]);\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">\n            <Trans>Uploaded</Trans>\n          </span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: t`Image description`,\n              video: t`Video description`,\n              audio: t`Audio description`,\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled || uiState === 'loading'}\n          class={uiState === 'loading' ? 'loading' : ''}\n          maxlength={descriptionLimit} // Not unicode-aware :(\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            // debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  const toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  const maxErrorToast = useRef(null);\n\n  const maxErrorText = (err) => {\n    const { type, details } = err;\n    switch (type) {\n      case 'imageSizeLimit': {\n        const { imageSize, imageSizeLimit } = details;\n        return t`File size too large. Uploading might encounter issues. Try reduce the file size from ${prettyBytes(\n          imageSize,\n        )} to ${prettyBytes(imageSizeLimit)} or lower.`;\n      }\n      case 'imageMatrixLimit': {\n        const { imageMatrix, imageMatrixLimit, width, height } = details;\n        const { newWidth, newHeight } = scaleDimension(\n          imageMatrix,\n          imageMatrixLimit,\n          width,\n          height,\n        );\n        return t`Dimension too large. Uploading might encounter issues. Try reduce dimension from ${i18n.number(\n          width,\n        )}×${i18n.number(height)}px to ${i18n.number(newWidth)}×${i18n.number(\n          newHeight,\n        )}px.`;\n      }\n      case 'videoSizeLimit': {\n        const { videoSize, videoSizeLimit } = details;\n        return t`File size too large. Uploading might encounter issues. Try reduce the file size from ${prettyBytes(\n          videoSize,\n        )} to ${prettyBytes(videoSizeLimit)} or lower.`;\n      }\n      case 'videoMatrixLimit': {\n        const { videoMatrix, videoMatrixLimit, width, height } = details;\n        const { newWidth, newHeight } = scaleDimension(\n          videoMatrix,\n          videoMatrixLimit,\n          width,\n          height,\n        );\n        return t`Dimension too large. Uploading might encounter issues. Try reduce dimension from ${i18n.number(\n          width,\n        )}×${i18n.number(height)}px to ${i18n.number(newWidth)}×${i18n.number(\n          newHeight,\n        )}px.`;\n      }\n      case 'videoFrameRateLimit': {\n        // Not possible to detect this on client-side for now\n        return t`Frame rate too high. Uploading might encounter issues.`;\n      }\n    }\n  };\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          tabIndex=\"0\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img\n              src={url}\n              alt=\"\"\n              onLoad={(e) => {\n                if (!checkMaxError) return;\n                const { naturalWidth, naturalHeight } = e.target;\n                setImageMatrix({\n                  matrix: naturalWidth * naturalHeight,\n                  width: naturalWidth,\n                  height: naturalHeight,\n                });\n              }}\n            />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video\n              src={url + '#t=0.1'} // Make Safari show 1st-frame preview\n              playsinline\n              muted\n              disablePictureInPicture\n              preload=\"metadata\"\n              onLoadedMetadata={(e) => {\n                if (!checkMaxError) return;\n                const { videoWidth, videoHeight } = e.target;\n                if (videoWidth && videoHeight) {\n                  setVideoMatrix({\n                    matrix: videoWidth * videoHeight,\n                    width: videoWidth,\n                    height: videoHeight,\n                  });\n                }\n              }}\n            />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" alt={t`Remove`} />\n          </button>\n          {!!maxError && (\n            <button\n              type=\"button\"\n              class=\"media-error\"\n              title={maxErrorText(maxError)}\n              onClick={() => {\n                if (maxErrorToast.current) {\n                  maxErrorToast.current.hideToast();\n                }\n                maxErrorToast.current = showToast({\n                  text: maxErrorText(maxError),\n                  duration: 10_000,\n                });\n              }}\n            >\n              <Icon icon=\"alert\" alt={t`Error`} />\n            </button>\n          )}\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          onClose={() => {\n            setShowModal(false);\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                {\n                  {\n                    image: t`Edit image description`,\n                    video: t`Edit video description`,\n                    audio: t`Edit audio description`,\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              <div class=\"media-form\">\n                {descTextarea}\n                <footer>\n                  {suffixType === 'image' &&\n                    /^(png|jpe?g|gif|webp)$/i.test(subtype) &&\n                    !!states.settings.mediaAltGenerator &&\n                    !!IMG_ALT_API_URL && (\n                      <Menu2\n                        portal={{\n                          target: document.body,\n                        }}\n                        containerProps={{\n                          style: {\n                            zIndex: 1001,\n                          },\n                        }}\n                        align=\"center\"\n                        position=\"anchor\"\n                        overflow=\"auto\"\n                        menuButton={\n                          <button type=\"button\" class=\"plain\">\n                            <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                          </button>\n                        }\n                      >\n                        <MenuItem\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            setUIState('loading');\n                            toastRef.current = showToast({\n                              text: t`Generating description. Please wait…`,\n                              duration: -1,\n                            });\n                            // POST with multipart\n                            (async function () {\n                              try {\n                                const body = new FormData();\n                                body.append('image', file);\n                                const response = await fetch(IMG_ALT_API_URL, {\n                                  method: 'POST',\n                                  body,\n                                }).then((r) => r.json());\n                                if (response.error) {\n                                  throw new Error(response.error);\n                                }\n                                setDescription(response.description);\n                              } catch (e) {\n                                console.error(e);\n                                showToast(\n                                  e.message\n                                    ? t`Failed to generate description: ${e.message}`\n                                    : t`Failed to generate description`,\n                                );\n                              } finally {\n                                setUIState('default');\n                                toastRef.current?.hideToast?.();\n                              }\n                            })();\n                          }}\n                        >\n                          <Icon icon=\"sparkles2\" />\n                          {lang && lang !== 'en' ? (\n                            <small>\n                              <Trans>Generate description…</Trans>\n                              <br />\n                              (English)\n                            </small>\n                          ) : (\n                            <span>\n                              <Trans>Generate description…</Trans>\n                            </span>\n                          )}\n                        </MenuItem>\n                        {!!lang && lang !== 'en' && (\n                          <MenuItem\n                            disabled={uiState === 'loading'}\n                            onClick={() => {\n                              setUIState('loading');\n                              toastRef.current = showToast({\n                                text: t`Generating description. Please wait…`,\n                                duration: -1,\n                              });\n                              // POST with multipart\n                              (async function () {\n                                try {\n                                  const body = new FormData();\n                                  body.append('image', file);\n                                  const params = `?lang=${lang}`;\n                                  const response = await fetch(\n                                    IMG_ALT_API_URL + params,\n                                    {\n                                      method: 'POST',\n                                      body,\n                                    },\n                                  ).then((r) => r.json());\n                                  if (response.error) {\n                                    throw new Error(response.error);\n                                  }\n                                  setDescription(response.description);\n                                } catch (e) {\n                                  console.error(e);\n                                  showToast(\n                                    t`Failed to generate description${\n                                      e?.message ? `: ${e.message}` : ''\n                                    }`,\n                                  );\n                                } finally {\n                                  setUIState('default');\n                                  toastRef.current?.hideToast?.();\n                                }\n                              })();\n                            }}\n                          >\n                            <Icon icon=\"sparkles2\" />\n                            <small>\n                              <Trans>Generate description…</Trans>\n                              <br />\n                              <Trans>\n                                ({localeCode2Text(lang)}){' '}\n                                <span class=\"more-insignificant\">\n                                  — experimental\n                                </span>\n                              </Trans>\n                            </small>\n                          </MenuItem>\n                        )}\n                      </Menu2>\n                    )}\n                  <button\n                    type=\"button\"\n                    class=\"light block\"\n                    onClick={() => {\n                      setShowModal(false);\n                    }}\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Done</Trans>\n                  </button>\n                </footer>\n              </div>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { t } = useLingui();\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={t`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" alt={t`Remove`} />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          <Trans>Multiple choices</Trans>\n        </label>\n        <label class=\"expires-in\">\n          <Trans>Duration</Trans>{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([value, label]) => (\n                <option value={value} key={value}>\n                  {label()}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          <Trans>Remove poll</Trans>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n          ? -1\n          : bStartsWith\n            ? 1\n            : bothContain\n              ? a.length - b.length\n              : aContains\n                ? -1\n                : bContains\n                  ? 1\n                  : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nfunction MentionModal({\n  onClose = () => {},\n  onSelect = () => {},\n  defaultSearchTerm,\n}) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (term) => {\n    if (!term) return;\n    setUIState('loading');\n    (async () => {\n      try {\n        const accounts = await masto.v1.accounts.search.list({\n          q: term,\n          limit: 40,\n          resolve: false,\n        });\n        setAccounts(accounts);\n        loadRelationships(accounts);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  };\n\n  const debouncedLoadAccounts = useDebouncedCallback(loadAccounts, 1000);\n\n  useEffect(() => {\n    loadAccounts();\n  }, [loadAccounts]);\n\n  const inputRef = useRef();\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      // Put cursor at the end\n      if (inputRef.current.value) {\n        inputRef.current.selectionStart = inputRef.current.value.length;\n        inputRef.current.selectionEnd = inputRef.current.value.length;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (defaultSearchTerm) {\n      loadAccounts(defaultSearchTerm);\n    }\n  }, [defaultSearchTerm]);\n\n  const selectAccount = (account) => {\n    const socialAddress = account.acct;\n    onSelect(socialAddress);\n    onClose();\n  };\n\n  useHotkeys(\n    'enter',\n    () => {\n      const selectedAccount = accounts[selectedIndex];\n      if (selectedAccount) {\n        selectAccount(selectedAccount);\n      }\n    },\n    {\n      preventDefault: true,\n      enableOnFormTags: ['input'],\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const listRef = useRef();\n  useHotkeys(\n    'down',\n    () => {\n      if (selectedIndex < accounts.length - 1) {\n        setSelectedIndex(selectedIndex + 1);\n      } else {\n        setSelectedIndex(0);\n      }\n      setTimeout(() => {\n        const selectedItem = listRef.current.querySelector('.selected');\n        if (selectedItem) {\n          selectedItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n        }\n      }, 1);\n    },\n    {\n      preventDefault: true,\n      enableOnFormTags: ['input'],\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    'up',\n    () => {\n      if (selectedIndex > 0) {\n        setSelectedIndex(selectedIndex - 1);\n      } else {\n        setSelectedIndex(accounts.length - 1);\n      }\n      setTimeout(() => {\n        const selectedItem = listRef.current.querySelector('.selected');\n        if (selectedItem) {\n          selectedItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n        }\n      }, 1);\n    },\n    {\n      preventDefault: true,\n      enableOnFormTags: ['input'],\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  return (\n    <div id=\"mention-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            debouncedLoadAccounts.flush?.();\n            // const searchTerm = inputRef.current.value;\n            // debouncedLoadAccounts(searchTerm);\n          }}\n        >\n          <input\n            ref={inputRef}\n            required\n            type=\"search\"\n            class=\"block\"\n            placeholder={t`Search accounts`}\n            onInput={(e) => {\n              const { value } = e.target;\n              debouncedLoadAccounts(value);\n            }}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            defaultValue={defaultSearchTerm || ''}\n          />\n        </form>\n      </header>\n      <main>\n        {accounts?.length > 0 ? (\n          <ul\n            ref={listRef}\n            class={`accounts-list ${uiState === 'loading' ? 'loading' : ''}`}\n          >\n            {accounts.map((account, i) => {\n              const relationship = relationshipsMap[account.id];\n              return (\n                <li\n                  key={account.id}\n                  class={i === selectedIndex ? 'selected' : ''}\n                >\n                  <AccountBlock\n                    avatarSize=\"xxl\"\n                    account={account}\n                    relationship={relationship}\n                    showStats\n                    showActivity\n                  />\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    onClick={() => {\n                      selectAccount(account);\n                    }}\n                  >\n                    <Icon icon=\"plus\" size=\"xl\" alt={t`Add`} />\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        ) : uiState === 'error' ? (\n          <div class=\"ui-state\">\n            <p>\n              <Trans>Error loading accounts</Trans>\n            </p>\n          </div>\n        ) : null}\n      </main>\n    </div>\n  );\n}\n\nfunction CustomEmojisModal({\n  masto,\n  instance,\n  onClose = () => {},\n  onSelect = () => {},\n  defaultSearchTerm,\n}) {\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const customEmojisList = useRef([]);\n  const [customEmojis, setCustomEmojis] = useState([]);\n  const recentlyUsedCustomEmojis = useMemo(\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\n  );\n  const searcherRef = useRef();\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const [emojis, searcher] = await getCustomEmojis(instance, masto);\n        console.log('emojis', emojis);\n        searcherRef.current = searcher;\n        setCustomEmojis(emojis);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const customEmojisCatList = useMemo(() => {\n    // Group emojis by category\n    const emojisCat = {\n      '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\n        customEmojis.find((e) => e.shortcode === emoji.shortcode),\n      ),\n    };\n    const othersCat = [];\n    customEmojis.forEach((emoji) => {\n      customEmojisList.current?.push?.(emoji);\n      if (!emoji.category) {\n        othersCat.push(emoji);\n        return;\n      }\n      if (!emojisCat[emoji.category]) {\n        emojisCat[emoji.category] = [];\n      }\n      emojisCat[emoji.category].push(emoji);\n    });\n    if (othersCat.length) {\n      emojisCat['--others--'] = othersCat;\n    }\n    return emojisCat;\n  }, [customEmojis]);\n\n  const scrollableRef = useRef();\n  const [matches, setMatches] = useState(null);\n  const onFind = useCallback(\n    (e) => {\n      const { value } = e.target;\n      if (value) {\n        const results = searcherRef.current?.search(value, {\n          limit: CUSTOM_EMOJIS_COUNT,\n        });\n        setMatches(results.map((r) => r.item));\n        scrollableRef.current?.scrollTo?.(0, 0);\n      } else {\n        setMatches(null);\n      }\n    },\n    [customEmojis],\n  );\n  useEffect(() => {\n    if (defaultSearchTerm && customEmojis?.length) {\n      onFind({ target: { value: defaultSearchTerm } });\n    }\n  }, [defaultSearchTerm, onFind, customEmojis]);\n\n  const onSelectEmoji = useCallback(\n    (emoji) => {\n      onSelect?.(emoji);\n      onClose?.();\n\n      queueMicrotask(() => {\n        let recentlyUsedCustomEmojis =\n          store.account.get('recentlyUsedCustomEmojis') || [];\n        const recentlyUsedEmojiIndex = recentlyUsedCustomEmojis.findIndex(\n          (e) => e.shortcode === emoji.shortcode,\n        );\n        if (recentlyUsedEmojiIndex !== -1) {\n          // Move emoji to index 0\n          recentlyUsedCustomEmojis.splice(recentlyUsedEmojiIndex, 1);\n          recentlyUsedCustomEmojis.unshift(emoji);\n        } else {\n          recentlyUsedCustomEmojis.unshift(emoji);\n          // Remove unavailable ones\n          recentlyUsedCustomEmojis = recentlyUsedCustomEmojis.filter((e) =>\n            customEmojisList.current?.find?.(\n              (emoji) => emoji.shortcode === e.shortcode,\n            ),\n          );\n          // Limit to 10\n          recentlyUsedCustomEmojis = recentlyUsedCustomEmojis.slice(0, 10);\n        }\n\n        // Store back\n        store.account.set('recentlyUsedCustomEmojis', recentlyUsedCustomEmojis);\n      });\n    },\n    [onSelect],\n  );\n\n  const inputRef = useRef();\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      // Put cursor at the end\n      if (inputRef.current.value) {\n        inputRef.current.selectionStart = inputRef.current.value.length;\n        inputRef.current.selectionEnd = inputRef.current.value.length;\n      }\n    }\n  }, []);\n\n  return (\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <div>\n          <b>\n            <Trans>Custom emojis</Trans>\n          </b>{' '}\n          {uiState === 'loading' ? (\n            <Loader />\n          ) : (\n            <small class=\"insignificant\"> • {instance}</small>\n          )}\n        </div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const emoji = matches[0];\n            if (emoji) {\n              onSelectEmoji(`:${emoji.shortcode}:`);\n            }\n          }}\n        >\n          <input\n            ref={inputRef}\n            type=\"search\"\n            placeholder={t`Search emoji`}\n            onInput={onFind}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            defaultValue={defaultSearchTerm || ''}\n          />\n        </form>\n      </header>\n      <main ref={scrollableRef}>\n        {matches !== null ? (\n          <ul class=\"custom-emojis-matches custom-emojis-list\">\n            {matches.map((emoji) => (\n              <li key={emoji.shortcode} class=\"custom-emojis-match\">\n                <CustomEmojiButton\n                  emoji={emoji}\n                  onClick={() => {\n                    onSelectEmoji(`:${emoji.shortcode}:`);\n                  }}\n                  showCode\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div class=\"custom-emojis-list\">\n            {uiState === 'error' && (\n              <div class=\"ui-state\">\n                <p>\n                  <Trans>Error loading custom emojis</Trans>\n                </p>\n              </div>\n            )}\n            {uiState === 'default' &&\n              Object.entries(customEmojisCatList).map(\n                ([category, emojis]) =>\n                  !!emojis?.length && (\n                    <div class=\"section-container\">\n                      <div class=\"section-header\">\n                        {{\n                          '--recent--': t`Recently used`,\n                          '--others--': t`Others`,\n                        }[category] || category}\n                      </div>\n                      <CustomEmojisList\n                        emojis={emojis}\n                        onSelect={onSelectEmoji}\n                      />\n                    </div>\n                  ),\n              )}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nconst CustomEmojisList = memo(({ emojis, onSelect }) => {\n  const { i18n } = useLingui();\n  const [max, setMax] = useState(CUSTOM_EMOJIS_COUNT);\n  const showMore = emojis.length > max;\n  return (\n    <section>\n      {emojis.slice(0, max).map((emoji) => (\n        <CustomEmojiButton\n          key={emoji.shortcode}\n          emoji={emoji}\n          onClick={() => {\n            onSelect(`:${emoji.shortcode}:`);\n          }}\n        />\n      ))}\n      {showMore && (\n        <button\n          type=\"button\"\n          class=\"plain small\"\n          onClick={() => setMax(max + CUSTOM_EMOJIS_COUNT)}\n        >\n          <Trans>{i18n.number(emojis.length - max)} more…</Trans>\n        </button>\n      )}\n    </section>\n  );\n});\n\nconst CustomEmojiButton = memo(({ emoji, onClick, showCode }) => {\n  const addEdges = (e) => {\n    // Add edge-left or edge-right class based on self position relative to scrollable parent\n    // If near left edge, add edge-left, if near right edge, add edge-right\n    const buffer = 88;\n    const parent = e.currentTarget.closest('main');\n    if (parent) {\n      const rect = parent.getBoundingClientRect();\n      const selfRect = e.currentTarget.getBoundingClientRect();\n      const targetClassList = e.currentTarget.classList;\n      if (selfRect.left < rect.left + buffer) {\n        targetClassList.add('edge-left');\n        targetClassList.remove('edge-right');\n      } else if (selfRect.right > rect.right - buffer) {\n        targetClassList.add('edge-right');\n        targetClassList.remove('edge-left');\n      } else {\n        targetClassList.remove('edge-left', 'edge-right');\n      }\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"plain4\"\n      onClick={onClick}\n      data-title={showCode ? undefined : emoji.shortcode}\n      onPointerEnter={addEdges}\n      onFocus={addEdges}\n    >\n      <picture>\n        {!!emoji.staticUrl && (\n          <source\n            srcSet={emoji.staticUrl}\n            media=\"(prefers-reduced-motion: reduce)\"\n          />\n        )}\n        <img\n          className=\"shortcode-emoji\"\n          src={emoji.url || emoji.staticUrl}\n          alt={emoji.shortcode}\n          width=\"24\"\n          height=\"24\"\n          loading=\"lazy\"\n          decoding=\"async\"\n        />\n      </picture>\n      {showCode && (\n        <>\n          {' '}\n          <code>{emoji.shortcode}</code>\n        </>\n      )}\n    </button>\n  );\n});\n\nconst GIFS_PER_PAGE = 20;\nfunction GIFPickerModal({ onClose = () => {}, onSelect = () => {} }) {\n  const { i18n, t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const [results, setResults] = useState([]);\n  const formRef = useRef(null);\n  const qRef = useRef(null);\n  const currentOffset = useRef(0);\n  const scrollableRef = useRef(null);\n\n  function fetchGIFs({ offset }) {\n    console.log('fetchGIFs', { offset });\n    if (!qRef.current?.value) return;\n    setUIState('loading');\n    scrollableRef.current?.scrollTo?.({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n    (async () => {\n      try {\n        const query = {\n          api_key: GIPHY_API_KEY,\n          q: qRef.current.value,\n          rating: 'g',\n          limit: GIFS_PER_PAGE,\n          bundle: 'messaging_non_clips',\n          offset,\n          lang: i18n.locale || 'en',\n        };\n        const response = await fetch(\n          'https://api.giphy.com/v1/gifs/search?' + new URLSearchParams(query),\n          {\n            referrerPolicy: 'no-referrer',\n          },\n        ).then((r) => r.json());\n        currentOffset.current = response.pagination?.offset || 0;\n        setResults(response);\n        setUIState('results');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }\n\n  useEffect(() => {\n    qRef.current?.focus();\n  }, []);\n\n  const debouncedOnInput = useDebouncedCallback(() => {\n    fetchGIFs({ offset: 0 });\n  }, 1000);\n\n  return (\n    <div id=\"gif-picker-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            e.preventDefault();\n            fetchGIFs({ offset: 0 });\n          }}\n        >\n          <input\n            ref={qRef}\n            type=\"search\"\n            name=\"q\"\n            placeholder={t`Search GIFs`}\n            required\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellCheck=\"false\"\n            dir=\"auto\"\n            onInput={debouncedOnInput}\n          />\n          <input\n            type=\"image\"\n            class=\"powered-button\"\n            src={poweredByGiphyURL}\n            width=\"86\"\n            height=\"30\"\n            alt={t`Powered by GIPHY`}\n          />\n        </form>\n      </header>\n      <main ref={scrollableRef} class={uiState === 'loading' ? 'loading' : ''}>\n        {uiState === 'default' && (\n          <div class=\"ui-state\">\n            <p class=\"insignificant\">\n              <Trans>Type to search GIFs</Trans>\n            </p>\n          </div>\n        )}\n        {uiState === 'loading' && !results?.data?.length && (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        )}\n        {results?.data?.length > 0 ? (\n          <>\n            <ul>\n              {results.data.map((gif) => {\n                const { id, images, title, alt_text } = gif;\n                const {\n                  fixed_height_small,\n                  fixed_height_downsampled,\n                  fixed_height,\n                  original,\n                } = images;\n                const theImage = fixed_height_small?.url\n                  ? fixed_height_small\n                  : fixed_height_downsampled?.url\n                    ? fixed_height_downsampled\n                    : fixed_height;\n                let { url, webp, width, height } = theImage;\n                if (+height > 100) {\n                  width = (width / height) * 100;\n                  height = 100;\n                }\n                const urlObj = URL.parse(url);\n                const strippedURL = urlObj.origin + urlObj.pathname;\n                let strippedWebP;\n                if (webp) {\n                  const webpObj = URL.parse(webp);\n                  strippedWebP = webpObj.origin + webpObj.pathname;\n                }\n                return (\n                  <li key={id}>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const { mp4, url } = original;\n                        const theURL = mp4 || url;\n                        const urlObj = URL.parse(theURL);\n                        const strippedURL = urlObj.origin + urlObj.pathname;\n                        onClose();\n                        onSelect({\n                          url: strippedURL,\n                          type: mp4 ? 'video/mp4' : 'image/gif',\n                          alt_text: alt_text || title,\n                        });\n                      }}\n                    >\n                      <figure\n                        style={{\n                          '--figure-width': width + 'px',\n                          // width: width + 'px'\n                        }}\n                      >\n                        <picture>\n                          {strippedWebP && (\n                            <source srcset={strippedWebP} type=\"image/webp\" />\n                          )}\n                          <img\n                            src={strippedURL}\n                            width={width}\n                            height={height}\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                            alt={alt_text}\n                            referrerpolicy=\"no-referrer\"\n                            onLoad={(e) => {\n                              e.target.style.backgroundColor = 'transparent';\n                            }}\n                          />\n                        </picture>\n                        <figcaption>{alt_text || title}</figcaption>\n                      </figure>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            <p class=\"pagination\">\n              {results.pagination?.offset > 0 && (\n                <button\n                  type=\"button\"\n                  class=\"light small\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    fetchGIFs({\n                      offset: results.pagination?.offset - GIFS_PER_PAGE,\n                    });\n                  }}\n                >\n                  <Icon icon=\"chevron-left\" />\n                  <span>\n                    <Trans>Previous</Trans>\n                  </span>\n                </button>\n              )}\n              <span />\n              {results.pagination?.offset + results.pagination?.count <\n                results.pagination?.total_count && (\n                <button\n                  type=\"button\"\n                  class=\"light small\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    fetchGIFs({\n                      offset: results.pagination?.offset + GIFS_PER_PAGE,\n                    });\n                  }}\n                >\n                  <span>\n                    <Trans>Next</Trans>\n                  </span>{' '}\n                  <Icon icon=\"chevron-right\" />\n                </button>\n              )}\n            </p>\n          </>\n        ) : (\n          uiState === 'results' && (\n            <div class=\"ui-state\">\n              <p>No results</p>\n            </div>\n          )\n        )}\n        {uiState === 'error' && (\n          <div class=\"ui-state\">\n            <p>\n              <Trans>Error loading GIFs</Trans>\n            </p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Compose;\n"],"file":"assets/compose-nGhUPJqD.js"}